(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    536674,      10423]
NotebookOptionsPosition[    520954,      10137]
NotebookOutlinePosition[    521317,      10153]
CellTagsIndexPosition[    521274,      10150]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Q1 a)", "Title",
 CellChangeTimes->{{3.8280259859084854`*^9, 
  3.828025991264135*^9}},ExpressionUUID->"eb3014e4-2f16-47f0-afa0-\
d1d2cc67de9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"eqn1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"kon", "*", "R", "*", "L"}], "-", 
     RowBox[{"koff", "*", "Rs"}]}], "\[Equal]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.8278524878065057`*^9, 3.8278525089439216`*^9}, {
   3.8279482703937545`*^9, 3.8279482851965857`*^9}, 3.828026235058361*^9},
 CellLabel->
  "In[537]:=",ExpressionUUID->"0b84aa96-46a2-4ef9-97b6-150a5eee3901"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kon", " ", "L", " ", "R"}], "-", 
   RowBox[{"koff", " ", "Rs"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.8278525093916073`*^9, {3.8279482793251085`*^9, 3.827948285538291*^9}, 
   3.8279485066836843`*^9, 3.8280226623586893`*^9, 3.8280260578161883`*^9, 
   3.828026236204485*^9, 3.8280289251419926`*^9, 3.8281012120824986`*^9},
 CellLabel->
  "Out[537]=",ExpressionUUID->"a30e7e30-b8cf-4319-88a5-ae0012b3355f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rearrange equation 3 to solve for Y*, Y*=Ys", "Subsubsection",
 CellChangeTimes->{{3.8280259989961047`*^9, 3.8280260464273486`*^9}, {
  3.8280262946084557`*^9, 
  3.8280262947370944`*^9}},ExpressionUUID->"6152bcad-e914-4e9f-98fc-\
019b2ef039bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"v3", "*", 
     RowBox[{"Y", "/", 
      RowBox[{"(", 
       RowBox[{"k3", "+", "Y"}], ")"}]}]}], "\[Equal]", 
    RowBox[{"v4", "*", 
     RowBox[{"Ys", "/", 
      RowBox[{"(", 
       RowBox[{"k4", "+", "Ys"}], ")"}]}]}]}], ",", "Ys"}], "]"}]], "Input",
 CellChangeTimes->{{3.827599909793977*^9, 3.8276000113389096`*^9}, {
  3.82802617818084*^9, 3.8280261833290343`*^9}},
 CellLabel->
  "In[538]:=",ExpressionUUID->"8370b952-9c4f-4704-b8ff-e27aaa8e332a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Ys", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"k4", " ", "v3", " ", "Y"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k3"}], " ", "v4"}], "+", 
       RowBox[{"v3", " ", "Y"}], "-", 
       RowBox[{"v4", " ", "Y"}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8276996093116817`*^9, 3.8279485075017*^9, 
  3.828022663231711*^9, 3.8280261840925894`*^9, 3.828028925288906*^9, 
  3.8281012123263583`*^9},
 CellLabel->
  "Out[538]=",ExpressionUUID->"26e981a2-63f9-4e42-9ba7-7120dfc869d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eqn1", ",", "Rs"}], "]"}]], "Input",
 CellChangeTimes->{{3.8278525104873276`*^9, 3.827852516123384*^9}},
 CellLabel->
  "In[539]:=",ExpressionUUID->"ad7d0229-cefb-4939-8e29-fa81ab3e45aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Rs", "\[Rule]", 
    FractionBox[
     RowBox[{"kon", " ", "L", " ", "R"}], "koff"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.827852516474341*^9, 3.827948507602642*^9, 
  3.828022663390619*^9, 3.828028925379856*^9, 3.8281012124123087`*^9},
 CellLabel->
  "Out[539]=",ExpressionUUID->"ab70aadf-4171-4d3a-b9b8-9251b4101dad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rearrange equation 3 to solve for X*, X*=Xs", "Subsubsection",
 CellChangeTimes->{{3.8280259989961047`*^9, 3.8280260267642317`*^9}, {
  3.828026303287724*^9, 
  3.82802630675055*^9}},ExpressionUUID->"633a6377-1991-497a-9d46-\
84418174df61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"V1", "*", 
      RowBox[{"X", "/", 
       RowBox[{"(", 
        RowBox[{"K1", "+", "X"}], ")"}]}]}], "-", 
     RowBox[{"V2", "*", 
      RowBox[{"Xs", "/", 
       RowBox[{"(", 
        RowBox[{"K2", "+", "Xs"}], ")"}]}]}]}], "\[Equal]", "0"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.827852520280424*^9, 3.8278525734207335`*^9}, 
   3.8280261735985975`*^9},
 CellLabel->
  "In[540]:=",ExpressionUUID->"66d2a733-56c8-4b6a-aabe-790e76e32ddb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eqn2", ",", "Xs"}], "]"}]], "Input",
 CellChangeTimes->{{3.827854222828635*^9, 3.827854243193224*^9}},
 CellLabel->
  "In[541]:=",ExpressionUUID->"dfef558a-ef9a-4e55-8482-6d1060b77766"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Xs", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"K2", " ", "V1", " ", "X"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "K1"}], " ", "V2"}], "+", 
       RowBox[{"V1", " ", "X"}], "-", 
       RowBox[{"V2", " ", "X"}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8278542435071774`*^9, 3.8279485079441385`*^9, 
  3.828022663772402*^9, 3.8280289255217724`*^9, 3.828101212545232*^9},
 CellLabel->
  "Out[541]=",ExpressionUUID->"af978f1c-c3e8-4c08-9a1d-1e385e9a5f83"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
  "Solution", " ", "to", " ", "Quadratic", " ", "expression", " ", "for", " ",
    "x", "*"}], "Section"]], "Input",
 CellChangeTimes->{{3.827854693737246*^9, 3.8278546938890157`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[542]:=",ExpressionUUID->"fb8ed411-92b3-47a8-8cee-911742bacfaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plug in the expressions for x* and y* that I derived on pages 1 & 2 of \
handwritten notes\
\>", "Subsubsection",
 CellChangeTimes->{{3.8280263152526755`*^9, 
  3.8280263366188717`*^9}},ExpressionUUID->"7770ffd9-e818-42ce-bcbb-\
8aef734c8e7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn6", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[CapitalKappa]2"}], "*", "\[Alpha]1", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "xs"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Alpha]1", "-", "1"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "xs"}], ")"}]}], "-", "\[CapitalKappa]1"}], 
      ")"}]}]}], "==", "xs"}]}]], "Input",
 CellChangeTimes->{{3.8278545681986947`*^9, 3.827854672275735*^9}, {
   3.8278551389053793`*^9, 3.8278551519374313`*^9}, 3.827930612598457*^9},
 CellLabel->
  "In[542]:=",ExpressionUUID->"21b4ffc0-cfb8-4e85-ad75-51c750d52026"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "xs"}], ")"}], " ", "\[Alpha]1", " ", 
     "\[CapitalKappa]2"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "xs"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]1"}], ")"}]}], "-", 
     "\[CapitalKappa]1"}]]}], "\[Equal]", "xs"}]], "Output",
 CellChangeTimes->{3.8278551523174863`*^9, 3.827930613208515*^9, 
  3.827930654122172*^9, 3.8279485082510014`*^9, 3.828022664135609*^9, 
  3.828028925651699*^9, 3.828101212738123*^9},
 CellLabel->
  "Out[542]=",ExpressionUUID->"175af809-884b-45bc-8669-181d67c4ec0a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.827855103738168*^9, 3.8278551330930843`*^9}, 
   3.8278551632164993`*^9, {3.8278555319596543`*^9, 3.8278555445790434`*^9}},
 CellLabel->
  "In[543]:=",ExpressionUUID->"70fe8d93-c887-43de-8558-73ca2fdb8218"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8278555280865984`*^9, 3.827855530060691*^9}},
 CellLabel->
  "In[544]:=",ExpressionUUID->"06af01b3-ee5a-4ed4-a0e2-a51576e695ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eqn6", ",", "xs"}], "]"}]], "Input",
 CellChangeTimes->{{3.8278546489393225`*^9, 3.82785465545607*^9}, {
   3.8278547964449673`*^9, 3.827854811263769*^9}, {3.8278548525969353`*^9, 
   3.82785486834031*^9}, 3.8278555510974035`*^9},
 CellLabel->
  "In[545]:=",ExpressionUUID->"704f9690-ec37-45ea-9880-2c3f947c5f47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xs", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Alpha]1", "-", "\[CapitalKappa]1", "-", 
       RowBox[{"\[Alpha]1", " ", "\[CapitalKappa]2"}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]1"}], ")"}], " ", "\[Alpha]1", " ", 
          "\[CapitalKappa]2"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]1", "-", "\[CapitalKappa]1", 
            "-", 
            RowBox[{"\[Alpha]1", " ", "\[CapitalKappa]2"}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]1"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xs", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Alpha]1", "-", "\[CapitalKappa]1", "-", 
       RowBox[{"\[Alpha]1", " ", "\[CapitalKappa]2"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]1"}], ")"}], " ", "\[Alpha]1", " ", 
          "\[CapitalKappa]2"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]1", "-", "\[CapitalKappa]1", 
            "-", 
            RowBox[{"\[Alpha]1", " ", "\[CapitalKappa]2"}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]1"}], ")"}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8278548196643496`*^9, {3.8278548661619215`*^9, 3.8278548686435537`*^9}, 
   3.8278555513955097`*^9, 3.827930729668975*^9, 3.827948508437303*^9, 
   3.8280226643840065`*^9, 3.8280289258116083`*^9, 3.8281012129160385`*^9},
 CellLabel->
  "Out[545]=",ExpressionUUID->"ae07b70c-3ea0-4abd-82ee-5ed51f489895"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The final solution for x* is x*=",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Alpha]1", "-", "\[CapitalKappa]1", "-", 
    RowBox[{"\[Alpha]1", " ", "\[CapitalKappa]2"}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]1"}], ")"}], " ", "\[Alpha]1", " ", 
       "\[CapitalKappa]2"}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]1", "-", "\[CapitalKappa]1", "-", 
         RowBox[{"\[Alpha]1", " ", "\[CapitalKappa]2"}]}], ")"}], "2"]}]]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Alpha]1"}], ")"}]}]]],
  CellChangeTimes->{
   3.8278548196643496`*^9, {3.8278548661619215`*^9, 3.8278548686435537`*^9}, 
    3.8278555513955097`*^9, 3.827930729668975*^9, 3.827948508437303*^9, 
    3.8280226643840065`*^9},ExpressionUUID->
  "882b886f-6312-4d7e-9e51-5fdbd48f62eb"]
}], "Subsubsection",
 CellChangeTimes->{{3.8280264343635054`*^9, 
  3.828026448101293*^9}},ExpressionUUID->"73fc71e3-931d-4d2b-a3f5-\
5bae5d62112d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8278558014887133`*^9, 3.8278558015741253`*^9}, 
   3.827919006096968*^9, {3.828028938603267*^9, 3.8280289390869913`*^9}},
 CellLabel->
  "In[546]:=",ExpressionUUID->"8b8bf592-7376-41cc-a405-05168bf7a636"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution to Quadratic expression for y*", "Section",
 CellChangeTimes->{{3.82785427829377*^9, 3.8278542783095584`*^9}, {
  3.828028942111251*^9, 3.8280289484246235`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"c9ec25f2-c14c-45c0-a4ba-f684a822007b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn5", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Alpha]2"}], "*", "\[CapitalKappa]4", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "ys"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Alpha]2", "-", "1"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "ys"}], ")"}]}], "-", "\[CapitalKappa]3"}], 
      ")"}]}]}], "\[Equal]", "ys"}]}]], "Input",
 CellChangeTimes->{{3.827854021726513*^9, 3.827854072800083*^9}, {
   3.8278557036236324`*^9, 3.8278557194534383`*^9}, 3.827930875821041*^9},
 CellLabel->
  "In[547]:=",ExpressionUUID->"c8e36f9f-d63f-4f2b-9e92-7512e4bda1f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "ys"}], ")"}], " ", "\[Alpha]2", " ", 
     "\[CapitalKappa]4"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "ys"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]2"}], ")"}]}], "-", 
     "\[CapitalKappa]3"}]]}], "\[Equal]", "ys"}]], "Output",
 CellChangeTimes->{3.827854073896556*^9, 3.827855719885333*^9, 
  3.82793087623147*^9, 3.827948508824668*^9, 3.8280226648947053`*^9, 
  3.8280264120101223`*^9, 3.8280289259715166`*^9, 3.828101213066934*^9},
 CellLabel->
  "Out[547]=",ExpressionUUID->"39bd2c82-dece-4886-87d7-2adfcbdd82fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eqn5", ",", "ys"}], "]"}]], "Input",
 CellChangeTimes->{{3.8278540756702113`*^9, 3.8278540820047784`*^9}, {
   3.827854185853054*^9, 3.8278541902932158`*^9}, 3.8278557348623486`*^9},
 CellLabel->
  "In[548]:=",ExpressionUUID->"6128858c-afa4-459c-aadf-f8a73101e821"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ys", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Alpha]2", "-", "\[CapitalKappa]3", "-", 
       RowBox[{"\[Alpha]2", " ", "\[CapitalKappa]4"}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]2"}], ")"}], " ", "\[Alpha]2", " ", 
          "\[CapitalKappa]4"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]2", "-", "\[CapitalKappa]3", 
            "-", 
            RowBox[{"\[Alpha]2", " ", "\[CapitalKappa]4"}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]2"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ys", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Alpha]2", "-", "\[CapitalKappa]3", "-", 
       RowBox[{"\[Alpha]2", " ", "\[CapitalKappa]4"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]2"}], ")"}], " ", "\[Alpha]2", " ", 
          "\[CapitalKappa]4"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]2", "-", "\[CapitalKappa]3", 
            "-", 
            RowBox[{"\[Alpha]2", " ", "\[CapitalKappa]4"}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]2"}], ")"}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.827854082216316*^9, 3.827854190750124*^9, {3.8278557279857473`*^9, 
   3.827855735676962*^9}, 3.827930884623895*^9, 3.8279485090705605`*^9, 
   3.8280226650466185`*^9, 3.828026413753765*^9, 3.828028926060465*^9, 
   3.8281012131858654`*^9},
 CellLabel->
  "Out[548]=",ExpressionUUID->"9fe7d5a9-a257-417b-aa2e-e4f12de545a9"]
}, Open  ]],

Cell[TextData[{
 "The final solution for y*=",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Alpha]2", "-", "\[CapitalKappa]3", "-", 
    RowBox[{"\[Alpha]2", " ", "\[CapitalKappa]4"}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]2"}], ")"}], " ", "\[Alpha]2", " ", 
       "\[CapitalKappa]4"}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]2", "-", "\[CapitalKappa]3", "-", 
         RowBox[{"\[Alpha]2", " ", "\[CapitalKappa]4"}]}], ")"}], "2"]}]]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Alpha]2"}], ")"}]}]]],
  CellChangeTimes->{
   3.827854082216316*^9, 3.827854190750124*^9, {3.8278557279857473`*^9, 
    3.827855735676962*^9}, 3.827930884623895*^9, 3.8279485090705605`*^9, 
    3.8280226650466185`*^9, 3.828026413753765*^9},ExpressionUUID->
  "a6762132-4ace-46b7-b1ac-063241a94524"]
}], "Subsubsection",
 CellChangeTimes->{{3.8280264564600954`*^9, 
  3.8280264822160845`*^9}},ExpressionUUID->"ac4645d9-3a03-40c0-8b4d-\
0188629d63a9"],

Cell[CellGroupData[{

Cell["\<\

Part b) 
Plug in K1=K2=K3=K4=K, V1/V2=5*\[Theta]B, and V3/V4=10x*.
Also plug in \[Theta]B as 1/(KD+1), so you can graph vs Kd\
\>", "Subsubsection",
 CellChangeTimes->{{3.8278557775958524`*^9, 3.827855777707819*^9}, {
  3.827919026452087*^9, 3.8279190323007317`*^9}, {3.828026575555448*^9, 
  3.828026647093619*^9}},ExpressionUUID->"29d26087-d245-4f5f-a47d-\
722a29ecb41b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"eqn6", ",", "xs"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalKappa]1", "\[Rule]", "\[CapitalKappa]"}], ",", 
     RowBox[{"\[CapitalKappa]2", "\[Rule]", "\[CapitalKappa]"}], ",", 
     RowBox[{"\[CapitalKappa]3", "\[Rule]", "\[CapitalKappa]"}], ",", 
     RowBox[{"\[CapitalKappa]4", "\[Rule]", "\[CapitalKappa]"}], ",", 
     RowBox[{"\[Alpha]1", "\[Rule]", 
      RowBox[{"5", "*", "\[Theta]B"}]}], ",", 
     RowBox[{"\[Alpha]2", "\[Rule]", 
      RowBox[{"10", "*", "xs"}]}]}], "}"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{"\[Theta]B", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalKappa]D", "+", "1"}], ")"}]}], ")"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.8279190465299096`*^9, 3.8279192709856243`*^9}, {
   3.8279194431593294`*^9, 3.8279194638310122`*^9}, {3.827921128828796*^9, 
   3.827921130812545*^9}, {3.827921298446325*^9, 3.827921301525055*^9}, {
   3.8279307127553825`*^9, 3.827930754664936*^9}, {3.8279308938037114`*^9, 
   3.8279309315675364`*^9}, {3.827931177958146*^9, 3.827931202092643*^9}, 
   3.8280224894200287`*^9},
 CellLabel->
  "In[549]:=",ExpressionUUID->"989fbc8c-af8f-4b2e-91ac-bb2b992cc46a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xs", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[CapitalKappa]", "+", 
       FractionBox["5", 
        RowBox[{"1", "+", "\[CapitalKappa]D"}]], "-", 
       FractionBox[
        RowBox[{"5", " ", "\[CapitalKappa]"}], 
        RowBox[{"1", "+", "\[CapitalKappa]D"}]], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"20", " ", "\[CapitalKappa]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["5", 
               RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], ")"}]}], 
           RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[CapitalKappa]", "+", 
            FractionBox["5", 
             RowBox[{"1", "+", "\[CapitalKappa]D"}]], "-", 
            FractionBox[
             RowBox[{"5", " ", "\[CapitalKappa]"}], 
             RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], ")"}], "2"]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox["5", 
          RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xs", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[CapitalKappa]", "+", 
       FractionBox["5", 
        RowBox[{"1", "+", "\[CapitalKappa]D"}]], "-", 
       FractionBox[
        RowBox[{"5", " ", "\[CapitalKappa]"}], 
        RowBox[{"1", "+", "\[CapitalKappa]D"}]], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"20", " ", "\[CapitalKappa]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["5", 
               RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], ")"}]}], 
           RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[CapitalKappa]", "+", 
            FractionBox["5", 
             RowBox[{"1", "+", "\[CapitalKappa]D"}]], "-", 
            FractionBox[
             RowBox[{"5", " ", "\[CapitalKappa]"}], 
             RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], ")"}], "2"]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox["5", 
          RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], ")"}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8279312024048233`*^9, 3.8279485091833935`*^9, {3.8280224923418922`*^9, 
   3.82802251318023*^9}, 3.8280226652155247`*^9, 3.828028926169402*^9, 
   3.8281012133647614`*^9},
 CellLabel->
  "Out[549]=",ExpressionUUID->"f3730479-5b92-444b-a701-166d6f3a3237"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
set x to the + version of the x* answer above for graphing and computation \
purposes:\
\>", "Subsubsection",
 CellChangeTimes->{{3.828026655670714*^9, 
  3.828026674988551*^9}},ExpressionUUID->"907bb304-fea4-4b36-85ea-\
61c932743d16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "-", "\[CapitalKappa]", "+", 
     FractionBox["5", 
      RowBox[{"1", "+", "\[CapitalKappa]D"}]], "-", 
     FractionBox[
      RowBox[{"5", " ", "\[CapitalKappa]"}], 
      RowBox[{"1", "+", "\[CapitalKappa]D"}]], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"20", " ", "\[CapitalKappa]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["5", 
             RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], ")"}]}], 
         RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", "\[CapitalKappa]", "+", 
          FractionBox["5", 
           RowBox[{"1", "+", "\[CapitalKappa]D"}]], "-", 
          FractionBox[
           RowBox[{"5", " ", "\[CapitalKappa]"}], 
           RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], ")"}], "2"]}]]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox["5", 
        RowBox[{"1", "+", "\[CapitalKappa]D"}]]}], ")"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.827919523023693*^9, 3.827919525319862*^9}, {
   3.8279196117315545`*^9, 3.8279196157959504`*^9}, 3.8279211403438296`*^9, {
   3.8279213073211393`*^9, 3.8279213355576663`*^9}, {3.8279270743761344`*^9, 
   3.827927080975742*^9}, {3.82792711190799*^9, 3.8279271121688404`*^9}, {
   3.827927154595845*^9, 3.8279271548003645`*^9}, {3.827927190330279*^9, 
   3.8279271907075663`*^9}, {3.8279272272719507`*^9, 3.827927228367051*^9}, {
   3.8279299483104777`*^9, 3.8279299492608385`*^9}, 3.8279307711987505`*^9, {
   3.8279312988364754`*^9, 3.8279312997408094`*^9}, 3.8279481756949835`*^9, 
   3.828022501979177*^9},
 CellLabel->
  "In[550]:=",ExpressionUUID->"a7e84e10-9aae-49bf-b07f-762dcacf210c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plug in K1=K2=K3=K4=K, V1/V2=5*\[Theta]B, and V3/V4=10x*.
Also plug in \[Theta]B as 1/(KD+1), so you can graph vs Kd\
\>", "Subsubsection",
 CellChangeTimes->{
  3.82802668594123*^9},ExpressionUUID->"513e8375-978e-45df-adbd-880c88cc80b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"eqn5", ",", "ys"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalKappa]1", "\[Rule]", "\[CapitalKappa]"}], ",", 
     RowBox[{"\[CapitalKappa]2", "\[Rule]", "\[CapitalKappa]"}], ",", 
     RowBox[{"\[CapitalKappa]3", "\[Rule]", "\[CapitalKappa]"}], ",", 
     RowBox[{"\[CapitalKappa]4", "\[Rule]", "\[CapitalKappa]"}], ",", 
     RowBox[{"\[Alpha]1", "\[Rule]", 
      RowBox[{"5", "*", "\[Theta]B"}]}], ",", 
     RowBox[{"\[Alpha]2", "\[Rule]", 
      RowBox[{"10", "*", "xs"}]}]}], "}"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{"\[Theta]B", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalKappa]D", "+", "1"}], ")"}]}], ")"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.8279190465299096`*^9, 3.8279192709856243`*^9}, {
   3.8279194431593294`*^9, 3.8279194638310122`*^9}, {3.827921128828796*^9, 
   3.827921130812545*^9}, {3.827921298446325*^9, 3.827921301525055*^9}, {
   3.8279307127553825`*^9, 3.827930754664936*^9}, {3.8279308938037114`*^9, 
   3.8279309315675364`*^9}, {3.827931177958146*^9, 3.827931202092643*^9}, {
   3.827931236206443*^9, 3.8279312487059083`*^9}, 3.8280225065828614`*^9},
 CellLabel->
  "In[551]:=",ExpressionUUID->"dcd48317-9ff1-420b-b355-1555131d4554"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ys", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"10", " ", "xs"}], "-", "\[CapitalKappa]", "-", 
       RowBox[{"10", " ", "xs", " ", "\[CapitalKappa]"}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "40"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"10", " ", "xs"}]}], ")"}], " ", "xs", " ", 
          "\[CapitalKappa]"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"10", " ", "xs"}], "-", "\[CapitalKappa]", "-", 
            RowBox[{"10", " ", "xs", " ", "\[CapitalKappa]"}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"10", " ", "xs"}]}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ys", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"10", " ", "xs"}], "-", "\[CapitalKappa]", "-", 
       RowBox[{"10", " ", "xs", " ", "\[CapitalKappa]"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "40"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"10", " ", "xs"}]}], ")"}], " ", "xs", " ", 
          "\[CapitalKappa]"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"10", " ", "xs"}], "-", "\[CapitalKappa]", "-", 
            RowBox[{"10", " ", "xs", " ", "\[CapitalKappa]"}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"10", " ", "xs"}]}], ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.827931249110712*^9, 3.827948509346131*^9, {3.8280225070341167`*^9, 
   3.8280225156684055`*^9}, 3.8280226654304113`*^9, 3.8280289263623104`*^9, 
   3.828101213593629*^9},
 CellLabel->
  "Out[551]=",ExpressionUUID->"846191ea-b63d-4e16-bf2a-7b02bb7cdfae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"10", " ", "xs"}]}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"10", " ", "xs"}], "-", "\[CapitalKappa]", "-", 
       RowBox[{"10", " ", "xs", " ", "\[CapitalKappa]"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "40"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"10", " ", "xs"}]}], ")"}], " ", "xs", " ", 
          "\[CapitalKappa]"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"10", " ", "xs"}], "-", "\[CapitalKappa]", "-", 
            RowBox[{"10", " ", "xs", " ", "\[CapitalKappa]"}]}], ")"}], 
          "2"]}]]}], ")"}]}], "/.", 
    RowBox[{"xs", "\[Rule]", "x"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8279196384343014`*^9, 3.8279197004341083`*^9}, {
   3.8279209778620105`*^9, 3.8279209781234946`*^9}, {3.8279210083248816`*^9, 
   3.827921008759273*^9}, 3.827921160076479*^9, {3.827927125335868*^9, 
   3.827927126753821*^9}, {3.8279272704586325`*^9, 3.827927274540943*^9}, {
   3.827931263842842*^9, 3.8279312685317287`*^9}, {3.8279313161271796`*^9, 
   3.8279313463513546`*^9}, 3.827948166773733*^9},
 CellLabel->
  "In[552]:=",ExpressionUUID->"3314d7d1-085a-44ec-bc6d-63d4d6197b45"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
In order to graph these plots as the output vs 1/Kd, I needed to replace Kd \
with \[Beta]. \
\>", "Subsubsection",
 CellChangeTimes->{{3.8280267992942605`*^9, 
  3.828026814781099*^9}},ExpressionUUID->"9a3b4e99-fb2c-4937-bcbb-\
8d3a3b1222ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"\[CapitalKappa]D", "+", "1"}], ")"}]}], "/.", 
        RowBox[{"\[CapitalKappa]D", "\[Rule]", 
         RowBox[{"1", "/", "\[Beta]"}]}]}], ")"}], ",", 
      RowBox[{"(", 
       RowBox[{"x", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalKappa]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"\[CapitalKappa]D", "\[Rule]", 
           RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}], ",", 
      RowBox[{"(", 
       RowBox[{"y", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalKappa]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"\[CapitalKappa]D", "\[Rule]", 
           RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]B\>\"", ",", "\"\<x*\>\"", ",", "\"\<y*\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<KD=0.1\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<1/Kd\>\"", ",", "\"\<Output\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8279192845255327`*^9, 3.827919423760237*^9}, {
   3.8279194749399853`*^9, 3.8279195556729803`*^9}, {3.8279196186697164`*^9, 
   3.827919618877101*^9}, {3.82791967972435*^9, 3.827919689516728*^9}, {
   3.827920959158705*^9, 3.827920964936453*^9}, {3.827921171133731*^9, 
   3.8279211967383757`*^9}, {3.8279212287318316`*^9, 3.827921249665882*^9}, {
   3.8279270627970037`*^9, 3.827927100308609*^9}, {3.827927200210161*^9, 
   3.827927236163706*^9}, {3.8279272846676025`*^9, 3.8279273172982893`*^9}, {
   3.8279273576714687`*^9, 3.8279273871316886`*^9}, {3.827929025730795*^9, 
   3.8279290379161296`*^9}, {3.8279290782962723`*^9, 3.827929078440556*^9}, {
   3.8279292583429403`*^9, 3.8279293302262487`*^9}, {3.827929361836322*^9, 
   3.827929388913307*^9}, {3.827929605296286*^9, 3.8279296055987887`*^9}, {
   3.8279296518532104`*^9, 3.8279296919732475`*^9}, {3.8279297392346153`*^9, 
   3.827929797651022*^9}, {3.8279312835330467`*^9, 3.827931285828001*^9}, {
   3.8279313335272045`*^9, 3.8279313374865317`*^9}, {3.8280085274366913`*^9, 
   3.8280085301933007`*^9}, 3.8280090275709343`*^9, {3.8280224020215216`*^9, 
   3.8280224027226367`*^9}, {3.8280225648320932`*^9, 3.828022616829911*^9}, {
   3.8280266971001863`*^9, 3.828026701421356*^9}, {3.82802673511635*^9, 
   3.8280267733062115`*^9}, {3.82802683409798*^9, 3.8280268425702777`*^9}, {
   3.828028148436102*^9, 3.8280281507033997`*^9}},
 CellLabel->
  "In[553]:=",ExpressionUUID->"835f93aa-e8ee-4d20-a51f-59a20fb6965d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjX081HcAxz01KhFtcvLwUtl60vXCbrNqn4rlWfP0cm3ChMysSV6zWk/k
aBJesiZUnmKIYx6quaJceZHnO5yHuy/XdQ53ftXuKI1b++P9ev/1fr2tw37y
jdDS0NDwes//do+Q9bdOB3ypUXGs83/rOJnFEpoD/n3onuRh6gD7W7kF9TRn
fK20NEg3cYZH9/BfN2j+4CpeFx5a54/A8IUH2bRwdPjty1/UD4eQnup0hRYP
412unTEa8Sj86FBKGi0ZbttabC5NXUSiXv0nv9FyUFl8X3a66SqYh4vYL1+V
Qpr9PIphVYrV6sQgF0s2VmpFFgoCqmHjMydru9yApsCGviWdeiT0OCJXeR+O
cykqedZdrG8wEmlqtuDq0DPfvPJmNImdunr3PEZc8M7r5ooWPI6+seGwnIts
w8mIrnePoPp4r2H1j+1ofkmZPehug9bbqrUbbDpBZ9vcETU+AUMd2uRX04Wi
OzJH9+Pt6Ep26Hm6rRcVp5jOMWs7YJU1+7Zirg8iz9FN2e2dmF0gosFdA9gx
yGkK8O9C6Uxzp0EGDxsPnRuaVnbDwKKckkj4yHdy1Rm90Iv07xsjCzcPQSKv
K0482Yf5fVWSqPPD8PGmQlT0fsTbcRtM2gT42czkYOVoP0gN93K/9ShSj3oy
d2cM4F00P3/r6TEI43kTHo48bN+vuxzZPA7m/pUVUXweXIqtj9WtF6HFuDBT
lsBHgkXIxskggn1KMe+w/iB2yANWD3tNYLLMu80kbxDrDF/qcRcnoGrI2t9O
H4JOSz57U8Ek6maYZzrvDuEHh+aRlR5iaApbj3/jMowqt7DCh/NixM99J03v
G4Zq1myt9Npz9NnvZXh5CdDo56Kd4yxBcoRBJqNfgPOurFsNUgmqYy5aerqN
wFroLihhvYA286HpAc4IvvgsOYdmJ0XeJreeFYxRBFn2vtXkSfHaoJ09VzoK
VecVcWziFNglIV1+ZmPI1QmO990sw95+1psQ1hjWiRqLtbgyPPmHdnV5dgwr
zib6O56YRrlpj20HcxwaFcFssfEMmmpKR/U444jLY18xfjyDg5z2WlsbIR5s
v6RndHwWkU5jU/ppQhi5x+1IMpDj3q9beOZSIcZt+3inOHJIvDMUHS4i1N7E
ZkmwAtOrkrkfFIlwhM0wslhWIJQI8jnzIlxgFSWOV84hwjyC0+1DUC2zyDfw
pNBHzqXq3ia4dIMVKvKmkEmPOppQRhDuq7Cp8aHQ6FNmOVVOYM7h1HoFUnhz
0s7+aSVBWua3T9PDKDD42oNJtQRRjOuvVp2iEFsQoFY1E2xM/tBVt4zCnolJ
fe4AwfLnZ9YM/0nBsJU7RucTjCieD5RVUUiwS0nLHyTICqw/crCOgj2/MTVO
QKDe5nuSxaFQsQKaViKC8f7Mm9o8ChfO1ihPTBPcS1k4yhukYPp7QtvYDEHO
7pCtJYL3/VJY3FdyAo/bOxsOiCgE5dTFmlIEf//S3ZE4TeFFWgnFURJcs/00
00dOwUGgbLGZJzghLvC3pigUrEmLzVgg2OIZQ1qVFJLmsuJCFgl0NPmlWQsU
dBdWcdvfEUw07o4OXaTwqGhERV8i4ESX0Hctvf9t0NTLXSb4w2q1Sq2m8CyT
tahWE/wHV4SHAA==
          "]]}, Annotation[#, "Charting`Private`Tag$32050#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ygrvPfqitUk8/w+IfSbW
          "]]}, Annotation[#, "Charting`Private`Tag$32050#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1ndczV8YB/AipBJCKlEIUZJERD4tNI2GEJWMVGiIrKJUJA1KSntv7aHl
tve47b2kfe+3fiQj+R1/ndf7nnPu6/s853ue77PZ2ELr2iIWFpY3rCws/0a1
a2N02rju0QXjPVw7BRWPsikJWPbzS+PSlrGpnGhh7AvxC0znV0aBJ8PVM0US
6nXtaUH8OhjIGZ7wLZWH3tW5gjf8V3GL2+SRFuM0evc8V3Lnt8Fz3bdKexUu
I3TdKZeX/E5gc7R5uuSrFR7VvSs9m+uE5L7ZTi8Pa5x1Hli0Vd8ZnOtpt7/s
ugOuWasneYEu+Kn32Wj6mg3ut/jcnxJyxdNBg885X+7hjHeX2cntHticzF1g
t+IxHNjTd7jy+0CbrhC7xPkZdp14/SLN0gcPovZFl4w9Q5OzxXh3hQ/kagsC
+TWdILJYPEHi3lvU2An3vVnvjPI/kRItTb7IdXr/bDDdBVxfffcLvfLHhFnT
VmnOl/DrfaiUuRCM1dcuFI+GeEFB8Hxkn24I/n7vVivq8cLEBZkl7Ekh0A3V
WsYq8Bqbph5cSdodilVnXYSy376GhemBbSw9oRA7LBwu8OYNeK4mx0YdDIfQ
KR2V1BAfnDsfljw9E4nGP2HaT3j9QXXrcIQLRIGrklVS85I/XAzYr2krRaH4
jX2Eb6Q/0q9YCGT5RGHEV/t8mPR7cN+Wc34kE436eI1DuRcCUObYeWGpXQxE
BZ/U7qIF4eIS98zsqBgcND2bpbUyGP89l19lWh8D5SPK9lyGwRB2jymrEYrF
BnUZ5mGWEDx+d1fydXEsFl29UNAtEgqpxNVLBdnjsWxtjv4puzBUSZQZ1UnG
IyhAxq8tLgxGqffz7M/H46vdi6yMtjC4Z/VbDsbHw3SL96sHe8MxRkvqjtZM
QIjV082Kk+EIblVN3eudiOnELVY0y0hw/nW4eGJTMkRGFkVTNTHwM9UzED+e
DKPwAKVbbLEQaRE3Wn07GSY7Mw9ek4vF0bj2K90FyWBOC2tXp8TiY5xvZrZE
CvafHOp/GxQHhvZUvnp9Cr5c1FD74JUA6eXtckeHUjCQYJzuR0/Aw8KiQsnv
KTieu+Mi/5pELNv5jrZuUyqkKmuefHmXiM0LCqX9t1LxPcn8/efYJOjGvqu5
syINp5fv+mU+kYzAS44a1zenYXVX3fUBgRQM8dyqO7c/DfWs3gZj8imwsFNs
kLuUhvl36y/weqTAVYvRtCwpDVe38Qav3p2KgnnFrgCNdHB/ybZvtU8DW9pu
fQ+jdBicWpfInpAGNRO+nqc26Yj0uiyV1p6Gdjqj91pgOpZKir63kErHTLTf
4J6pdKz6IiVcxUjHtjPMsRK3DBQuVUCJXSYEnpyQNQnLAKf2Ha2KrEysSgp1
48jOAN9IwYz9dCZ+sWtLnBnKQN1Pq+Z117PQSMu+03cwE/MZfrcVLmTjoaTD
wo8vmTjyfPNluulHWBh0nQr8nYlW3u8stOSPuPpqXxhWZ+FXg7F46PePODX2
RcnlSBa071A7VZ7nQiRUzXWNdxZ2VrDHFGfkoX7l2rUS8tmoqeoYkTxWiBK5
W9foutkwiO+fyQ4sRI55eZaNeTY2WO+98Wq2EBEV98/n+WYj56j0VtmET7j/
pDdYhZENh/KFTwXeNNxKOjA9uSgHaYffJAiV0WDc7angyZcD89zSOyfmaNCU
URxuVcrBOv9rR35dKsIWKnrnlfc5cGhQ/3p7fzHWb2R5tDQlBxz2ogoOt4rB
pX6+Nq4sB4LHXs89iS7GXDSnxfR0DlKlnR6c21CCWgPLDLsTH9HxeF5v/epS
2NYfgt+3jxhxPxpyRaoc3BKZX6rYc5E1tCFLzLYcke6Sr34L5sIu309/U0E5
6Bo7Og2O5SJ9asEgWKMCYjVr72zzzYWC7JrchoeVKN7lxa8XnwtWjfng1KpK
nHvJSXtRmIv9dIb1D/4qOKsuWjE1kgurkVTV1sIq9FdQ0WkyeVgtO9meLVCD
ezvMNYfV89BqOrkl8W4NuJ6PfF1nlIdNc8fvqzXV4NDxXvkHL/Kwtj+hLd6r
Ft6l1V3ozMN/n/fwLd9ajxNFUdx1D/Ox+E+flWNzI/qEN2cueOTDScM5I3AV
HTZPA/UlI/LR+vcgo/skHWHwjvWuycf4Yvuknno6fhc8VbwgWACPJ3vbTXqb
8Gbj/JibZAFK7Sve7RJphqidrWeBcgHU5WIbpW82Q/fI7R7hWwWIOa62W5yl
Bcm5+vdGCwpg0dLiOSrTiuMC7YL8TQWID236Luraip4HWiVqIwUwtPHn+NTd
iuWHVFd94C7EoNFo07BTG65kH4i3MSxE/HZbk9qRdqzPWN3HyvoJLMzZyLTP
Xbj46rfOMO8nxDrVHdM93Y3wq19qysU/wSh9LvhrQTfE13386HbuE9bPx+2s
C+iB4j2jt+tSyH5e1xhtwz4cCNSL9tlDw2W+zOQVcwM4/6J20FmWhvqQ2dTj
ewbx2EZho+0xGuIyGjjETAZRpCHmc16fhudL7RdKWweh8WfBYdNzGqrsQ2U5
k4Zw2SD6UmwfmUfJjogjw3BS2+DvP05DftzDKCXzYUQf8Gp5+Y0G5daJPkH/
YUxxP1S/xVEEu5fXnGz+G8a9T5qHpA4UIdJb8GpqwBf4JxTbbFUogmjrGRWu
0i/IfyeTslajCGlsZzPCJr+A1XLzjrnLRdB/W9Xy7OAIXgnPrs13L8J62ZPO
JlUj+MBldjrJrwhKAZFtbZMjoP/ocwuOKIKgnCvP2xWj4KVXLnL4WARXi74p
jlOjCHMInD72pQgKz8VvyFSPkvdeqbbhSDHkZ3/Z3YscQ5uKw4z7iWL0KZyf
HM0fw/cPhbwaWsXYYv7x1EDLGGQeHbpcaVKMmw+qxKwWjyNnzZ7vtDfF4GZP
sDfQH0fHg5sbngQVY3JaRV3bchw/+uPk5WKLsepYHduw0zgOJoq4fSwoxk8p
38ShxHF8VBYQThsrxt06vTzvH+Poitc7Zvm1GH8COBRiOCbwa9VbM4mFYrww
0Nt2Q3ACsr0rM+PXlOD1ytbin0cnkHt3iVrE0RJYJM6Fez6dQH709B0fnxJ0
NAwK/fo+gR4uCX+tkBLUMNKD0tgmMW9tXrgqvgTVJzm2SfFMQg4j7O6fSpD+
N/Ocm/gkCtu7g5wnSnCIk+tjhcEkPrFXVNyTL0Xl2YdnL+ROYuA2G0NavRTl
7so7OMomwdKqwPNVtxQCA4ZZrxsmIR+Wf9HCvBQ71+aeFxueBO1Q2oyJbym4
fif4BHNOodgsaMP5qVK0Fc9ziehMIX3c3NzgeymyJuQieS9OIfKGbN4VljJ8
FXOlUVem4Hy9/cLttWXQFWOe0bszBRXj1e+fHSnD4X3H6pe9nkLDeWe+D6/K
4ExXxfHKKdA6tG+k+5Zh6821/fT6KaTobcnJCS3DbHKEsFrrFN7oftIrySiD
d/ilatahKZw989O3o6cMP09zifj+mkKPyq11i3eX477huMJrUQbqKg5fY5cp
x+xtu6vLJRgoPM6RuUKhHKxN1XbW+xgIUY7R4dMth0eAxCO+owwYyw9677Yr
h6zJs5SPWgyMyejynKsrx46Z6HX2DxiY3S63MulWBUT9PatOFDJwdEix4uX9
CoxKXWR7XcyAS5DKkxvPKsA/9PtPfTkDvGt1qK3+FfDUW1O/s4GBA6zmDe9L
KxC0S1HAsJ+B+91+ni82VIKHf6x39A8DNN/gE9e3V+LhBa9zHqxMsGtF/lXa
Wwn6Lb8SsSVM+FcmW/w9Tuo0b8mgOhcTuZnlp+5ZV8JlJ5uxiAAT857fVl4l
dfxxIP0/TWkmlNV/VSi0VOLNicKLljJMvFrK8lSovxKiGpUX3GSZ2GjHOd31
rRJZkn9uJsgzcdRsS+MZYVLnBaxUfTWYeKJ82gu2VXjH05YteoWJRT8TVm3Y
Vk3y3lpU6MbEhjrFr9hTTfK9m2fGnQnpsM7Wq4eqMXmfu22TFxPXVJcFfNCs
RuyOhc83fZio9DfepnivGo5ZnAotgUx4yvLLmlZUw3A0orojkYlY7hRBD3o1
KrYf31zxgQna0PG/ad3VyDi0xzU1hYn/XtqUzlPV6OXMTX6YwcTZ7oaTXnw1
4OdzPNafx4TgY5cr2aY1kLsiFfOjion9pzce77lTg4sCCcyEGiZOimSIstrX
4Ei3U7l+HYmvdpCh9qYGaq5ZSqmNTAwJyt3vy61BwcH8/dLtTMQVfH21hKsW
/R4qRSGfmTjw1yhL+0MtTnw2Ysj8YkJDk+Z4LKcWTjdPTzr+ZuJKgNApmeJa
BAubatfMM+El0zcq0FaL28INNjp/mRi30Ocf+lMLya41dipsFAIHdB9batZh
uV2FS94KCmkSmSrGenWYOSKr1M9NofLx2nU6l+tQxuBLYVlFYZavOUnmbh0u
7zFLOMJD4eSZ0/0LgXVQ2Er38+elwFqspug+VYf2Qo7ciU0U+FbFcz/5XgcZ
hyV6k0IUJAyWd1uy1GPHwoWhcWEKF35V3NFZW4/5xMSmgS0UMqSORW04Ug+3
GzX2WdspXI8Ae7xbPZZpvRRgk6BQ6yRdX76rAWdW1a+RP0xBdmXNotf7GzCl
Gd697giFWP/LMvryDdh1ryNtnPjZB49QSrcBavsOhbgdJes7xqz5HBqQNGvS
m6NA1osFrTdrb4ChF5dm/gkKvFn7NKSHGmCS7NBto0LBSb766cJUA1a62maJ
qVJIif9to8raCHV+DyMfNQpun0T7enkb8YqbffKMJgXFcceUpYqN2B1jMfdU
i8IDifpq8xONwIjRvJA22X+H/0ujRiOWapq6FBBvWkjmD9BrRMQ7ZZlvOhR+
8vQ67rnVCG5LmulpPbL+iIzuOb9GOO+dZZbrUxDymvwZx2yEAG3WqPgKhcLL
T+LSvjZCvNbRUPIqBYN9a87n/WjEXO4isyDiwDbZnNpFdIxN1iXYXCPnsfHl
PYqXDo5ELWE+Ewo88aJfpUGH9HxnkrQZhdRH+eFyynTkJsVa+BCf1jytdVyV
jg1/DQ2/EntO26bqaZP1e+83fjCnwCVTYfHQhA5Fl197BG9RWFJ6beqTJx1B
wXdfNVlQiHz7M6DSh45Uw9c82y0pKJu4q9P96dh/9NnwfWJHjsz4oQg66a86
rQWtKCycZjNdkkOHZA+3qb41hR+94V/UBuiIetQtnmtDYXKuv69Vsgljnq87
ljygkGXiWax2oAkxXw+qqRM/bT8a/elwE1b/3b/Zi5g3O+hW3PEmlDvkLOF7
SM7nnv7844tNWH7Rv1X4EYX339r4RV404ciOs2Pr7Shcu+ryx8+9CWI/d5jp
EEu27B9c4d2E/+7amnoRl6f7xM4FNUF4mH1kqT2FGWstmZr0JkT53J5nEKvM
1OlY95P/i8oqiHpKYc1lu4Ojw03QrSpP7yLuaxQXvDjRhJnWF4dXOlCwSXH7
fGy2CUKp6Wy2xCEWqtb8nM1Y3jcUqOBI4Tuj1JN2oBn6N7e2lDwj+ZzIq+b2
aEZJnp3cMxcKt9+d2mrm3YwVIt1RCcQyyp8flfk1Q+lkQFEzcXUQx+7HEc04
sFKBd+tz8rynz3uO5zSjIt1XpZD4aPZ37dLPzXjIrXl79AWFzmd7ex8cakF/
l5n8cjcK4ZJl+1uPtmCb6lHjncQ3e895SCq3YKNRmroqMYvMU4yebMH1d29s
XxBvn6gP07nagoraRwpsr0h8p29e3+PZgvlIf87/iLk3xlDDwy24NJsTFudB
Qf7ss97P4y1YuO01WERs7WlYM8RsQZVV6nwncRsrX8zAjxbc+sZavtyTQvDI
C4MerlbwMVcmmRBLpJjVNUu3wuDsOq6NXhQ0lSQSip1aUbah6bPFawr2jzn8
i0gfvUmKtsaJOCVzxIXm0YqNa2R3+BGvFQ0xLvRrxbvhlJ+fiHu4VgnkJrYi
cnGCFvcbEm/bzIvUllac/719cTTxK9PM66EibVhf/jm72JvChHzSC85dbcg5
OCDWSnyCLyr+3p42HP7p7jxKvKjCh6kh24aw7MYJTh9SD0Rs7v081QaXd0GO
2sTX+6VctB61wZKxdE0fsYJuShRbUxsqqnXmB9+SeMVjKyza25C2rOLZDPH8
4tDxrp42KI+FfWfxpZCT5rk7dbQNpS3iIULEEqssMi/9acPbRcV/9YkFa3aX
ZYm2w+DTBiE68Xf5hOEbT9oxIMVXkfSOQn7kZICtUzuMSqyFcokd2cW1XVzb
Mdfw0rScmLsxsSjCux2b88409xFvN/wQ3BfTjuJ3pX+5/SictUs9p9PYDukN
VMNN4syP2bXY3IHQvveDm/wpPNz449nJ7R3IrpgM2Eks73Dw8CWxDrxM9VWT
Jq5V+Rj3cH8Hvl1RclYlHm7PdclU7SD9B9PqDvHa7wXyYtYdOBRVIVNGbCNV
msFb0oHLjkFjRu9J/qSFQ19XkvnyoPXmxOcOPHbjqu/A20btw3eJD8tKGy/q
7IBH+M7LrsSLFCNXMpkdMF64LZpK7HnGyaxMoBOid55mLBDHWyoL21h3Yol7
ufSbAFI/rUM5KdtO/JJcEAggdreZ/25q1wnzCcZcBLHl/Yw6wxedONex2zeT
WOapyCP14E4MHUm/1kFc6snWtqW6EwNN/hcFAyn0fyh1o2/uwp/nPYuCiRsZ
bFNSO7pgs/5bRhQxTfyYho94F+4/DzRMIg6NL+PSk+nC/EhVcD6xcXS5e49G
F166ZZd1EY8EVXqO2nbhMBVbuC6IAuNVrfefui6EdweHuBD/NmsJ2PmwG8kD
BX91gynoHLj0WuJJN9bYfs3QJ05kHXHZ59QN7ROu1y4TG/jNWcl5dOOC22TO
TeKiMgGVM+HdyHu6Zecz4ufCl7/dr+7G8I8/+5KJ17QxNCoFehBJTfCyhVAQ
U1i2cD2vB4dW968LD/n3vUzY0UHrwfydMokYYum1p8+olvegmcNXKZH4yKhf
pBi9BxvXL7+cRXzSfZf69EgP7vTkmVcTW3dq+j3g6YXPj2ulM8QfrXykXpn2
Inl4OkwulNy38M0mqev7EDZ04r9qYmk/7u3lgn3QiFk/UE8s7PF7uGtzH+jn
D9Y0Ef960GrMJt4HvQu2/l3ESWdcDfTk+1BXeIB3gngN64zunxt9iFRd5s0e
Rs7LkKasmtuHAK/QBCVi242GWwYv9sPJdUlPGrH4lC5nu+YARmeaxe6Gk/0r
p9lLfw0gxKr49a4ICmyfApK3Bg5C4MIprwJic+m8zuXqQ3jcM75BNZJCgqpx
aOH3ITBsrQKKiGcnBVaN+H5GgZVc5rYocp+0Tyz2UR7Gcp7Fsy7ET1ScQzJG
hmEhkpDUQby5V60jwvkLHvK4P94cTfobGScffqkRJPpIXDclvrip4Sdr8wji
irKTo4lnq92HLB1G4Uw5+n4m9mMzsNESGcMTp1P962PI8/dlhi8qHcMzBo/2
CeIldg46h6zGoRq6jcWWmCXOIHmIZwKDfJqnQomt3ye78xRPoLZ2+1wVcYHY
C/bVtycx+eEN+zTxajVrcUfuKXxbMa20OpbU192NzQ/yp7BPeSvXPuKUYIgM
GzAg7WMfd5r4UvKB1RsXGFCvv8h1k/ipc5hDTzwTs2oZPC+Ik8Y2BnBrkD5A
dbY0lPhFkLNR30nyXY44KBlGfFWLse3DGQo16sYB/yyYn5+iSfqobQk3rMKJ
X3rql78yJnmLVRSMJL5xwH+Gg/QJV3z23Yoh3uK0VmUZycsKIZX5JOKFg49X
tJORo+z61Q9k7GR8bopOoPCp/WbtP3vppV86nkrmr+8JTCb+u0vrjnM+uUd8
nrKp/+KlewYvbqbAfo5mnUGc4zJ3pbmV/N50vvOffQ4b7ozoIHEqdSOTWD1K
IkOxj0LDDl+uLOLc+3VVDuMk3tGpyGxi3937Pc9MUdCaL+fIIbYaCtTZTJE+
VNXV8p9FNW72076RPjq5/PBHYjbWlkivOQoHOxXC/nkg87CZ0S/SN12MWppL
nG8WsUfyD6ljijPm//xOiHP271/SZ7zZRv/n/wFeEdxi
          "]]}, Annotation[#, "Charting`Private`Tag$32050#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"1/Kd\"", TraditionalForm], 
       FormBox["\"Output\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"KD=0.1\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]B\"", "\"x*\"", "\"y*\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.827919536985962*^9, 3.8279195560500727`*^9}, 
   3.827919619639676*^9, {3.8279196805326667`*^9, 3.8279197037922134`*^9}, {
   3.82792096019342*^9, 3.827920981113865*^9}, 3.8279210130652494`*^9, {
   3.8279270562537937`*^9, 3.8279271599789844`*^9}, {3.8279271966943336`*^9, 
   3.8279272366442213`*^9}, {3.827927279532051*^9, 3.8279273185903807`*^9}, {
   3.827927359096778*^9, 3.82792738753263*^9}, {3.827929075603259*^9, 
   3.827929079118749*^9}, {3.827929317425685*^9, 3.82792933088424*^9}, {
   3.8279293627766867`*^9, 3.8279293895400033`*^9}, 3.827929606230229*^9, {
   3.8279296557966504`*^9, 3.8279296924951525`*^9}, 3.8279297986379223`*^9, {
   3.8279312775993624`*^9, 3.827931352127886*^9}, 3.827948510255719*^9, 
   3.8280090284847536`*^9, 3.828022404126829*^9, 3.828022523238656*^9, {
   3.8280225747621326`*^9, 3.8280226178123465`*^9}, 3.828022666272953*^9, 
   3.8280267022119603`*^9, 3.8280267740003853`*^9, {3.8280268346963787`*^9, 
   3.8280268432154875`*^9}, 3.8280281514171004`*^9, 3.828028926816033*^9, 
   3.8281012142602463`*^9},
 CellLabel->
  "Out[553]=",ExpressionUUID->"00654366-f054-4fcd-8515-77b884e9fa32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"\[CapitalKappa]D", "+", "1"}], ")"}]}], "/.", 
        RowBox[{"\[CapitalKappa]D", "\[Rule]", 
         RowBox[{"1", "/", "\[Beta]"}]}]}], ")"}], ",", 
      RowBox[{"(", 
       RowBox[{"x", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalKappa]", "\[Rule]", "10"}], ",", 
          RowBox[{"\[CapitalKappa]D", "\[Rule]", 
           RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}], ",", 
      RowBox[{"(", 
       RowBox[{"y", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalKappa]", "\[Rule]", "10"}], ",", 
          RowBox[{"\[CapitalKappa]D", "\[Rule]", 
           RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<theta_b\>\"", ",", "\"\<x*\>\"", ",", "\"\<y*\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<KD=10\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<1/Kd\>\"", ",", "\"\<Output\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8279481920206175`*^9, 3.827948194461915*^9}, {
   3.8279486628853226`*^9, 3.8279486824884214`*^9}, {3.8279489703210692`*^9, 
   3.8279489707814503`*^9}, {3.8280224153533583`*^9, 3.828022418996105*^9}, {
   3.8280225910497723`*^9, 3.8280226264028687`*^9}, {3.8280232542243533`*^9, 
   3.8280232551154175`*^9}, {3.8280233982064867`*^9, 
   3.8280233985073166`*^9}, {3.8280268233745055`*^9, 
   3.8280268235753984`*^9}, {3.828028153301906*^9, 3.8280281536733193`*^9}, 
   3.8280287740659466`*^9},
 CellLabel->
  "In[554]:=",ExpressionUUID->"0737b33a-fc96-4296-bb90-224e068a9990"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjX081HcAxz01KhFtcvLwUtl60vXCbrNqn4rlWfP0cm3ChMysSV6zWk/k
aBJesiZUnmKIYx6quaJceZHnO5yHuy/XdQ53ftXuKI1b++P9ev/1fr2tw37y
jdDS0NDwes//do+Q9bdOB3ypUXGs83/rOJnFEpoD/n3onuRh6gD7W7kF9TRn
fK20NEg3cYZH9/BfN2j+4CpeFx5a54/A8IUH2bRwdPjty1/UD4eQnup0hRYP
412unTEa8Sj86FBKGi0ZbttabC5NXUSiXv0nv9FyUFl8X3a66SqYh4vYL1+V
Qpr9PIphVYrV6sQgF0s2VmpFFgoCqmHjMydru9yApsCGviWdeiT0OCJXeR+O
cykqedZdrG8wEmlqtuDq0DPfvPJmNImdunr3PEZc8M7r5ooWPI6+seGwnIts
w8mIrnePoPp4r2H1j+1ofkmZPehug9bbqrUbbDpBZ9vcETU+AUMd2uRX04Wi
OzJH9+Pt6Ep26Hm6rRcVp5jOMWs7YJU1+7Zirg8iz9FN2e2dmF0gosFdA9gx
yGkK8O9C6Uxzp0EGDxsPnRuaVnbDwKKckkj4yHdy1Rm90Iv07xsjCzcPQSKv
K0482Yf5fVWSqPPD8PGmQlT0fsTbcRtM2gT42czkYOVoP0gN93K/9ShSj3oy
d2cM4F00P3/r6TEI43kTHo48bN+vuxzZPA7m/pUVUXweXIqtj9WtF6HFuDBT
lsBHgkXIxskggn1KMe+w/iB2yANWD3tNYLLMu80kbxDrDF/qcRcnoGrI2t9O
H4JOSz57U8Ek6maYZzrvDuEHh+aRlR5iaApbj3/jMowqt7DCh/NixM99J03v
G4Zq1myt9Npz9NnvZXh5CdDo56Kd4yxBcoRBJqNfgPOurFsNUgmqYy5aerqN
wFroLihhvYA286HpAc4IvvgsOYdmJ0XeJreeFYxRBFn2vtXkSfHaoJ09VzoK
VecVcWziFNglIV1+ZmPI1QmO990sw95+1psQ1hjWiRqLtbgyPPmHdnV5dgwr
zib6O56YRrlpj20HcxwaFcFssfEMmmpKR/U444jLY18xfjyDg5z2WlsbIR5s
v6RndHwWkU5jU/ppQhi5x+1IMpDj3q9beOZSIcZt+3inOHJIvDMUHS4i1N7E
ZkmwAtOrkrkfFIlwhM0wslhWIJQI8jnzIlxgFSWOV84hwjyC0+1DUC2zyDfw
pNBHzqXq3ia4dIMVKvKmkEmPOppQRhDuq7Cp8aHQ6FNmOVVOYM7h1HoFUnhz
0s7+aSVBWua3T9PDKDD42oNJtQRRjOuvVp2iEFsQoFY1E2xM/tBVt4zCnolJ
fe4AwfLnZ9YM/0nBsJU7RucTjCieD5RVUUiwS0nLHyTICqw/crCOgj2/MTVO
QKDe5nuSxaFQsQKaViKC8f7Mm9o8ChfO1ihPTBPcS1k4yhukYPp7QtvYDEHO
7pCtJYL3/VJY3FdyAo/bOxsOiCgE5dTFmlIEf//S3ZE4TeFFWgnFURJcs/00
00dOwUGgbLGZJzghLvC3pigUrEmLzVgg2OIZQ1qVFJLmsuJCFgl0NPmlWQsU
dBdWcdvfEUw07o4OXaTwqGhERV8i4ESX0Hctvf9t0NTLXSb4w2q1Sq2m8CyT
tahWE/wHV4SHAA==
          "]]}, Annotation[#, "Charting`Private`Tag$32141#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVz3k41AkYB3BXOikhjQyJakN0agt9d+NJSyrk2lwVEirkSeymbDNyLtXs
xDoaZ4UojMgZllDuHGsMxsxvXONXW7JK7Owf7/N9Ps/7PO/zfTXPXbHxlJKQ
kLAVz/9p4TneWTthd7jNLH1VGXH9sIypqv8wZR/KlB2/7W23x96HiSnFFDPk
93X55jR6wfJtX1Eq5TQC7NscBexrcPCYq7pH8QBN+VrSX4wIDBncMY2jBEH3
BimMsmWCpXwyIppCg6fWtPLrnmyEryjeHkVhQFuDpm4iKIGO+d3IIn8G1BlO
epMH2OiiX5kYbGLAc7i0wTGaDW1pvTz9a39AN2VZzC/6pWj8lqXf08XEIZEf
hXv1BdZ8ZO7XiE2ClEi53vJjORKHQk3Zi2l4ZWh61r2xGo5O6YXvP2RhzVE0
FfLrsXop3NlcvRDl1jlfBk+2Yqv1zHh9TAn26N1kxTV0ILjtIBI/lcM7rsPB
Iq8bKiUKXEnJGiT/s5uIle5FKc/0TbtxHWb6vewPGPWjzid1k9N0A1i7HYqN
tf7G7DaTtU8vNcHgfHVub+kgpObz1m3a2oIFRtV9JZMhGC65l9oWvIHr4fd3
w25z8Ya2r61Rpx2lCaIs2exhaCRMzT+Z6UCYW3HugPsIpuaGue92deHra3p+
5sAIsiYrWuR/74ZBvHTRdutRyFMfkXx+D9SczVtcKkcRe5HtxdLuhZx3c5Tn
Rh4+/5DH977Zh/sPtrndCeIhaE9DyYb6fpCbZXtVGngYLmiI6dQU9+bcb5dX
GsNXn57kHaGDsEulnxE6j0H3x+WLXhUcRAi0Lp1KGYN5huaF5ypc3A2ojWdy
xhBMddsy6jwMDs1ItlmJD71pu9V9ViMwiI5yYh3jQ3Ht+xUNX0agSroNRd/g
Q6YmuVArZRQzJwpPKuTz4buvYmClJQ8dZo8zswb5yPvpHKv6Mw+iEI+zJcsF
mJ1SXUcwxxARySRZ+gKwbc2lGWZ8tFKf+D+yF+DmMfrDEoKPjKhTuuqhAmgO
WfRn0gW4TU2jGyULcOgAjUHZQ8DX919aYJUAzurt85LdBLR1E2K4g+L7LXE8
/3AhXsQaOdp+FSBRxjXIRnscBe5Jai4qBBS57AyphnG45q5jF+wmsOxG+OmD
ARNIDuIqS1oRkHjiWshbPwlZufU5fp4EAv8sjFtfNwn5EKXZ12EEqnQjVyhc
ngKt1updBpOAgkWg3m/y01CUZkVI5hPg7OzoDqmcRk3RpN3ROgLP0qDNdxVB
Z2FoxLSXgEuhoQJ1UYQNzFf3tk8QuEVPD+fkzkDPR4tKLBB4Ok5Nlj9OQrTy
uuJjeSEiU+nu3BMk2rpzZmfF9rARbS2wJkFrK2o1XSuEWmXlMysHEhVZl2yH
xY6OP9MYe46EQ2tVp7KCEN6GSR9WhZDiv41jbykKsYWmdGx5DongIoM1VhuF
WPz+V7m+x+K95+UrSWIPiMa6cvJILFMdaxSIneBQ7HL0OYlAvxCbMIoQSzo2
V+mVJNwLsjkFqkJwOuPTpLtJFNQ51chRhSiLmDvf/Y5EmaXJBSexGUZuOzL7
ScQshEtni22ZrV9yhEvCO/wgxVhdiJfX3zaHT5BQy8wrv6ghBHPn/njraRK6
8zwZttgBvJTTmiSJppcJZhKbhfjuuN9w7ScSJxR/TmeKLSPZk5UwR+LWh9Dq
UbFH2EY+7l9ITDardehpClHpk2mw6xsJycNHeoPFfqCxenZpiQQxI+qoE/s/
QNmiQA==
          "]]}, Annotation[#, "Charting`Private`Tag$32141#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ov4HvUo9qg==
          "]]}, Annotation[#, "Charting`Private`Tag$32141#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"1/Kd\"", TraditionalForm], 
       FormBox["\"Output\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"KD=10\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"theta_b\"", "\"x*\"", "\"y*\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8279481953726697`*^9, 3.8279485111905713`*^9, 3.827948689931672*^9, {
   3.8280086693189774`*^9, 3.8280086885314627`*^9}, 3.8280224198720183`*^9, 
   3.8280225267936726`*^9, 3.8280226130374985`*^9, 3.828022666761671*^9, 
   3.8280232556945925`*^9, 3.828023399144461*^9, 3.82802682421941*^9, 
   3.828028154251057*^9, 3.8280286769369307`*^9, 3.828028774644012*^9, 
   3.828028927106862*^9, 3.828101214796957*^9},
 CellLabel->
  "Out[554]=",ExpressionUUID->"ae0328b3-0093-4e81-95f0-422038251df8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjX081HcAxz01KhFtcvLwUtl60vXCbrNqn4rlWfP0cm3ChMysSV6zWk/k
aBJesiZUnmKIYx6quaJceZHnO5yHuy/XdQ53ftXuKI1b++P9ev/1fr2tw37y
jdDS0NDwes//do+Q9bdOB3ypUXGs83/rOJnFEpoD/n3onuRh6gD7W7kF9TRn
fK20NEg3cYZH9/BfN2j+4CpeFx5a54/A8IUH2bRwdPjty1/UD4eQnup0hRYP
412unTEa8Sj86FBKGi0ZbttabC5NXUSiXv0nv9FyUFl8X3a66SqYh4vYL1+V
Qpr9PIphVYrV6sQgF0s2VmpFFgoCqmHjMydru9yApsCGviWdeiT0OCJXeR+O
cykqedZdrG8wEmlqtuDq0DPfvPJmNImdunr3PEZc8M7r5ooWPI6+seGwnIts
w8mIrnePoPp4r2H1j+1ofkmZPehug9bbqrUbbDpBZ9vcETU+AUMd2uRX04Wi
OzJH9+Pt6Ep26Hm6rRcVp5jOMWs7YJU1+7Zirg8iz9FN2e2dmF0gosFdA9gx
yGkK8O9C6Uxzp0EGDxsPnRuaVnbDwKKckkj4yHdy1Rm90Iv07xsjCzcPQSKv
K0482Yf5fVWSqPPD8PGmQlT0fsTbcRtM2gT42czkYOVoP0gN93K/9ShSj3oy
d2cM4F00P3/r6TEI43kTHo48bN+vuxzZPA7m/pUVUXweXIqtj9WtF6HFuDBT
lsBHgkXIxskggn1KMe+w/iB2yANWD3tNYLLMu80kbxDrDF/qcRcnoGrI2t9O
H4JOSz57U8Ek6maYZzrvDuEHh+aRlR5iaApbj3/jMowqt7DCh/NixM99J03v
G4Zq1myt9Npz9NnvZXh5CdDo56Kd4yxBcoRBJqNfgPOurFsNUgmqYy5aerqN
wFroLihhvYA286HpAc4IvvgsOYdmJ0XeJreeFYxRBFn2vtXkSfHaoJ09VzoK
VecVcWziFNglIV1+ZmPI1QmO990sw95+1psQ1hjWiRqLtbgyPPmHdnV5dgwr
zib6O56YRrlpj20HcxwaFcFssfEMmmpKR/U444jLY18xfjyDg5z2WlsbIR5s
v6RndHwWkU5jU/ppQhi5x+1IMpDj3q9beOZSIcZt+3inOHJIvDMUHS4i1N7E
ZkmwAtOrkrkfFIlwhM0wslhWIJQI8jnzIlxgFSWOV84hwjyC0+1DUC2zyDfw
pNBHzqXq3ia4dIMVKvKmkEmPOppQRhDuq7Cp8aHQ6FNmOVVOYM7h1HoFUnhz
0s7+aSVBWua3T9PDKDD42oNJtQRRjOuvVp2iEFsQoFY1E2xM/tBVt4zCnolJ
fe4AwfLnZ9YM/0nBsJU7RucTjCieD5RVUUiwS0nLHyTICqw/crCOgj2/MTVO
QKDe5nuSxaFQsQKaViKC8f7Mm9o8ChfO1ihPTBPcS1k4yhukYPp7QtvYDEHO
7pCtJYL3/VJY3FdyAo/bOxsOiCgE5dTFmlIEf//S3ZE4TeFFWgnFURJcs/00
00dOwUGgbLGZJzghLvC3pigUrEmLzVgg2OIZQ1qVFJLmsuJCFgl0NPmlWQsU
dBdWcdvfEUw07o4OXaTwqGhERV8i4ESX0Hctvf9t0NTLXSb4w2q1Sq2m8CyT
tahWE/wHV4SHAA==
          "]]}, Annotation[#, "Charting`Private`Tag$30383#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVz3k41AkYB3BXOikhjQyJakN0agt9d+NJSyrk2lwVEirkSeymbDNyLtXs
xDoaZ4UojMgZllDuHGsMxsxvXONXW7JK7Owf7/N9Ps/7PO/zfTXPXbHxlJKQ
kLAVz/9p4TneWTthd7jNLH1VGXH9sIypqv8wZR/KlB2/7W23x96HiSnFFDPk
93X55jR6wfJtX1Eq5TQC7NscBexrcPCYq7pH8QBN+VrSX4wIDBncMY2jBEH3
BimMsmWCpXwyIppCg6fWtPLrnmyEryjeHkVhQFuDpm4iKIGO+d3IIn8G1BlO
epMH2OiiX5kYbGLAc7i0wTGaDW1pvTz9a39AN2VZzC/6pWj8lqXf08XEIZEf
hXv1BdZ8ZO7XiE2ClEi53vJjORKHQk3Zi2l4ZWh61r2xGo5O6YXvP2RhzVE0
FfLrsXop3NlcvRDl1jlfBk+2Yqv1zHh9TAn26N1kxTV0ILjtIBI/lcM7rsPB
Iq8bKiUKXEnJGiT/s5uIle5FKc/0TbtxHWb6vewPGPWjzid1k9N0A1i7HYqN
tf7G7DaTtU8vNcHgfHVub+kgpObz1m3a2oIFRtV9JZMhGC65l9oWvIHr4fd3
w25z8Ya2r61Rpx2lCaIs2exhaCRMzT+Z6UCYW3HugPsIpuaGue92deHra3p+
5sAIsiYrWuR/74ZBvHTRdutRyFMfkXx+D9SczVtcKkcRe5HtxdLuhZx3c5Tn
Rh4+/5DH977Zh/sPtrndCeIhaE9DyYb6fpCbZXtVGngYLmiI6dQU9+bcb5dX
GsNXn57kHaGDsEulnxE6j0H3x+WLXhUcRAi0Lp1KGYN5huaF5ypc3A2ojWdy
xhBMddsy6jwMDs1ItlmJD71pu9V9ViMwiI5yYh3jQ3Ht+xUNX0agSroNRd/g
Q6YmuVArZRQzJwpPKuTz4buvYmClJQ8dZo8zswb5yPvpHKv6Mw+iEI+zJcsF
mJ1SXUcwxxARySRZ+gKwbc2lGWZ8tFKf+D+yF+DmMfrDEoKPjKhTuuqhAmgO
WfRn0gW4TU2jGyULcOgAjUHZQ8DX919aYJUAzurt85LdBLR1E2K4g+L7LXE8
/3AhXsQaOdp+FSBRxjXIRnscBe5Jai4qBBS57AyphnG45q5jF+wmsOxG+OmD
ARNIDuIqS1oRkHjiWshbPwlZufU5fp4EAv8sjFtfNwn5EKXZ12EEqnQjVyhc
ngKt1updBpOAgkWg3m/y01CUZkVI5hPg7OzoDqmcRk3RpN3ROgLP0qDNdxVB
Z2FoxLSXgEuhoQJ1UYQNzFf3tk8QuEVPD+fkzkDPR4tKLBB4Ok5Nlj9OQrTy
uuJjeSEiU+nu3BMk2rpzZmfF9rARbS2wJkFrK2o1XSuEWmXlMysHEhVZl2yH
xY6OP9MYe46EQ2tVp7KCEN6GSR9WhZDiv41jbykKsYWmdGx5DongIoM1VhuF
WPz+V7m+x+K95+UrSWIPiMa6cvJILFMdaxSIneBQ7HL0OYlAvxCbMIoQSzo2
V+mVJNwLsjkFqkJwOuPTpLtJFNQ51chRhSiLmDvf/Y5EmaXJBSexGUZuOzL7
ScQshEtni22ZrV9yhEvCO/wgxVhdiJfX3zaHT5BQy8wrv6ghBHPn/njraRK6
8zwZttgBvJTTmiSJppcJZhKbhfjuuN9w7ScSJxR/TmeKLSPZk5UwR+LWh9Dq
UbFH2EY+7l9ITDardehpClHpk2mw6xsJycNHeoPFfqCxenZpiQQxI+qoE/s/
QNmiQA==
          "]]}, Annotation[#, "Charting`Private`Tag$30383#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ov4HvUo9qg==
          "]]}, Annotation[#, "Charting`Private`Tag$30383#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"1/Kd\"", TraditionalForm], 
       FormBox["\"Output\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"KD=10\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"theta_b\"", "\"x*\"", "\"y*\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8279481953726697`*^9, 3.8279485111905713`*^9, 3.827948689931672*^9, {
   3.8280086693189774`*^9, 3.8280086885314627`*^9}, 3.8280224198720183`*^9, 
   3.8280225267936726`*^9, 3.8280226130374985`*^9, 3.828022666761671*^9, 
   3.8280232556945925`*^9, 3.828023399144461*^9, 3.82802682421941*^9, 
   3.828028154251057*^9, 3.8280286769369307`*^9, 3.828028774644012*^9, 
   3.828028927106862*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"dfa25530-e664-4ac7-95c3-1221cd16cd77"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjX081HcAxz01KhFtcvLwUtl60vXCbrNqn4rlWfP0cm3ChMysSV6zWk/k
aBJesiZUnmKIYx6quaJceZHnO5yHuy/XdQ53ftXuKI1b++P9ev/1fr2tw37y
jdDS0NDwes//do+Q9bdOB3ypUXGs83/rOJnFEpoD/n3onuRh6gD7W7kF9TRn
fK20NEg3cYZH9/BfN2j+4CpeFx5a54/A8IUH2bRwdPjty1/UD4eQnup0hRYP
412unTEa8Sj86FBKGi0ZbttabC5NXUSiXv0nv9FyUFl8X3a66SqYh4vYL1+V
Qpr9PIphVYrV6sQgF0s2VmpFFgoCqmHjMydru9yApsCGviWdeiT0OCJXeR+O
cykqedZdrG8wEmlqtuDq0DPfvPJmNImdunr3PEZc8M7r5ooWPI6+seGwnIts
w8mIrnePoPp4r2H1j+1ofkmZPehug9bbqrUbbDpBZ9vcETU+AUMd2uRX04Wi
OzJH9+Pt6Ep26Hm6rRcVp5jOMWs7YJU1+7Zirg8iz9FN2e2dmF0gosFdA9gx
yGkK8O9C6Uxzp0EGDxsPnRuaVnbDwKKckkj4yHdy1Rm90Iv07xsjCzcPQSKv
K0482Yf5fVWSqPPD8PGmQlT0fsTbcRtM2gT42czkYOVoP0gN93K/9ShSj3oy
d2cM4F00P3/r6TEI43kTHo48bN+vuxzZPA7m/pUVUXweXIqtj9WtF6HFuDBT
lsBHgkXIxskggn1KMe+w/iB2yANWD3tNYLLMu80kbxDrDF/qcRcnoGrI2t9O
H4JOSz57U8Ek6maYZzrvDuEHh+aRlR5iaApbj3/jMowqt7DCh/NixM99J03v
G4Zq1myt9Npz9NnvZXh5CdDo56Kd4yxBcoRBJqNfgPOurFsNUgmqYy5aerqN
wFroLihhvYA286HpAc4IvvgsOYdmJ0XeJreeFYxRBFn2vtXkSfHaoJ09VzoK
VecVcWziFNglIV1+ZmPI1QmO990sw95+1psQ1hjWiRqLtbgyPPmHdnV5dgwr
zib6O56YRrlpj20HcxwaFcFssfEMmmpKR/U444jLY18xfjyDg5z2WlsbIR5s
v6RndHwWkU5jU/ppQhi5x+1IMpDj3q9beOZSIcZt+3inOHJIvDMUHS4i1N7E
ZkmwAtOrkrkfFIlwhM0wslhWIJQI8jnzIlxgFSWOV84hwjyC0+1DUC2zyDfw
pNBHzqXq3ia4dIMVKvKmkEmPOppQRhDuq7Cp8aHQ6FNmOVVOYM7h1HoFUnhz
0s7+aSVBWua3T9PDKDD42oNJtQRRjOuvVp2iEFsQoFY1E2xM/tBVt4zCnolJ
fe4AwfLnZ9YM/0nBsJU7RucTjCieD5RVUUiwS0nLHyTICqw/crCOgj2/MTVO
QKDe5nuSxaFQsQKaViKC8f7Mm9o8ChfO1ihPTBPcS1k4yhukYPp7QtvYDEHO
7pCtJYL3/VJY3FdyAo/bOxsOiCgE5dTFmlIEf//S3ZE4TeFFWgnFURJcs/00
00dOwUGgbLGZJzghLvC3pigUrEmLzVgg2OIZQ1qVFJLmsuJCFgl0NPmlWQsU
dBdWcdvfEUw07o4OXaTwqGhERV8i4ESX0Hctvf9t0NTLXSb4w2q1Sq2m8CyT
tahWE/wHV4SHAA==
          "]]}, Annotation[#, "Charting`Private`Tag$30091#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVz3k41AkYB3BXOikhjQyJakN0agt9d+NJSyrk2lwVEirkSeymbDNyLtXs
xDoaZ4UojMgZllDuHGsMxsxvXONXW7JK7Owf7/N9Ps/7PO/zfTXPXbHxlJKQ
kLAVz/9p4TneWTthd7jNLH1VGXH9sIypqv8wZR/KlB2/7W23x96HiSnFFDPk
93X55jR6wfJtX1Eq5TQC7NscBexrcPCYq7pH8QBN+VrSX4wIDBncMY2jBEH3
BimMsmWCpXwyIppCg6fWtPLrnmyEryjeHkVhQFuDpm4iKIGO+d3IIn8G1BlO
epMH2OiiX5kYbGLAc7i0wTGaDW1pvTz9a39AN2VZzC/6pWj8lqXf08XEIZEf
hXv1BdZ8ZO7XiE2ClEi53vJjORKHQk3Zi2l4ZWh61r2xGo5O6YXvP2RhzVE0
FfLrsXop3NlcvRDl1jlfBk+2Yqv1zHh9TAn26N1kxTV0ILjtIBI/lcM7rsPB
Iq8bKiUKXEnJGiT/s5uIle5FKc/0TbtxHWb6vewPGPWjzid1k9N0A1i7HYqN
tf7G7DaTtU8vNcHgfHVub+kgpObz1m3a2oIFRtV9JZMhGC65l9oWvIHr4fd3
w25z8Ya2r61Rpx2lCaIs2exhaCRMzT+Z6UCYW3HugPsIpuaGue92deHra3p+
5sAIsiYrWuR/74ZBvHTRdutRyFMfkXx+D9SczVtcKkcRe5HtxdLuhZx3c5Tn
Rh4+/5DH977Zh/sPtrndCeIhaE9DyYb6fpCbZXtVGngYLmiI6dQU9+bcb5dX
GsNXn57kHaGDsEulnxE6j0H3x+WLXhUcRAi0Lp1KGYN5huaF5ypc3A2ojWdy
xhBMddsy6jwMDs1ItlmJD71pu9V9ViMwiI5yYh3jQ3Ht+xUNX0agSroNRd/g
Q6YmuVArZRQzJwpPKuTz4buvYmClJQ8dZo8zswb5yPvpHKv6Mw+iEI+zJcsF
mJ1SXUcwxxARySRZ+gKwbc2lGWZ8tFKf+D+yF+DmMfrDEoKPjKhTuuqhAmgO
WfRn0gW4TU2jGyULcOgAjUHZQ8DX919aYJUAzurt85LdBLR1E2K4g+L7LXE8
/3AhXsQaOdp+FSBRxjXIRnscBe5Jai4qBBS57AyphnG45q5jF+wmsOxG+OmD
ARNIDuIqS1oRkHjiWshbPwlZufU5fp4EAv8sjFtfNwn5EKXZ12EEqnQjVyhc
ngKt1updBpOAgkWg3m/y01CUZkVI5hPg7OzoDqmcRk3RpN3ROgLP0qDNdxVB
Z2FoxLSXgEuhoQJ1UYQNzFf3tk8QuEVPD+fkzkDPR4tKLBB4Ok5Nlj9OQrTy
uuJjeSEiU+nu3BMk2rpzZmfF9rARbS2wJkFrK2o1XSuEWmXlMysHEhVZl2yH
xY6OP9MYe46EQ2tVp7KCEN6GSR9WhZDiv41jbykKsYWmdGx5DongIoM1VhuF
WPz+V7m+x+K95+UrSWIPiMa6cvJILFMdaxSIneBQ7HL0OYlAvxCbMIoQSzo2
V+mVJNwLsjkFqkJwOuPTpLtJFNQ51chRhSiLmDvf/Y5EmaXJBSexGUZuOzL7
ScQshEtni22ZrV9yhEvCO/wgxVhdiJfX3zaHT5BQy8wrv6ghBHPn/njraRK6
8zwZttgBvJTTmiSJppcJZhKbhfjuuN9w7ScSJxR/TmeKLSPZk5UwR+LWh9Dq
UbFH2EY+7l9ITDardehpClHpk2mw6xsJycNHeoPFfqCxenZpiQQxI+qoE/s/
QNmiQA==
          "]]}, Annotation[#, "Charting`Private`Tag$30091#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ov4HvUo9qg==
          "]]}, Annotation[#, "Charting`Private`Tag$30091#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"1/Kd\"", TraditionalForm], 
       FormBox["\"Output\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"KD=10\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"theta_b\"", "\"x*\"", "\"y*\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8279481953726697`*^9, 3.8279485111905713`*^9, 3.827948689931672*^9, {
   3.8280086693189774`*^9, 3.8280086885314627`*^9}, 3.8280224198720183`*^9, 
   3.8280225267936726`*^9, 3.8280226130374985`*^9, 3.828022666761671*^9, 
   3.8280232556945925`*^9, 3.828023399144461*^9, 3.82802682421941*^9, 
   3.828028154251057*^9, 3.8280286769369307`*^9, 3.828028774644012*^9},
 CellLabel->
  "Out[461]=",ExpressionUUID->"94b8ea23-51f4-4e7b-9997-54be7d236932"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Part c)
First solve for \[Kappa]=0.1
The goal is to fit the hill function to data\
\>", "Section",
 CellChangeTimes->{{3.8280086838100295`*^9, 3.8280086947423344`*^9}, {
  3.8280268556212783`*^9, 
  3.8280268832961726`*^9}},ExpressionUUID->"7c0663a9-0bcc-4e05-8513-\
bb0586d351ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xk01", "=", 
   RowBox[{"(", 
    RowBox[{"x", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalKappa]", "\[Rule]", ".1"}], ",", 
       RowBox[{"\[CapitalKappa]D", "\[Rule]", 
        RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.827948817271623*^9, {3.828005274408558*^9, 3.8280053035055523`*^9}, {
   3.828005565880237*^9, 3.8280055821958747`*^9}, 3.8280083348355274`*^9, {
   3.8280227275605936`*^9, 3.828022730264116*^9}, {3.8280237269008884`*^9, 
   3.8280237303046007`*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"c21b3c9d-2da3-435c-a90d-3f4290d5a279"],

Cell[BoxData[
 RowBox[{
  RowBox[{"yk01", "=", 
   RowBox[{"(", 
    RowBox[{"y", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalKappa]", "\[Rule]", ".1"}], ",", 
       RowBox[{"\[CapitalKappa]D", "\[Rule]", 
        RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.828008338439052*^9, 3.8280083521239805`*^9}},
 CellLabel->
  "In[556]:=",ExpressionUUID->"c4042034-4dd7-4545-bba5-349fc2596963"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]Bk01", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalKappa]D", "+", "1"}], ")"}]}], "/.", 
     RowBox[{"\[CapitalKappa]D", "\[Rule]", 
      RowBox[{"1", "/", "\[Beta]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.828008583401744*^9, 3.82800861281571*^9}, 
   3.828008655593644*^9, 3.828008721902968*^9},
 CellLabel->
  "In[557]:=",ExpressionUUID->"5d8c22ea-b8b2-4369-b8aa-76845e99cd0c"],

Cell[CellGroupData[{

Cell["\<\
Start by creating matrices of data from the graph, so we can later fit the \
hill function to this data\
\>", "Subsubsection",
 CellChangeTimes->{{3.8280268892304068`*^9, 
  3.8280269222218113`*^9}},ExpressionUUID->"6c1c7207-5cfb-462c-843a-\
0515ce08453a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xk01hilldata", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Reap", "[", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "11"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{
          RowBox[{"Sow", "[", 
           RowBox[{"(", 
            RowBox[{"i", "/", "10"}], ")"}], "]"}], ";", 
          RowBox[{"Sow", "[", 
           RowBox[{"(", 
            RowBox[{"xk01", "/.", 
             RowBox[{"\[Beta]", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"i", "/", "10"}], ")"}]}]}], ")"}], "]"}]}]}], "]"}], 
       ";"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "~", "Partition", "~", "2"}], "//",
    "N"}]}]], "Input",
 CellChangeTimes->{{3.828005512933756*^9, 3.8280055341134725`*^9}, {
  3.828005593949127*^9, 3.828005772703521*^9}, {3.8280077268479357`*^9, 
  3.8280077276647024`*^9}, {3.828022720915409*^9, 3.8280227443874445`*^9}, {
  3.8280227771747804`*^9, 3.8280228224827785`*^9}, {3.828023086350019*^9, 
  3.8280230915939145`*^9}},
 CellLabel->
  "In[558]:=",ExpressionUUID->"bafc15dc-cdf1-4216-aa3e-608ff0ec97d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.06961551582374133`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.2737912651869989`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "0.688819441731559`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.833333333333333`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.88309518948453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6`", ",", "0.9075445017035837`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7`", ",", "0.9220043154013724`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "0.9315431880483108`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", "0.93830345509289`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.9433432538803813`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8280227775985355`*^9, 3.828022790617628*^9}, 
   3.8280228229135303`*^9, 3.8280230921181283`*^9, 3.82802892736172*^9, 
   3.828101215049794*^9},
 CellLabel->
  "Out[558]=",ExpressionUUID->"430bb28a-fdde-48db-a691-11bc6226add6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"yk01hilldata", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Reap", "[", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "11"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{
          RowBox[{"Sow", "[", 
           RowBox[{"(", 
            RowBox[{"i", "/", "10"}], ")"}], "]"}], ";", 
          RowBox[{"Sow", "[", 
           RowBox[{"(", 
            RowBox[{"yk01", "/.", 
             RowBox[{"\[Beta]", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"i", "/", "10"}], ")"}]}]}], ")"}], "]"}]}]}], "]"}], 
       ";"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "~", "Partition", "~", "2"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.82800837337555*^9, 3.8280083826944013`*^9}, {
  3.8280230831288013`*^9, 3.8280230991162057`*^9}},
 CellLabel->
  "In[559]:=",ExpressionUUID->"e3c0f7de-7ff1-4c19-b8c6-dde147d2faa5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]Bk01hilldata", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Reap", "[", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "10000"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{
          RowBox[{"Sow", "[", 
           RowBox[{"(", 
            RowBox[{"i", "/", "100"}], ")"}], "]"}], ";", 
          RowBox[{"Sow", "[", 
           RowBox[{"(", 
            RowBox[{"\[Theta]Bk01", "/.", 
             RowBox[{"\[Beta]", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"i", "/", "100"}], ")"}]}]}], ")"}], "]"}]}]}], "]"}], 
       ";"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "~", "Partition", "~", "2"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8280087177075896`*^9, 3.8280087734872923`*^9}, 
   3.828008804944403*^9},
 CellLabel->
  "In[560]:=",ExpressionUUID->"cb6280d7-1ee4-4216-b942-4220f6c22511"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fit the hill function to the data", "Subsubsection",
 CellChangeTimes->{{3.8280269304116163`*^9, 
  3.828026937359439*^9}},ExpressionUUID->"a0c3c8ce-b9e4-435c-b509-\
403f6ace3fdc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"xk01hilldata", ",", 
   RowBox[{
    RowBox[{"\[Beta]", "^", "n"}], "/", 
    RowBox[{"(", 
     RowBox[{"Kd", "+", 
      RowBox[{"\[Beta]", "^", "n"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"Kd", ",", "n"}], "}"}], ",", "\[Beta]"}], "]"}]], "Input",
 CellLabel->
  "In[561]:=",ExpressionUUID->"ad49c0d0-1ba6-413c-9791-9e19f5aa9027"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Kd", "\[Rule]", "0.01455451346922793`"}], ",", 
   RowBox[{"n", "\[Rule]", "3.0690394187268977`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.828022763192773*^9, 3.828022829804139*^9, 
  3.828023120905587*^9, 3.8280289276715393`*^9, 3.828101215404591*^9},
 CellLabel->
  "Out[561]=",ExpressionUUID->"50917005-7717-4854-808a-c4c50d25575a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["For x*, n=3.1", "Subsubsection",
 CellChangeTimes->{{3.828026946051138*^9, 
  3.8280269687426906`*^9}},ExpressionUUID->"f7e9ffe8-7c49-4485-8611-\
ccc2a9dae6a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xk01hillfit", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "^", "n"}], "/", 
    RowBox[{"(", 
     RowBox[{"Kd", "+", 
      RowBox[{"\[Beta]", "^", "n"}]}], ")"}]}], "/.", 
   RowBox[{"FindFit", "[", 
    RowBox[{"xk01hilldata", ",", 
     RowBox[{
      RowBox[{"\[Beta]", "^", "n"}], "/", 
      RowBox[{"(", 
       RowBox[{"Kd", "+", 
        RowBox[{"\[Beta]", "^", "n"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Kd", ",", "n"}], "}"}], ",", "\[Beta]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8280057847796707`*^9, 3.828005795919815*^9}, {
   3.82800770213383*^9, 3.828007854050232*^9}, 3.828022697393793*^9, 
   3.82802275081577*^9},
 CellLabel->
  "In[562]:=",ExpressionUUID->"20ce8350-ea5a-477e-a9a9-e1a8ed54598a"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Beta]", "3.0690394187268977`"], 
  RowBox[{"0.01455451346922793`", "\[VeryThinSpace]", "+", 
   SuperscriptBox["\[Beta]", "3.0690394187268977`"]}]]], "Output",
 CellChangeTimes->{
  3.8280227516468763`*^9, {3.8280231085269346`*^9, 3.8280231245283623`*^9}, 
   3.828028927764488*^9, 3.8281012155694957`*^9},
 CellLabel->
  "Out[562]=",ExpressionUUID->"d72203b5-4536-4242-9996-d57aa25e6691"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"yk01hilldata", ",", 
   RowBox[{
    RowBox[{"\[Beta]", "^", "n"}], "/", 
    RowBox[{"(", 
     RowBox[{"Kd", "+", 
      RowBox[{"\[Beta]", "^", "n"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"Kd", ",", "n"}], "}"}], ",", "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8280057847796707`*^9, 3.828005795919815*^9}, {
   3.82800770213383*^9, 3.828007854050232*^9}, {3.828008434619935*^9, 
   3.8280084592615967`*^9}, 3.828023136257519*^9},
 CellLabel->
  "In[563]:=",ExpressionUUID->"f6b6e891-66f4-45e8-a86d-8c4620982fc6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Kd", "\[Rule]", "1.4080998700584763`*^-6"}], ",", 
   RowBox[{"n", "\[Rule]", "6.556739378178546`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8280231369910154`*^9, 3.828028927866428*^9, 
  3.8281012156764336`*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"10be6a74-04bc-4e43-aa7a-559644562de7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["For y*, n=6.6", "Subsubsection",
 CellChangeTimes->{{3.828027019547981*^9, 
  3.828027023908466*^9}},ExpressionUUID->"5023bb71-e90d-4674-9847-\
b688241cd246"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yk01hillfit", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "^", "n"}], "/", 
    RowBox[{"(", 
     RowBox[{"Kd", "+", 
      RowBox[{"\[Beta]", "^", "n"}]}], ")"}]}], "/.", 
   RowBox[{"FindFit", "[", 
    RowBox[{"yk01hilldata", ",", 
     RowBox[{
      RowBox[{"\[Beta]", "^", "n"}], "/", 
      RowBox[{"(", 
       RowBox[{"Kd", "+", 
        RowBox[{"\[Beta]", "^", "n"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Kd", ",", "n"}], "}"}], ",", "\[Beta]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8280057847796707`*^9, 3.828005795919815*^9}, {
  3.82800770213383*^9, 3.828007854050232*^9}, {3.828008397606634*^9, 
  3.8280084006744566`*^9}, {3.8280227058874617`*^9, 3.8280227071507807`*^9}},
 CellLabel->
  "In[564]:=",ExpressionUUID->"71efd05c-d428-403e-9a5c-5b2353620aa3"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Beta]", "6.556739378178546`"], 
  RowBox[{"1.4080998700584763`*^-6", "+", 
   SuperscriptBox["\[Beta]", "6.556739378178546`"]}]]], "Output",
 CellChangeTimes->{
  3.8280077981202745`*^9, {3.8280078328322625`*^9, 3.8280078543514943`*^9}, {
   3.8280084024657135`*^9, 3.828008413461603*^9}, 3.8280084614866915`*^9, 
   3.8280226686505966`*^9, 3.8280227078743696`*^9, 3.8280231335360527`*^9, 
   3.8280289279693675`*^9, 3.8281012157943697`*^9},
 CellLabel->
  "Out[564]=",ExpressionUUID->"6ed09452-e2ca-47d8-bea9-b1aa34c3147e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"\[Theta]Bk01hilldata", ",", 
   RowBox[{
    RowBox[{"\[Beta]", "^", "n"}], "/", 
    RowBox[{"(", 
     RowBox[{"Kd", "+", 
      RowBox[{"\[Beta]", "^", "n"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"Kd", ",", "n"}], "}"}], ",", "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828008792327299*^9, 3.8280088298832054`*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"6c8344eb-f8f5-4e98-a84e-4ff5321da363"],

Cell[BoxData[
 TemplateBox[{
  "FindFit","fmgz",
   "\"Encountered a gradient that is effectively zero. The result returned \
may not be a minimum; it may be a maximum or a saddle point.\"",2,565,144,
   26509676229280763732,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.828008823177044*^9, 3.828008830410097*^9}, 
   3.8280226692754965`*^9, 3.828023148669286*^9, 3.828027028080738*^9, 
   3.8280289282532063`*^9, 3.8281012161731496`*^9},
 CellLabel->
  "During evaluation of \
In[565]:=",ExpressionUUID->"e71a671d-72d0-4678-beb3-351fc3320cc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Kd", "\[Rule]", "1.`"}], ",", 
   RowBox[{"n", "\[Rule]", "1.`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8280088304500737`*^9, 3.8280226693275967`*^9, 
  3.828023148707262*^9, 3.8280270281187153`*^9, 3.8280289282911825`*^9, 
  3.8281012162161245`*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"a411601f-7785-4dad-919f-216add9ab377"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
For \[Theta]B, n=1
Plot the Hill functions to compare results\
\>", "Subsubsection",
 CellChangeTimes->{{3.8280270324410105`*^9, 
  3.8280270652843885`*^9}},ExpressionUUID->"14d1d46f-c7fa-41c3-87f3-\
7d995ce5d62d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xk01hillfit", ",", 
     RowBox[{"(", 
      RowBox[{"x", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalKappa]", "\[Rule]", "0.1"}], ",", 
         RowBox[{"\[CapitalKappa]D", "\[Rule]", 
          RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Hill Function\>\"", ",", "\"\<Mass Balance\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<x*\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<1/Kd\>\"", ",", "\"\<Output\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8279192845255327`*^9, 3.827919423760237*^9}, {
   3.8279194749399853`*^9, 3.8279195556729803`*^9}, {3.8279196186697164`*^9, 
   3.827919618877101*^9}, {3.82791967972435*^9, 3.827919689516728*^9}, {
   3.827920959158705*^9, 3.827920964936453*^9}, {3.827921171133731*^9, 
   3.8279211967383757`*^9}, {3.8279212287318316`*^9, 3.827921249665882*^9}, {
   3.8279270627970037`*^9, 3.827927100308609*^9}, {3.827927200210161*^9, 
   3.827927236163706*^9}, {3.8279272846676025`*^9, 3.8279273172982893`*^9}, {
   3.8279273576714687`*^9, 3.8279273871316886`*^9}, {3.827929025730795*^9, 
   3.8279290379161296`*^9}, {3.8279290782962723`*^9, 3.827929078440556*^9}, {
   3.8279292583429403`*^9, 3.8279293302262487`*^9}, {3.827929361836322*^9, 
   3.827929388913307*^9}, {3.827929605296286*^9, 3.8279296055987887`*^9}, {
   3.8279296518532104`*^9, 3.8279296919732475`*^9}, {3.8279297392346153`*^9, 
   3.827929797651022*^9}, {3.8279312835330467`*^9, 3.827931285828001*^9}, {
   3.8279313335272045`*^9, 3.8279313374865317`*^9}, {3.8280082096836367`*^9, 
   3.828008224275319*^9}, 3.828008264575181*^9, {3.8280270470407763`*^9, 
   3.8280271164336925`*^9}, {3.828028107756271*^9, 3.8280281147937784`*^9}},
 CellLabel->
  "In[566]:=",ExpressionUUID->"ea29ca4f-00bf-476f-8539-562fe086d75a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0Hc41v0XB3BpICUqiYxkPHqyGlLifmdEVmUnI0KSrEQoGSFZSXdI9s6e
2SPEI6OQUFbcRsb9rWRV+N2/Pz7XuV7nus51PufNf81B24qejo6uj/b+X9Ws
prvqv+mRFvb3+2is2ZzZosjlOMJ5AmtWZ5fW7+0hHU+Iji3mVILJVlXykoMS
icIt6HNX+AKc19q8kqvMSeodfUVxnLqwjraOEnR0IQmG8KRt8Bmicqj2dJaC
P+mvmkWUubApjjsJtK2/iCDN+H1sMo80h2vd/fCaz3EkA8vlmghOS3gUBKbQ
e6aTmhS5yhpjr8Okl9Hjp0ABSVJAruAXnw22DHD662q+JsXSm70SSrGFoEXR
V6WvNSTGMd9kfWF72OkqvNd+2EiqHO3uaNR1xDn2sUb1n/+RHC9ZqhlHOuFt
mlSsjNZ7knD9YvOvvtvQrRqtWDDsIQ1JPFIM5byDpsZrRZxRfSRywv56ISMX
JHKLeTDfHCSp7cqSrY11xWXO6iM3qKMkOq8zFfrDd7HHRPJP9d9x0mtquxTB
546EnZPzbFZTpFumpkWPzD1wMV/c2V10lnSokxA/mHIPH6wK7bZfJkj9cj7Z
5ZT7kNPy3XBY+kEKy90toiX8AH2HBrN3uP0ineNJTf1m7YV7J+Lf3jq+THrQ
HMP6RtcbP7LIxQJHfpMMH4xfCF30hoxefXqz+RrpxEnRUMNIH6QPWigt3aLD
LuqdNiFpX8zfbV3cp06PmbQapp99vkhaWbkfobEFiewXA4I4/eBc1CDVXcuI
ex1RTfqVfvg+FqN14hgz9P1H6QWM/NG7cYZZrHMndiw6eVXFBqDec3woooEN
UzmVNY/kHsFL4IC3pdYeNFhu/qsz/AibXiVUCC7vhdtHstsc32OcdfV5xhG0
HzohQ6/L6x9D9hODTLwbF8SVhBf9zIPwW2LAq8qbG5TiMieelGA068U5H3M8
iDpbuoJviiGI77lBTonlR4yAKrWUEoKjyuuHTvYdgtazzzcvCIchVX9ueZ+b
EETVBV5xtYRBlbIiyzYiDMbNt6YmrZ9A6m/grJ+eCK5WrBfW6YZjZ8OF7KO3
j0CDXaBLKC0c7aILYRycYpBxUvkevBiOp6mOXh8+iIP9cLj45cinsOr/l5NZ
5ijo/Us0ayefwvKBmLyI5DF8H+2/JSgdgZZnfveNJY6jLZo/+3tfBEw9SeLl
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
SKQRzVF8zIsbGwS6M4L6PWj+H8rDjbE=
          "]]}, Annotation[#, "Charting`Private`Tag$32255#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ygrvPfqitUk8/w+IfSbW
          "]]}, Annotation[#, "Charting`Private`Tag$32255#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"1/Kd\"", TraditionalForm], 
       FormBox["\"Output\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"x*\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Hill Function\"", "\"Mass Balance\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8280082042572823`*^9, 3.828008224689658*^9}, {
   3.82800825834079*^9, 3.828008265889926*^9}, 3.8280226703380537`*^9, 
   3.828023160942771*^9, {3.8280270876892815`*^9, 3.8280271175553813`*^9}, 
   3.828028928540042*^9, 3.828101216467981*^9},
 CellLabel->
  "Out[566]=",ExpressionUUID->"fee563e5-8602-446c-9429-0b5d0b5cfa8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"yk01hillfit", ",", 
     RowBox[{"(", 
      RowBox[{"y", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalKappa]", "\[Rule]", "0.1"}], ",", 
         RowBox[{"\[CapitalKappa]D", "\[Rule]", 
          RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Hill Function\>\"", ",", "\"\<Mass Balance\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<y*\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<1/Kd\>\"", ",", "\"\<Output\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8280084856755314`*^9, 3.828008488470572*^9}, {
  3.8280271238352165`*^9, 3.8280271273725805`*^9}, {3.828028117947029*^9, 
  3.828028118383278*^9}},
 CellLabel->
  "In[567]:=",ExpressionUUID->"51b25d78-7f2f-4b5c-9b17-1c667c144a3d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
i/JdBlCstLheR1hIycbQL2kAfHbthe2EJx+5hsitDUBf8vyZKcLT2sfMPlIN
QmufqPo0YaOFPZu4Nw9CqHbMYoaw4qExEQ7aQaz6Xw+bI3zw1ctQpt2D0Amg
+7FIuEmzzmL98CB46V7o/yUsMKtF36E8iJmjmqrb/xH10FQqfK06CBruEF16
wlLfJG1JGoPYnvHeZAdh3TcnemJ0BuGxM+0eA+FXQnSJdiaDYD4R/nQ34XG7
rwq7Hw7Cnnr5GgfhiPWDr5WjB8FkqCPKT1jgJjuJ+tMgIu0s9h0lnNPA+CMz
fhCKH25vUNwQvnaV8zPx+/sOFwsQXr/Yzj+TN4jo4JpzQpT53V5VuzcOolWD
ZeUM4T2MC7RlfwfR+O5GnhThlm+vX15aH4SPk5K1NOF3Foe3Nv4bxOmKm3wy
hHfX6G7u3jIELotzPrIUu5avkxmGsLDXVvcSYabVDz/2HRqCm9yeGhXCOyZk
em0VhyAjG8x5lXCd/6DuivIQ0marvlDsKe3Y9VR1CFKZcrq6hOkjU9tfaQ1B
lF7cX4/wdv19zeGGQ3DU2rvZgDBt60J5re0QSp+qFl4nvKUw+POhkCHs5dAs
NCfcLS4tPxA2hKtSLVoWhD/nzw5++DgEyYcRMxTrZkvs3v1pCK1JQiyWhNOS
B+yo0ocQrHnOyJqwQcghsb7KIZy9k9puR+nnw8SygJ9D2F7DrviE8JvfGvrq
v4YwmyJVT7HJ/bXlnStDqJLrVHlKmOGe8n+uG0N4ECyt6kT4hhn5lS3dMGJy
SErOlHpdOX1ZlXsYPAnX+F0Jmwt/6aJTHMbv7CNPPAkXNX1PylUexljV+gzF
LHcXnG6pDuOYgY6uF+HCmMN85VrDiLCPEHlD6d9eH5tnRsPYNOs57k34y4op
/e/7w/gbqXPKl1LPQgaJ0YhhkAfC7wcRNtLjZ/KNGob+J1I7xVm/pUYuxg7j
xVu7Mx8IGwo9fBWeOIynTZ+WKc74OPJdN3sYh0bPWYUQ1nPJtWyuHcYW14eX
wwknXroeUfBrGNKZyZXRhIUFeEhYGYYChw1rDOEChsGewtVhMByZNKW4qVV/
bzHVCPiCp6liCS/pX31Tun0EsbfVRT4RJtmoPq7aPwJZ/z/e8ZTxH0g6LbIj
+MsyxJBC+OqT9WX1SyO4hSeaFA8bfvVtVRwBneL3IIqXeMUa21RHcPFM/qHP
hNk/i8h26I6g39VQOJXw9VIB4V7LEbDy61xKJ7w8w8E0HjACduMFqWzCfqET
lSFBI+hir3Cj+PTlTCeNkBF83a5dTfG9dGVy0ccRKPTHKOcQnnN41hCcNALX
MwwauYTHaMY91UpG0BEmp5ZP+Dt3Gt23uRHojzzgKiBs1/yk2HZhBKUOAjoU
73mh8PDozxE41ke/o1htfGTy/Z8R2NQNbS0kXJ/EWmWzeRStaX6zFJefe+x2
hH0UBs/Zk4sp/dOQ2+wnPYqgabMt5YTdFXNdOeVGocUaJ0zxNSl+2phLo2Cv
yzOleNNp+p3ZKqOweq9VRrHK7kbWTp1RvJm1da4gPNmkfZTzLnEVb7b7WUmY
Q+WmWrT/KFI0K3JqCDvJu4Znjo9CffOvmkZKXhiYXROaGgXvZtsFinnvK7In
zYyi8G4DSxPhmo+7fKMWRmFGz2NEMfNqqNu7v6MwYjv3k+K45Oy71gxjMHus
tqeF0u/dk+cFzoxBhmaLeBthnj6FzijXMQi/33ymk/DrkvOftdzHkMIZpk3x
j08Cbts8xlDbw/6A4hIbBmFznzFceJ2VQ7EpbYv3qeAx0Ik6i3ZR5jt9Va44
dQwR1a4nuwkLvr6V3d8zBqt/+5h6CYuJuvixnxpHklPtkwHC7dfZz4QKj2OW
ZtyfYts3KR0HRMcRvjyTTHHSWCfHEfFxzBjl91G83+/4xzOy4zjgbSI+SKn3
Ynuyhu44dsr8Waa4NoG/0uv5OBi/pegOU/qzv3GFunUc3EHH50cp+cFuk/Xl
OzG+TGvzGOHiPSz37neOw2P4DhvFfHR6k5N940TeXJOkmPxzvL1xchwG9fr+
FD+v3sgI3RhHvMqs6DhlvXaClueOTsCXP8dqgvJ/r/EatnaegKVxafIU4V76
72ZrLyZw+4n/N4pLlDjJL90mYJqiW0+xT0PCapjHBGidCmYpPtpSyVzvPwF1
vrmj05S87KKW40+YgFrhQjTFFRP3E4daJhAmPeg9Qzhwi4GdOu8kTuhlSc0R
3jDZK9LMNwmG0OuqFJuWNi1f5p+E7DqNPsVCz6UeKAtOwu/8CXuKq/4deSR/
dhJpH3fEUfz7708nktIk5N3/0s0T1l585XHUbhLX03srKN7TnxW5qWwShx5b
8y1Q8nrHkyc5FZO4IVh5kuLt56V1LKonYe/OLEHxpsCWne0Nk2jV9tWg+Ica
2SG+axKaKgefUdxUfuSyKnkSQ+xeHRR7JgevhnJMYWSi0WmRMM0TZ81z96YQ
Hvwt5wfhzMXZlULbKTA3GhZRbHpTJ1zWfgoWHqtVFJddPjGt4TiFxEzubopd
DvY5WbpOwdd43xrFW6rOJkYFTSHm+yjpJ+X99ixQM5RMYTl2tJBiqniDz8O7
pxF9Jyl1iVLv2Q7LcJZp1Crb5FLsKaQmeI1tGuZ0p4oo3psrlfydaxpcB8Ib
KRasPJJYdWQat02F5im+NvYjNoU0jVv/Th9dJpzH8zLs0Z1pVB8YDaXY5sNn
r90l06BKX7P7RThn7cPLkrJpeO+ScqR4zcDN2aZyGhdTXZwpfnlI/35L3TS0
vqx4URyStF3/Xcc0rB8mxlJcXnBDYPfcNLh3n+ygmG1kX+0uthmMtQ8I/yb8
7Zg77S7LGVxnChqh+Ezb3vp31jO4EWM7SXHq409vmW1nkDGkMEdxZH0FB5vD
DD7pkn9R7G5Fc5z7+QwcApi2/yGsnvFc7XjADGZtsk9QPCH25MOlghnki3x0
oHiXgo3Ac4ZZbPv6gHqFcEQxI73YrllcejlBQ7HQueSpxT2zeMqsuZ1ilSOT
scbss3B3OrSH4tdbDXgu8s7CeTiYl+ItpZdYqcRmsfLfsizFv87zUD29MYso
X71XFPceb2p9+HUWkv5ONH8p6wkD76jBHE7VJzVTrP/5zC6ujTkUBy46rhJ+
5vrRuTdhHiyS/WxrhJMnuYIZlIh9fMrVn2L3UFejfhUygtXd31Nsqj53OEWN
uHcavgqimPPr11TlK2Sk33wZSvFrb70Kz+tktCraxlBsdiZocftDIuc16bMo
PujCLL8tlgxnXalWirvmRlpiE4l9Kf1nO8U+VzL0ZdOIcw1HeDfF/46q27p+
Jfb9cxNDFPc2e4dtbiVyx0ligWK/84b8UZ3EPetI5U+KFWMEMyX7iffcp/Sb
4nyH+mrnKTKkN+Q2KL43HKLJQybqtlpAvU74iJLFQNESkbtGJ2koHsw6f8eI
uJd/PBVOS/F7bvrlf5S6PaTdQfH/D7+7Jw==
          "]]}, Annotation[#, "Charting`Private`Tag$32339#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8vQ67rnVCG5LmulpPbL+iIzuOb9GOO+dZZbrUxDymvwZx2yEAG3WqPgKhcLL
T+LSvjZCvNbRUPIqBYN9a87n/WjEXO4isyDiwDbZnNpFdIxN1iXYXCPnsfHl
PYqXDo5ELWE+Ewo88aJfpUGH9HxnkrQZhdRH+eFyynTkJsVa+BCf1jytdVyV
jg1/DQ2/EntO26bqaZP1e+83fjCnwCVTYfHQhA5Fl197BG9RWFJ6beqTJx1B
wXdfNVlQiHz7M6DSh45Uw9c82y0pKJu4q9P96dh/9NnwfWJHjsz4oQg66a86
rQWtKCycZjNdkkOHZA+3qb41hR+94V/UBuiIetQtnmtDYXKuv69Vsgljnq87
ljygkGXiWax2oAkxXw+qqRM/bT8a/elwE1b/3b/Zi5g3O+hW3PEmlDvkLOF7
SM7nnv7844tNWH7Rv1X4EYX339r4RV404ciOs2Pr7Shcu+ryx8+9CWI/d5jp
EEu27B9c4d2E/+7amnoRl6f7xM4FNUF4mH1kqT2FGWstmZr0JkT53J5nEKvM
1OlY95P/i8oqiHpKYc1lu4Ojw03QrSpP7yLuaxQXvDjRhJnWF4dXOlCwSXH7
fGy2CUKp6Wy2xCEWqtb8nM1Y3jcUqOBI4Tuj1JN2oBn6N7e2lDwj+ZzIq+b2
aEZJnp3cMxcKt9+d2mrm3YwVIt1RCcQyyp8flfk1Q+lkQFEzcXUQx+7HEc04
sFKBd+tz8rynz3uO5zSjIt1XpZD4aPZ37dLPzXjIrXl79AWFzmd7ex8cakF/
l5n8cjcK4ZJl+1uPtmCb6lHjncQ3e895SCq3YKNRmroqMYvMU4yebMH1d29s
XxBvn6gP07nagoraRwpsr0h8p29e3+PZgvlIf87/iLk3xlDDwy24NJsTFudB
Qf7ss97P4y1YuO01WERs7WlYM8RsQZVV6nwncRsrX8zAjxbc+sZavtyTQvDI
C4MerlbwMVcmmRBLpJjVNUu3wuDsOq6NXhQ0lSQSip1aUbah6bPFawr2jzn8
i0gfvUmKtsaJOCVzxIXm0YqNa2R3+BGvFQ0xLvRrxbvhlJ+fiHu4VgnkJrYi
cnGCFvcbEm/bzIvUllac/719cTTxK9PM66EibVhf/jm72JvChHzSC85dbcg5
OCDWSnyCLyr+3p42HP7p7jxKvKjCh6kh24aw7MYJTh9SD0Rs7v081QaXd0GO
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
          "]]}, Annotation[#, "Charting`Private`Tag$32339#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"1/Kd\"", TraditionalForm], 
       FormBox["\"Output\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"y*\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Hill Function\"", "\"Mass Balance\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.828008489260091*^9, 3.8280226718501816`*^9, 
  3.828023164162415*^9, 3.828027128020424*^9, 3.828028928909829*^9, 
  3.828101217046647*^9},
 CellLabel->
  "Out[567]=",ExpressionUUID->"bfc63e2c-97af-43f6-9273-6163f8ea44f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\[Kappa]=10
Use equation from notes to find Hill coefficient, n.\
\>", "Section",
 CellChangeTimes->{{3.8280086838100295`*^9, 3.8280086947423344`*^9}, {
  3.8280089510298977`*^9, 3.8280089540709867`*^9}, {3.828027149719348*^9, 
  3.8280271703093767`*^9}},ExpressionUUID->"35de4675-167f-4f34-aa09-\
774665bc919a"],

Cell[CellGroupData[{

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvQeYFMXz/z/kDCdKUpAsIILkIEjOQSSKCH4A4UhKlKiSkwiSQfKBZJGc
M3LkHA6OnHM6kiDp/u/v1o/6NzO7e7O7s7t3R72eB569np6enpmerqru6uqM
TdvVCoypaVqn+PivVpOupTt2bNK9dgD+qNu2U6sWbZs3q9z2x+Ytmncs0jQW
Eu/g3zjk/7/f4YIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCAY2btz48OFDf9dCEARBEAQXuHnzpqZpadKk8XdF
BEEQBEFwgVevXmk28MPfdbGAlStX/vnnn/66evR4hszRo0fnzZt36dIlf1dE
EARBsE+qVKkgwf/44w9/V8QCEiZMiHu5efOm7y89bdo0XDooKMj3l7acTZs2
aW+yfft2f1dKEARB0HP9+nXqpf1dEQvYunUrbqR3796+v3Tt2rVx6YkTJ/r+
0tbC7QE0bNiQfzdo0MDfVRMEIfrw6tWrunXrom8ZOHDg8+fP/V2dKAx10QcO
HPDqVa5evXr48GFj+pMnT3bu3GnJJdAkChUqFCdOnH///deSAl3ixYsXvr+o
tfCsyvTp0znx77//jjY6niAIkYTt27erA31Llizxd42iKnPmzMED/P333716
lYCAAFzFOE9Nr2/NmjWWXGXYsGEoDRaxJaW9baxduxZPL27cuLr0pUuX7tmz
R5f433//jRo1asGCBS9fvnRebK5cufg7TZ069cmTJ62stCAIURDYCwMGDOjW
rVvs2LGpc9i3b5+/KxUlgfGYIkWKMmXKePUq8+bNs2vKUeKKFSssucrTp09R
WoECBSwp7W0DWhyenlFYG2FrnUiSJMnmzZsdZdYMPHjwwNKK2wEt4e7du96+
iiAIbnDv3j1VHAwdOpT+9KMrcpTmu+++ixUrlrd7PHpHeHeccvnyZUpcuHCh
VVdp1qwZ7sUv/mxRHXoXkH3mM6ukTZvW6JC/a9cuOtqiRQv8mTVrVvxu27at
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
szw0JYRRjBgxpk6dSnufofyMGTM6mgrHUc9H8keNGoViI2cwfDM8evSIH44u
9uCZM2feffdd37QT2vGkT58+xkMPHjxQN9q4c+eOk3LIIrb7xtlArlq1qoU1
51F0Tlm2bBkl4tk6P3fPnj2U8+LFi47y7Nixo2/fvrt377asxvbAt/DTTz9R
ZZInTx6lNVJBiPYYxZmP6devHyowbNgwa4tVx8ztouoMNHLrXIgj//Xr151k
uHnzps8eJvp5dLM5cuRwyV5W63/t2rVDhw6pR7/44gt+ONB2OJ21rKxZs3pe
8wihCMYVK1Y0HjLuHrJmzRpH5VAGvFNY35ptf3ndIc3qrQOpTFfnvtGu6tSp
w1VyNOpeqVIl9cabNm3qjXjsa9euNX4pTvJDPZ4yZYpVTguCILgEb5+qJgYG
BlJKo0aN8ANdvd1z2ZDRPFtnHRYWRoVYO9KI/m3lypUlS5akLSpAuXLlSASk
T58e/+/fv59yPn/+nDJMnDjRUWm42VSpUmlOTaTw1334yZMn8WAfPnx49erV
nTt3Xr582VrrlUQSo9s1L3HixJq9MY3Tp09ritVJ55YuXZpzUgqHiNHdlJOW
YC3btm3T7I2iczVI2WPz1pEg04khljJs7Vq+2ov3M3VU8okTJ9AICxUqBGWJ
TGlUXr0vYNzDC22pRIkSlKdFixakbRK3b992r6q04/ClS5d06eq7RqN1LsFV
N4MjR464VxNBENyGnWbVREqBccefp91zacs2Fbe3faHx51q1arl3unlWr16N
C/3888/qfXXp0oVvwZEZTkcDAgKcDCpCcOfLlw/ZkiVLptmjWbNmnt8CeQ5Q
aXZfEHf1uhNZ44KIDH9TwHXt2hWWlJrSqlUrOosFus924NqxYwcuN336dDVx
4cKFavUokfbcdBSJbsWKFZz/xo0blAibMUeOHEmTJnWuiblH586d6XJjx441
Hh0yZIiuPfTv359nLo4fP+6oWLQrygPdg1IePHjAhei0BUpEC3fyvmiLB7uv
9d1336X0pUuXQoLPnz9/0aJFjspR7yVRokSOsgmC4D0021aJagpNRG7atIk/
T3SqxhPnzZun2fZfPnfuXPz48SnnunXrdNkuXLgA6eC8/+ehAJirnt+RE9jc
JubMmQO7m34XLlwY/3/++efGs9avX692dwcPHtTJ8QMHDmgGKleu3Ldv3zx5
8nTo0IEGqNGHe1h/NtlgIhUpUoR+d+zYUc1D8dkAnrzudDxeOnTlyhVjhVX4
fd25c4dSxo0b52HlTbJz507NMB6i1i1mzJiUSHfhxP8fGXRa5Y8//ohTgoKC
vFFzqH9cSVUih4WFwfSm9JkzZ969e5c2+Kbvjt0zRo8ebXe6HJY7ZdCl0/bu
qo/9gAED1Ac1cOBA43cHY1nNo1sGAg3H2BigkBhDUKpaBLh69arrD0wQBE8p
X768ToKTzt+mTRv+PJs3b2488enTp3SUpmJpQbRm8C8qWrSoZhPN+L9bt27G
ciAfP/nkE75WZnuwV1JISIiH98sdqdr/oA4sHNHJ605p2LAh0mEG4veMGTPw
GxJZzUADv+3atYOVFBoaSmLFG30amWw0H021hR6lyzN79my+L+Nwbq9evTTb
LDMLhaNHj/bs2bNUqVKUsnXrVt0pffr04QLxNnWz55YDow8XKlOmjJpIV9cZ
qjT/0rJlS5Mlw6JE/jRp0rBcg7Ywd+5cS6pNLF++nB8UP/wmTZrwA4wVKxb/
plkJVIb2HCcqVKgATU+VvLt370Z6jBgxdNfSjXKTCmoXPCJ8reGKBgilGgoD
fqRMmdJ4F//8889vv/2mK0Q3KjJixAg+BIPdukcoCIILkKRWHaLUubnixYvT
D/LoVgkODs6SJQsONWjQgFKo+4J0UAUHTdv973//o3KguquF3LhxQ9dR5M+f
v6IBNmGMdqWr0FAnBNmxY8dSp05dtmxZFknsiobeST2Fxz/37t3L9XQyqrBl
yxbK4/Y0pSN4QDX8tVCDbqPLw45noECBAsZCoEdxhu3bt3M6T4sYHfbOnTun
elJBpyKJ4A3I6tfpSHzXKvSca9asabLkzz77DPn37dtHf/J8xMaNG8eMGTNu
3DjP1yOo307ChAkpUTfyQ29N15LxfZELH/HRRx/xJDULU+PlOP3s2bP0G204
XPEtUSlRogRLec4TO3Zs53eEnoEr1qlTJ92lNYNkFwTBlxQsWFAz+PQmT56c
Ps9ChQrRniC///677kT+hIsUKcKJZOKhr+CUFClSqN0Ii3vi5cuXP/3006hR
oyD0b926RRaKVz2mzpw5g0tkz57d7lEawiU2b958+fLlFi1aGDtDAn1guG1+
2egQXqNGDcrTv39/CytvlAWawZOtd+/eSCRXJUIXsF0tpF+/fuqhTJkyqSXj
KamKCl4WLFY6FGHP7wksZXQpuv1h6dU4mahVgZhG5i5dutCfqheWiueVZz3Q
7i0YHdV0XLlypVixYurpZCxrtlmYunXrLl68mN84ZyOLuHTp0lwOj4c/e/bs
zz//VO+Rta/GjRvjPbKTgA4ocuyfhm9Td0f0p3HERhAEXzJ27FhNMUyIoKAg
/t7Z203nK07uZzzrqoNXrYaEhFAKJDUt5tVJHBVaWQa1wRt3SlDwtHz58jnK
cPToUePtxIgRo2nTpvgBEa864TNGk5ydpa2tP2kgROXKlbU35zh4LgPmJHpg
zqmbYJ0zZw6lG53keQCBMEocNjOtvS8VGnJR9cBJkyZRY+PGs3LlSqSUKlXK
TIGoc9GiRZMmTcqjInyDadOm5d+6qC9uM378eJT2/fffq4llypShV2Z3slvX
ftQnTO6RTgh/vXGPGhmJ2jkXwpnVbX3I12X48OHG+rRs2ZLy0wy48aXTn7J7
iyD4l6lTp2qKmytx4cIFtX9o3bo1fuTIkUPNc+/evXjx4jmS4L/88gvnhJJP
ZnW7du2oE3NSn+rVqyPP7NmzrbzJN4F0i9Czeu/evd9++y26fVhtxr3McDoL
aADLyG4h27dv94aRAtufJtlRjWzZsqECM2bMICFF9Vm9ejXlRM0//fRTo3uh
J+BVeluCsxKlJk6ePJkSkyRJwk9+xYoVZgqk1VjfffcdpxjDBaBxWnwbb4IX
1KFDB7pWypQp8T9P35CWyxMHugV9pL1Q/f/+++9p06apk+ljxoyhbPQn9GRo
47yygIeA6E+dk7zdxaRq/uLFi9OfJUuW1N608aFmixAXBL9DHztMS106fZ69
evUKV8Zd8+fPr+aJGTOmZgvcFBAQQBNwBw4cQN/49ddf2/2u0YnRh587d26a
U4YFpMvDAsLbfunRA17dzLMVjgZF3QZS4M8//6TfPIruuV+9cyDEDx48qEuk
SAWMeQcqyq9zS7hz5w4KzJkzJwSr96b1VdD+oQyT0qUpbuQ8I4+UXLly0e96
9erR0eDgYEpxHlAIT0Onk9SpU4eP3rp1Cxa38SwagtB5J7LF/e+//0IJpM9c
U4bfwxVHVgI9gGbz38P/cePGdRJpRxAEC6ExOmOc8PPnz0+YMIH/5AVT6les
enRv2LDBzOWM65iMebJmzYr0ggULunVDbx0wsflhemOXNy48RowY9GPJkiWW
X8UkUCaPHTvm0lY4POvhvVq5yrNnzy5duqSuSdR9FJ07d+ZDNIOv2RY/Oi/2
4sWL1atXr1y5Mk7RuYw6gvwBdAsSw19/g0zGjBmNk1/oCqpUqaLZo3fv3mau
LgiCh+DDbNWqVYQONuE2zxYYzrpE57LYLnfv3s2bNy/EAcx/R3kmT54cYShp
geFX4I24KzyKC2CuUkCYqAUseifeF5GEI0eO7NixY9myZbpoA+rW9t647mef
fZYqVSpdD4CGRC6sGTJkWLBggZl2hWq/sOGNSgqC4A1oKTThxx1S3nLGjRtH
r8Ba13cV2HTSOfsL/sRorspahg8fjpIDAwMtL1kQhMgPueUA6Or+rstbysOH
D7mTb9u2rb+rI1gMb+nijV1x2fPkzJkzlhcuCEIkx9ujfIIZKFwJ4Y2g34If
2bp1K79cb2z3OX36dM2DfQ0EQYjScNQyM/PpgjfgAOaiSkU/eNkX6Nu3r7+r
IwhCtIL3dNi1a5e/6/L2wrPhmr0tZoQoDUdmE/VMEATLoa2y4sWL5++KvNWo
ZrjP9gMVfEPp0qXlExMEwRvw3gr+rshbjRqUW7yLox+W75UjCIJAjBgxQgZv
/U6dOnVkuFUQBEEQoiJVq1YVCS4IgiAIUZH58+eHhob6uxaCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCEPW4du3axYsX/V0LQbCACRMm
aDY8KeT9998fOnSoVVWKhLx48eLgwYP+roUgCJ7y6tUrz3s8QYgMnD17VnuN
24XEjh072n8RdIODBw/2d0UEwSsMHDjwwIED/q6FF3n06BE+4W3btm3duhU/
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
    "], {{0, 237}, {662, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{280.00000000000006`, Automatic},
  ImageSizeRaw->{662, 237},
  PlotRange->{{0, 662}, {0, 237}}], "\[IndentingNewLine]", 
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
6L1KQEVeHH3SpEniNXW5LRRJFRQTE8M/9c6dO6XbxRQEagUG1R7Pi8vXhfgZ
NCkLXeRfunSpxsDt+tQv7dq1qzQG2Wxd1RsN3Pinpr5Bjx49NPqoHSNUWzz5
9k8//cQPs7OysrInn3xSo32ezhIHLSkpiY6OruAuNeoYJyYmHj161FwPC9uK
sWPH6q0BhJMnT6odI1RbmZmZ0pNN3NdaWlpKb5s2bapueDUN3zDQp0+fiIiI
/fv34xo+WJP0fnXZo/e8saa1zgA1WaNGjfTeI0cbNfqevbWoe/fuBQcHb9q0
CfPnAFifoWtTPLGPdZYToh7I4sWLZWPkjIwMKxwaAARx5VC2nZ98X7NmjUWP
/uDBg3nz5kkrAemC4NKUNKjBsAXAor766isqd2L1PSElJYW2Dx8+3HKHFhP+
aLQPwly7dk18xBuDgoKkQRo1Rx/I3L59OyYmRjx5VIEGDRpwnTx69Ghvb+/+
/fv7+vpqtN8xOTo60otXXnmF3/r4+Li7u3fr1m3atGnt2rWjjSNGjOBMBgwY
wMlGjRr1xRdfUFYTJkwQj284ODjwi8DAwGHDhq1atYr++qjtVae3IS7/d2qO
J554Qrad/mQ0fDDLPfOlpaVDhgwZM2ZMcXGx7KPLly9zVC+88IKI0KgZwitN
PEfcuXPntWvXWvTJSsr8ypUrVPGGhYXRsbZs2bJx40ZZZ0mjnQqJyp2Xl1dI
SMi333779ddfz5o1q1evXlQ2qbROnjx53LhxVOieeuopjXbRJfr/6aefrlWr
Fr146aWXDJV6vvmZv002ipOTk6GP6Lj8gh+vqLRNmzZZ7tcOhojfv6GPSkpK
pBt37dqlkazWZznr1q2Tnh55eXmWPiI7evSo3vPT09MzNjb2wIEDsl+IctQX
OnbsGC9ZyBOXmY6KPDXljRs35qpAo63ApQn4LqZ69epNmTKF6jd/f/+CgoKK
46ReRGZmJnXMoqOjqaZKS0szVCXS8I3+LtSsU31u6AaS+/fvU26RkZFU0V28
eFHWASgsLExISIiKipL9XMbOBg9mwVP70qmu+xH/XWTz/okp9awQG51p4eHh
1CWwch+SisBHH31Uu3btiksi9Vv69etHpW/27Nk0lpkzZw412VRPUuM+d+7c
4OBgaq9dXFzGjx9PiVu0aCHdl3rs3HxTyhUrVtDuVPSoqknWotepqalJSUlU
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
    "], {{0, 134}, {346, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageMargins->{{0., 0.}, {0., 11.3333333333333}},
  ImageSize->{245.16666666666666`, Automatic},
  ImageSizeRaw->{346, 134},
  PlotRange->{{0, 346}, {0, 134}}]}], "Input",
 CellChangeTimes->{{3.828027323887308*^9, 3.8280273370784445`*^9}},
 CellLabel->
  "In[568]:=",ExpressionUUID->"b244cefa-f4fa-4393-aee2-59607386d520"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvQeYFMXz/z/kDCdKUpAsIILkIEjOQSSKCH4A4UhKlKiSkwiSQfKBZJGc
M3LkHA6OnHM6kiDp/u/v1o/6NzO7e7O7s7t3R72eB569np6enpmerqru6uqM
TdvVCoypaVqn+PivVpOupTt2bNK9dgD+qNu2U6sWbZs3q9z2x+Ytmncs0jQW
Eu/g3zjk/7/f4YIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCAY2btz48OFDf9dCEARBEAQXuHnzpqZpadKk8XdF
BEEQBEFwgVevXmk28MPfdbGAlStX/vnnn/66evR4hszRo0fnzZt36dIlf1dE
EARBsE+qVKkgwf/44w9/V8QCEiZMiHu5efOm7y89bdo0XDooKMj3l7acTZs2
aW+yfft2f1dKEARB0HP9+nXqpf1dEQvYunUrbqR3796+v3Tt2rVx6YkTJ/r+
0tbC7QE0bNiQfzdo0MDfVRMEIfrw6tWrunXrom8ZOHDg8+fP/V2dKAx10QcO
HPDqVa5evXr48GFj+pMnT3bu3GnJJdAkChUqFCdOnH///deSAl3ixYsXvr+o
tfCsyvTp0znx77//jjY6niAIkYTt27erA31Llizxd42iKnPmzMED/P333716
lYCAAFzFOE9Nr2/NmjWWXGXYsGEoDRaxJaW9baxduxZPL27cuLr0pUuX7tmz
R5f433//jRo1asGCBS9fvnRebK5cufg7TZ069cmTJ62stCAIURDYCwMGDOjW
rVvs2LGpc9i3b5+/KxUlgfGYIkWKMmXKePUq8+bNs2vKUeKKFSssucrTp09R
WoECBSwp7W0DWhyenlFYG2FrnUiSJMnmzZsdZdYMPHjwwNKK2wEt4e7du96+
iiAIbnDv3j1VHAwdOpT+9KMrcpTmu+++ixUrlrd7PHpHeHeccvnyZUpcuHCh
VVdp1qwZ7sUv/mxRHXoXkH3mM6ukTZvW6JC/a9cuOtqiRQv8mTVrVvxu27at
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
szw0JYRRjBgxpk6dSnufofyMGTM6mgrHUc9H8keNGoViI2cwfDM8evSIH44u
9uCZM2feffdd37QT2vGkT58+xkMPHjxQN9q4c+eOk3LIIrb7xtlArlq1qoU1
51F0Tlm2bBkl4tk6P3fPnj2U8+LFi47y7Nixo2/fvrt377asxvbAt/DTTz9R
ZZInTx6lNVJBiPYYxZmP6devHyowbNgwa4tVx8ztouoMNHLrXIgj//Xr151k
uHnzps8eJvp5dLM5cuRwyV5W63/t2rVDhw6pR7/44gt+ONB2OJ21rKxZs3pe
8wihCMYVK1Y0HjLuHrJmzRpH5VAGvFNY35ptf3ndIc3qrQOpTFfnvtGu6tSp
w1VyNOpeqVIl9cabNm3qjXjsa9euNX4pTvJDPZ4yZYpVTguCILgEb5+qJgYG
BlJKo0aN8ANdvd1z2ZDRPFtnHRYWRoVYO9KI/m3lypUlS5akLSpAuXLlSASk
T58e/+/fv59yPn/+nDJMnDjRUWm42VSpUmlOTaTw1334yZMn8WAfPnx49erV
nTt3Xr582VrrlUQSo9s1L3HixJq9MY3Tp09ritVJ55YuXZpzUgqHiNHdlJOW
YC3btm3T7I2iczVI2WPz1pEg04khljJs7Vq+2ov3M3VU8okTJ9AICxUqBGWJ
TGlUXr0vYNzDC22pRIkSlKdFixakbRK3b992r6q04/ClS5d06eq7RqN1LsFV
N4MjR464VxNBENyGnWbVREqBccefp91zacs2Fbe3faHx51q1arl3unlWr16N
C/3888/qfXXp0oVvwZEZTkcDAgKcDCpCcOfLlw/ZkiVLptmjWbNmnt8CeQ5Q
aXZfEHf1uhNZ44KIDH9TwHXt2hWWlJrSqlUrOosFus924NqxYwcuN336dDVx
4cKFavUokfbcdBSJbsWKFZz/xo0blAibMUeOHEmTJnWuiblH586d6XJjx441
Hh0yZIiuPfTv359nLo4fP+6oWLQrygPdg1IePHjAhei0BUpEC3fyvmiLB7uv
9d1336X0pUuXQoLPnz9/0aJFjspR7yVRokSOsgmC4D0021aJagpNRG7atIk/
T3SqxhPnzZun2fZfPnfuXPz48SnnunXrdNkuXLgA6eC8/+ehAJirnt+RE9jc
JubMmQO7m34XLlwY/3/++efGs9avX692dwcPHtTJ8QMHDmgGKleu3Ldv3zx5
8nTo0IEGqNGHe1h/NtlgIhUpUoR+d+zYUc1D8dkAnrzudDxeOnTlyhVjhVX4
fd25c4dSxo0b52HlTbJz507NMB6i1i1mzJiUSHfhxP8fGXRa5Y8//ohTgoKC
vFFzqH9cSVUih4WFwfSm9JkzZ969e5c2+Kbvjt0zRo8ebXe6HJY7ZdCl0/bu
qo/9gAED1Ac1cOBA43cHY1nNo1sGAg3H2BigkBhDUKpaBLh69arrD0wQBE8p
X768ToKTzt+mTRv+PJs3b2488enTp3SUpmJpQbRm8C8qWrSoZhPN+L9bt27G
ciAfP/nkE75WZnuwV1JISIiH98sdqdr/oA4sHNHJ605p2LAh0mEG4veMGTPw
GxJZzUADv+3atYOVFBoaSmLFG30amWw0H021hR6lyzN79my+L+Nwbq9evTTb
LDMLhaNHj/bs2bNUqVKUsnXrVt0pffr04QLxNnWz55YDow8XKlOmjJpIV9cZ
qjT/0rJlS5Mlw6JE/jRp0rBcg7Ywd+5cS6pNLF++nB8UP/wmTZrwA4wVKxb/
plkJVIb2HCcqVKgATU+VvLt370Z6jBgxdNfSjXKTCmoXPCJ8reGKBgilGgoD
fqRMmdJ4F//8889vv/2mK0Q3KjJixAg+BIPdukcoCIILkKRWHaLUubnixYvT
D/LoVgkODs6SJQsONWjQgFKo+4J0UAUHTdv973//o3KguquF3LhxQ9dR5M+f
v6IBNmGMdqWr0FAnBNmxY8dSp05dtmxZFknsiobeST2Fxz/37t3L9XQyqrBl
yxbK4/Y0pSN4QDX8tVCDbqPLw45noECBAsZCoEdxhu3bt3M6T4sYHfbOnTun
elJBpyKJ4A3I6tfpSHzXKvSca9asabLkzz77DPn37dtHf/J8xMaNG8eMGTNu
3DjP1yOo307ChAkpUTfyQ29N15LxfZELH/HRRx/xJDULU+PlOP3s2bP0G204
XPEtUSlRogRLec4TO3Zs53eEnoEr1qlTJ92lNYNkFwTBlxQsWFAz+PQmT56c
Ps9ChQrRniC///677kT+hIsUKcKJZOKhr+CUFClSqN0Ii3vi5cuXP/3006hR
oyD0b926RRaKVz2mzpw5g0tkz57d7lEawiU2b958+fLlFi1aGDtDAn1guG1+
2egQXqNGDcrTv39/CytvlAWawZOtd+/eSCRXJUIXsF0tpF+/fuqhTJkyqSXj
KamKCl4WLFY6FGHP7wksZXQpuv1h6dU4mahVgZhG5i5dutCfqheWiueVZz3Q
7i0YHdV0XLlypVixYurpZCxrtlmYunXrLl68mN84ZyOLuHTp0lwOj4c/e/bs
zz//VO+Rta/GjRvjPbKTgA4ocuyfhm9Td0f0p3HERhAEXzJ27FhNMUyIoKAg
/t7Z203nK07uZzzrqoNXrYaEhFAKJDUt5tVJHBVaWQa1wRt3SlDwtHz58jnK
cPToUePtxIgRo2nTpvgBEa864TNGk5ydpa2tP2kgROXKlbU35zh4LgPmJHpg
zqmbYJ0zZw6lG53keQCBMEocNjOtvS8VGnJR9cBJkyZRY+PGs3LlSqSUKlXK
TIGoc9GiRZMmTcqjInyDadOm5d+6qC9uM378eJT2/fffq4llypShV2Z3slvX
ftQnTO6RTgh/vXGPGhmJ2jkXwpnVbX3I12X48OHG+rRs2ZLy0wy48aXTn7J7
iyD4l6lTp2qKmytx4cIFtX9o3bo1fuTIkUPNc+/evXjx4jmS4L/88gvnhJJP
ZnW7du2oE3NSn+rVqyPP7NmzrbzJN4F0i9Czeu/evd9++y26fVhtxr3McDoL
aADLyG4h27dv94aRAtufJtlRjWzZsqECM2bMICFF9Vm9ejXlRM0//fRTo3uh
J+BVeluCsxKlJk6ePJkSkyRJwk9+xYoVZgqk1VjfffcdpxjDBaBxWnwbb4IX
1KFDB7pWypQp8T9P35CWyxMHugV9pL1Q/f/+++9p06apk+ljxoyhbPQn9GRo
47yygIeA6E+dk7zdxaRq/uLFi9OfJUuW1N608aFmixAXBL9DHztMS106fZ69
evUKV8Zd8+fPr+aJGTOmZgvcFBAQQBNwBw4cQN/49ddf2/2u0YnRh587d26a
U4YFpMvDAsLbfunRA17dzLMVjgZF3QZS4M8//6TfPIruuV+9cyDEDx48qEuk
SAWMeQcqyq9zS7hz5w4KzJkzJwSr96b1VdD+oQyT0qUpbuQ8I4+UXLly0e96
9erR0eDgYEpxHlAIT0Onk9SpU4eP3rp1Cxa38SwagtB5J7LF/e+//0IJpM9c
U4bfwxVHVgI9gGbz38P/cePGdRJpRxAEC6ExOmOc8PPnz0+YMIH/5AVT6les
enRv2LDBzOWM65iMebJmzYr0ggULunVDbx0wsflhemOXNy48RowY9GPJkiWW
X8UkUCaPHTvm0lY4POvhvVq5yrNnzy5duqSuSdR9FJ07d+ZDNIOv2RY/Oi/2
4sWL1atXr1y5Mk7RuYw6gvwBdAsSw19/g0zGjBmNk1/oCqpUqaLZo3fv3mau
LgiCh+DDbNWqVYQONuE2zxYYzrpE57LYLnfv3s2bNy/EAcx/R3kmT54cYShp
geFX4I24KzyKC2CuUkCYqAUseifeF5GEI0eO7NixY9myZbpoA+rW9t647mef
fZYqVSpdD4CGRC6sGTJkWLBggZl2hWq/sOGNSgqC4A1oKTThxx1S3nLGjRtH
r8Ba13cV2HTSOfsL/sRorspahg8fjpIDAwMtL1kQhMgPueUA6Or+rstbysOH
D7mTb9u2rb+rI1gMb+nijV1x2fPkzJkzlhcuCEIkx9ujfIIZKFwJ4Y2g34If
2bp1K79cb2z3OX36dM2DfQ0EQYjScNQyM/PpgjfgAOaiSkU/eNkX6Nu3r7+r
IwhCtIL3dNi1a5e/6/L2wrPhmr0tZoQoDUdmE/VMEATLoa2y4sWL5++KvNWo
ZrjP9gMVfEPp0qXlExMEwRvw3gr+rshbjRqUW7yLox+W75UjCIJAjBgxQgZv
/U6dOnVkuFUQBEEQoiJVq1YVCS4IgiAIUZH58+eHhob6uxaCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCEPW4du3axYsX/V0LQbCACRMm
aDY8KeT9998fOnSoVVWKhLx48eLgwYP+roUgCJ7y6tUrz3s8QYgMnD17VnuN
24XEjh072n8RdIODBw/2d0UEwSsMHDjwwIED/q6FF3n06BE+4W3btm3duhU/
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
    "], {{0, 237}, {662, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{280.00000000000006`, Automatic},
  ImageSizeRaw->{662, 237},
  PlotRange->{{0, 662}, {0, 237}}]], "Output",
 CellChangeTimes->{3.828028929041754*^9, 3.8281012173884506`*^9},
 CellLabel->
  "Out[568]=",ExpressionUUID->"9eb298ec-ac6e-41b4-bbf1-432a823d954f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
6L1KQEVeHH3SpEniNXW5LRRJFRQTE8M/9c6dO6XbxRQEagUG1R7Pi8vXhfgZ
NCkLXeRfunSpxsDt+tQv7dq1qzQG2Wxd1RsN3Pinpr5Bjx49NPqoHSNUWzz5
9k8//cQPs7OysrInn3xSo32ezhIHLSkpiY6OruAuNeoYJyYmHj161FwPC9uK
sWPH6q0BhJMnT6odI1RbmZmZ0pNN3NdaWlpKb5s2bapueDUN3zDQp0+fiIiI
/fv34xo+WJP0fnXZo/e8saa1zgA1WaNGjfTeI0cbNfqevbWoe/fuBQcHb9q0
CfPnAFifoWtTPLGPdZYToh7I4sWLZWPkjIwMKxwaAARx5VC2nZ98X7NmjUWP
/uDBg3nz5kkrAemC4NKUNKjBsAXAor766isqd2L1PSElJYW2Dx8+3HKHFhP+
aLQPwly7dk18xBuDgoKkQRo1Rx/I3L59OyYmRjx5VIEGDRpwnTx69Ghvb+/+
/fv7+vpqtN8xOTo60otXXnmF3/r4+Li7u3fr1m3atGnt2rWjjSNGjOBMBgwY
wMlGjRr1xRdfUFYTJkwQj284ODjwi8DAwGHDhq1atYr++qjtVae3IS7/d2qO
J554Qrad/mQ0fDDLPfOlpaVDhgwZM2ZMcXGx7KPLly9zVC+88IKI0KgZwitN
PEfcuXPntWvXWvTJSsr8ypUrVPGGhYXRsbZs2bJx40ZZZ0mjnQqJyp2Xl1dI
SMi333779ddfz5o1q1evXlQ2qbROnjx53LhxVOieeuopjXbRJfr/6aefrlWr
Fr146aWXDJV6vvmZv002ipOTk6GP6Lj8gh+vqLRNmzZZ7tcOhojfv6GPSkpK
pBt37dqlkazWZznr1q2Tnh55eXmWPiI7evSo3vPT09MzNjb2wIEDsl+IctQX
OnbsGC9ZyBOXmY6KPDXljRs35qpAo63ApQn4LqZ69epNmTKF6jd/f/+CgoKK
46ReRGZmJnXMoqOjqaZKS0szVCXS8I3+LtSsU31u6AaS+/fvU26RkZFU0V28
eFHWASgsLExISIiKipL9XMbOBg9mwVP70qmu+xH/XWTz/okp9awQG51p4eHh
1CWwch+SisBHH31Uu3btiksi9Vv69etHpW/27Nk0lpkzZw412VRPUuM+d+7c
4OBgaq9dXFzGjx9PiVu0aCHdl3rs3HxTyhUrVtDuVPSoqknWotepqalJSUlU
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
    "], {{0, 134}, {346, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{245.16666666666666`, Automatic},
  ImageSizeRaw->{346, 134},
  PlotRange->{{0, 346}, {0, 134}}]], "Output",
 CellChangeTimes->{3.828028929041754*^9, 3.828101217403449*^9},
 CellLabel->
  "Out[569]=",ExpressionUUID->"d9919de5-da00-4255-abd8-209953ece96a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create new functions for when K=10", "Subsubsection",
 CellChangeTimes->{{3.8280274899095573`*^9, 
  3.8280274975391965`*^9}},ExpressionUUID->"e000a38e-33db-4945-9e52-\
f631482081fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xk10", "=", 
   RowBox[{"(", 
    RowBox[{"x", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalKappa]", "\[Rule]", "10"}], ",", 
       RowBox[{"\[CapitalKappa]D", "\[Rule]", 
        RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.827948817271623*^9, {3.828005274408558*^9, 3.8280053035055523`*^9}, {
   3.828005565880237*^9, 3.8280055821958747`*^9}, 3.8280083348355274`*^9, {
   3.8280089574555264`*^9, 3.8280089608502655`*^9}},
 CellLabel->
  "In[570]:=",ExpressionUUID->"00e0ea39-47fe-4ef9-9db4-3a93ebf1e64d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"yk10", "=", 
   RowBox[{"(", 
    RowBox[{"y", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalKappa]", "\[Rule]", "10"}], ",", 
       RowBox[{"\[CapitalKappa]D", "\[Rule]", 
        RowBox[{"1", "/", "\[Beta]"}]}]}], "}"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.828008338439052*^9, 3.8280083521239805`*^9}, {
  3.8280089641469626`*^9, 3.828008968252976*^9}},
 CellLabel->
  "In[571]:=",ExpressionUUID->"6ebe2857-44e8-4764-984f-8bf5576a97a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]Bk10", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalKappa]D", "+", "1"}], ")"}]}], "/.", 
     RowBox[{"\[CapitalKappa]D", "\[Rule]", 
      RowBox[{"1", "/", "\[Beta]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.828008583401744*^9, 3.82800861281571*^9}, 
   3.828008655593644*^9, 3.828008721902968*^9, {3.828008970872228*^9, 
   3.828008971569787*^9}},
 CellLabel->
  "In[572]:=",ExpressionUUID->"a23d8797-167f-4bb9-8c71-e12719204c3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Since x* and y* never reach 1, I want to take 0.9 of their maximum output. \
Take the limit to find the maximum values of x* and y*\
\>", "Subsubsection",
 CellChangeTimes->{{3.828027504499735*^9, 
  3.8280275319920125`*^9}},ExpressionUUID->"0398001e-1e2b-4685-a7be-\
e16c257fb9f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xmax", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"xk10", ",", 
     RowBox[{"\[Beta]", "\[Rule]", "Infinity"}]}], "]"}], "//", 
   "N"}]}]], "Input",
 CellChangeTimes->{{3.828023474739338*^9, 3.828023496848282*^9}, {
  3.8280275462123137`*^9, 3.8280275469989023`*^9}},
 CellLabel->
  "In[573]:=",ExpressionUUID->"38526f52-4989-4dd3-9e13-13264e7f44b1"],

Cell[BoxData["0.8421935706790613`"], "Output",
 CellChangeTimes->{{3.828023492320191*^9, 3.828023497243534*^9}, 
   3.8280275475877266`*^9, 3.82802892923864*^9, 3.828101217657298*^9},
 CellLabel->
  "Out[573]=",ExpressionUUID->"0322de42-2099-47f6-ab46-4fa36f6086bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ymax", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"yk10", ",", 
     RowBox[{"\[Beta]", "\[Rule]", "Infinity"}]}], "]"}], "//", 
   "N"}]}]], "Input",
 CellChangeTimes->{{3.82802351230513*^9, 3.828023512380086*^9}, {
  3.8280275493447895`*^9, 3.8280275514433765`*^9}},
 CellLabel->
  "In[574]:=",ExpressionUUID->"d6b66d16-75e4-496a-bd56-de998b28e5b3"],

Cell[BoxData["0.9008976309688341`"], "Output",
 CellChangeTimes->{3.8280235128678064`*^9, 3.82802755211532*^9, 
  3.828028929387554*^9, 3.828101217878173*^9},
 CellLabel->
  "Out[574]=",ExpressionUUID->"e30c1438-087e-49de-91d0-d7ead8f57e3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"\[Theta]Bk10", ",", 
    RowBox[{"\[Beta]", "\[Rule]", "Infinity"}]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8280235192346115`*^9, 3.8280235229891214`*^9}},
 CellLabel->
  "In[575]:=",ExpressionUUID->"667ceab6-eb9b-44d8-b1c8-225732e0e4c7"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.8280235238546286`*^9, 3.828028929520479*^9, 
  3.8281012180001073`*^9},
 CellLabel->
  "Out[575]=",ExpressionUUID->"bbbed1dc-7afd-4d89-ac83-4d7aa6cb441c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve for the 10% and 90% values for x*, y*, and \[Theta]B", \
"Subsubsection",
 CellChangeTimes->{{3.828027607690509*^9, 
  3.8280276321867385`*^9}},ExpressionUUID->"6d191fab-8b06-48a4-aedf-\
b7d9d46721c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"xk10", "\[Equal]", 
    RowBox[{"0.9", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828027554008199*^9, 3.82802757998989*^9}},
 CellLabel->
  "In[576]:=",ExpressionUUID->"99c71503-002e-4ad3-908b-1d4cd266d81c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Beta]", "\[Rule]", "1.4771993697773864`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8280275803434052`*^9, 3.8280276541490116`*^9, 
  3.828028929599433*^9, 3.8281012181270285`*^9},
 CellLabel->
  "Out[576]=",ExpressionUUID->"e6e63a49-c6e6-42a4-a0d8-7e82945332a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"xk10", "\[Equal]", 
    RowBox[{"0.1", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828027554008199*^9, 3.82802757998989*^9}, {
  3.8280276516767035`*^9, 3.8280276518161407`*^9}},
 CellLabel->
  "In[577]:=",ExpressionUUID->"db639953-c99b-4176-afa0-0c697addb6dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Beta]", "\[Rule]", "0.02031406543809882`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8280275803434052`*^9, 3.828027652181858*^9, 
  3.828028929674389*^9, 3.828101218251956*^9},
 CellLabel->
  "Out[577]=",ExpressionUUID->"e2e6f36f-6aaf-401f-83aa-9e4e9f0aae1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pcxs", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Beta]", "/.", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"xk10", "\[Equal]", 
        RowBox[{"0.9", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"\[Beta]", "/.", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"xk10", "\[Equal]", 
        RowBox[{"0.1", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8280276655805855`*^9, 3.8280277172340736`*^9}, {
  3.8280277957782264`*^9, 3.8280278088252*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"eb7bcb16-4976-4152-91f7-994097b973e2"],

Cell[BoxData[
 RowBox[{"{", "72.71805706635729`", "}"}]], "Output",
 CellChangeTimes->{{3.8280276897203655`*^9, 3.8280277175796776`*^9}, {
   3.828027796627387*^9, 3.828027809418482*^9}, 3.8280289297643394`*^9, 
   3.8281012183729053`*^9},
 CellLabel->
  "Out[578]=",ExpressionUUID->"e2dc859f-9702-42d1-b7a4-d158a4e23e5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nxs", "=", 
  RowBox[{
   RowBox[{"Log", "[", "81", "]"}], "/", 
   RowBox[{"Log", "[", "Pcxs", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8280277595043173`*^9, 3.8280278170705357`*^9}},
 CellLabel->
  "In[579]:=",ExpressionUUID->"729410fd-8f71-429c-ad89-4842a2d44018"],

Cell[BoxData[
 RowBox[{"{", "1.0251620588685824`", "}"}]], "Output",
 CellChangeTimes->{3.828027781707681*^9, 3.828027817512398*^9, 
  3.8280289298402977`*^9, 3.828101218487824*^9},
 CellLabel->
  "Out[579]=",ExpressionUUID->"047a27bd-aeae-4103-a8c4-355742c6c87b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["n for x* is 1.02", "Subsubsection",
 CellChangeTimes->{{3.828027835487664*^9, 
  3.828027841124157*^9}},ExpressionUUID->"ea598fb5-b8ec-402e-9d4b-\
f9f159482411"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"yk10", "\[Equal]", 
    RowBox[{"0.9", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828027554008199*^9, 3.82802757998989*^9}, {
  3.828027844533103*^9, 3.828027844712395*^9}},
 CellLabel->
  "In[580]:=",ExpressionUUID->"88cb97e5-7d9c-4061-ba7d-440c8509a70f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Beta]", "\[Rule]", "0.09684658043971121`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8280275803434052`*^9, 3.8280276541490116`*^9, 
  3.828027847127532*^9, 3.8280289300042*^9, 3.8281012187246847`*^9},
 CellLabel->
  "Out[580]=",ExpressionUUID->"036051de-d967-4519-9b27-a19d82e750f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"yk10", "\[Equal]", 
    RowBox[{"0.1", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828027554008199*^9, 3.82802757998989*^9}, {
  3.8280276516767035`*^9, 3.8280276518161407`*^9}, {3.8280278507315264`*^9, 
  3.8280278508185368`*^9}},
 CellLabel->
  "In[581]:=",ExpressionUUID->"36a07327-8cea-46a9-ad9f-a7bad383e234"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Beta]", "\[Rule]", "0.0022127647612193695`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8280275803434052`*^9, 3.828027652181858*^9, 
  3.8280278513875775`*^9, 3.8280289301641088`*^9, 3.82810121899653*^9},
 CellLabel->
  "Out[581]=",ExpressionUUID->"3082621d-6d6d-4645-929d-dcb69c79ab2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pcys", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Beta]", "/.", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"yk10", "\[Equal]", 
        RowBox[{"0.9", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"\[Beta]", "/.", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"yk10", "\[Equal]", 
        RowBox[{"0.1", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8280276655805855`*^9, 3.8280277172340736`*^9}, {
  3.8280277957782264`*^9, 3.8280278088252*^9}, {3.828027854577942*^9, 
  3.828027864391678*^9}},
 CellLabel->
  "In[582]:=",ExpressionUUID->"5fdedaf0-cde4-486b-aefe-27526cf2c75a"],

Cell[BoxData[
 RowBox[{"{", "43.767228282478065`", "}"}]], "Output",
 CellChangeTimes->{{3.8280276897203655`*^9, 3.8280277175796776`*^9}, {
   3.828027796627387*^9, 3.828027809418482*^9}, {3.8280278577867575`*^9, 
   3.8280278649216847`*^9}, 3.8280289304039707`*^9, 3.828101219311347*^9},
 CellLabel->
  "Out[582]=",ExpressionUUID->"5c2b6d05-3c23-4a4f-ad8b-61287e1cb2ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nys", "=", 
  RowBox[{
   RowBox[{"Log", "[", "81", "]"}], "/", 
   RowBox[{"Log", "[", "Pcys", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8280277595043173`*^9, 3.8280278170705357`*^9}, {
  3.8280278679828587`*^9, 3.8280278680760064`*^9}, {3.828027995790587*^9, 
  3.828027995928116*^9}},
 CellLabel->
  "In[583]:=",ExpressionUUID->"a5e2f878-1c2d-45a4-ada7-1769ede0b861"],

Cell[BoxData[
 RowBox[{"{", "1.1628956099995982`", "}"}]], "Output",
 CellChangeTimes->{3.828027781707681*^9, 3.828027817512398*^9, 
  3.82802786846642*^9, 3.8280279962689037`*^9, 3.828028930522904*^9, 
  3.8281012194142933`*^9},
 CellLabel->
  "Out[583]=",ExpressionUUID->"afc17174-c319-44cf-882f-04adc927d059"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["n for y* is 1.2", "Subsubsection",
 CellChangeTimes->{{3.8280278773084536`*^9, 
  3.828027883117584*^9}},ExpressionUUID->"5ab6ca5a-b95c-4bc1-a948-\
dd9862719940"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"\[Theta]Bk10", "\[Equal]", 
    RowBox[{"0.9", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828027554008199*^9, 3.82802757998989*^9}, {
  3.8280278884024553`*^9, 3.828027890562553*^9}},
 CellLabel->
  "In[584]:=",ExpressionUUID->"899db605-101f-4dbd-9481-0248759eb4aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Beta]", "\[Rule]", "3.1317911406075316`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8280275803434052`*^9, 3.8280276541490116`*^9, 
  3.8280278910446587`*^9, 3.828028930596862*^9, 3.8281012195242295`*^9},
 CellLabel->
  "Out[584]=",ExpressionUUID->"fc170580-daca-478a-a63f-0011927e762c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"\[Theta]Bk10", "\[Equal]", 
    RowBox[{"0.1", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828027554008199*^9, 3.82802757998989*^9}, {
  3.8280276516767035`*^9, 3.8280276518161407`*^9}, {3.828027892981042*^9, 
  3.828027894523572*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"6c305a34-7f80-4e6f-bec0-1ae104b801b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Beta]", "\[Rule]", "0.09196455255732142`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8280275803434052`*^9, 3.828027652181858*^9, 
  3.8280278949756184`*^9, 3.8280289306828113`*^9, 3.82810121962317*^9},
 CellLabel->
  "Out[585]=",ExpressionUUID->"cdaf3ade-83d6-4727-9e28-6eb17103106c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pc\[Theta]B", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Beta]", "/.", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"\[Theta]Bk10", "\[Equal]", 
        RowBox[{"0.9", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"\[Beta]", "/.", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"\[Theta]Bk10", "\[Equal]", 
        RowBox[{"0.1", "*", "xmax"}]}], ",", "\[Beta]"}], "]"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8280276655805855`*^9, 3.8280277172340736`*^9}, {
  3.8280277957782264`*^9, 3.8280278088252*^9}, {3.828027901020395*^9, 
  3.8280279100981665`*^9}},
 CellLabel->
  "In[586]:=",ExpressionUUID->"1eb80ca3-7975-4180-9e21-9d5dff39c5d7"],

Cell[BoxData[
 RowBox[{"{", "34.054329124860246`", "}"}]], "Output",
 CellChangeTimes->{{3.8280276897203655`*^9, 3.8280277175796776`*^9}, {
   3.828027796627387*^9, 3.828027809418482*^9}, 3.828027910545843*^9, 
   3.8280289307607656`*^9, 3.828101219721115*^9},
 CellLabel->
  "Out[586]=",ExpressionUUID->"5d556e1a-65e5-48ca-8ca5-2839d4367b3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n\[Theta]B", "=", 
  RowBox[{
   RowBox[{"Log", "[", "81", "]"}], "/", 
   RowBox[{"Log", "[", "Pc\[Theta]B", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8280277595043173`*^9, 3.8280278170705357`*^9}, {
  3.828027913732673*^9, 3.828027919490257*^9}, {3.8280280110686483`*^9, 
  3.8280280163390493`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"3b085dd5-a714-4adf-8e01-ee544a639c55"],

Cell[BoxData[
 RowBox[{"{", "1.245607287578959`", "}"}]], "Output",
 CellChangeTimes->{3.828027781707681*^9, 3.828027817512398*^9, 
  3.8280279198769836`*^9, 3.8280280167689457`*^9, 3.8280289308347235`*^9, 
  3.828101219819058*^9},
 CellLabel->
  "Out[587]=",ExpressionUUID->"cca0848c-6f71-4d47-8f5d-06240f2beb49"]
}, Open  ]]
}, Open  ]],

Cell["n for \[Theta]B=1.2", "Subsubsection",
 CellChangeTimes->{{3.828027925763692*^9, 
  3.8280279335485024`*^9}},ExpressionUUID->"d6950ed0-f2c7-42df-9ade-\
651534ceda70"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Part D)
\[CapitalKappa]=0.1\
\>", "Section",
 CellChangeTimes->{{3.8280091375709176`*^9, 
  3.8280091531285686`*^9}},ExpressionUUID->"06a89204-65ba-4181-a44f-\
6b4d70b6fb3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PercentForm", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xk01", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"xk01", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.15"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"xk01", "/.", 
      RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8280092005076685`*^9, 3.8280093085641165`*^9}},
 CellLabel->
  "In[588]:=",ExpressionUUID->"b6cd0e38-ee77-43c9-8bae-e50b9c4b998e"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"101.8%\"\>",
   1.0182613247132772`,
   AutoDelete->True],
  PercentForm]], "Output",
 CellChangeTimes->{{3.82800920931777*^9, 3.828009236758679*^9}, {
   3.828009267518177*^9, 3.8280093088306513`*^9}, 3.8280226822314425`*^9, 
   3.8280237051838226`*^9, 3.8280237799917865`*^9, 3.828028936167664*^9, 
   3.8281012199829645`*^9},
 CellLabel->
  "Out[588]//PercentForm=",ExpressionUUID->"0bdb60b9-692d-4348-9cb8-\
70cc7c35cf83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PercentForm", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"yk01", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"yk01", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.15"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"yk01", "/.", 
      RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8280092752919083`*^9, 3.82800927768649*^9}, {
  3.828009318561389*^9, 3.8280093283044744`*^9}},
 CellLabel->
  "In[589]:=",ExpressionUUID->"65ba1fdc-08bb-4ed0-ae2b-688b932b467a"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"402.6%\"\>",
   4.025797655299686,
   AutoDelete->True],
  PercentForm]], "Output",
 CellChangeTimes->{3.828009328701761*^9, 3.8280226823567123`*^9, 
  3.8280289362756*^9, 3.8281012200959005`*^9},
 CellLabel->
  "Out[589]//PercentForm=",ExpressionUUID->"0f70253d-e07c-4d80-9ceb-\
5275b10e71cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PercentForm", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Theta]Bk01", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"\[Theta]Bk01", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.15"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Theta]Bk01", "/.", 
      RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828009338923594*^9, 3.828009353078806*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"b38b2c7a-f090-490e-87d9-7725b2fe8e89"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"43.48%\"\>",
   0.4347826086956521,
   AutoDelete->True],
  PercentForm]], "Output",
 CellChangeTimes->{3.8280093535287876`*^9, 3.828022682476647*^9, 
  3.8280289363845387`*^9, 3.82810122019884*^9},
 CellLabel->
  "Out[590]//PercentForm=",ExpressionUUID->"86bea3e3-836b-4549-98fc-\
305aa69e2c38"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalKappa]=10", "Section",
 CellChangeTimes->{{3.8280091375709176`*^9, 3.8280091531285686`*^9}, {
  3.828009366972989*^9, 
  3.8280093715680923`*^9}},ExpressionUUID->"090c4dc9-37ef-45f2-9fdb-\
9d8c7ec4437a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PercentForm", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xk10", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"xk10", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.15"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"xk10", "/.", 
      RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8280092005076685`*^9, 3.8280093085641165`*^9}, {
  3.828009401384972*^9, 3.8280094082268677`*^9}, {3.8280237665576735`*^9, 
  3.8280237730994277`*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"af7d3f2d-9e4c-4a33-8ab7-ad3cecb3efd1"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"27.97%\"\>",
   0.27965911216048045`,
   AutoDelete->True],
  PercentForm]], "Output",
 CellChangeTimes->{{3.82800920931777*^9, 3.828009236758679*^9}, {
   3.828009267518177*^9, 3.8280093088306513`*^9}, 3.8280094090566807`*^9, 
   3.8280226825975747`*^9, 3.828023773676607*^9, 3.828028936485482*^9, 
   3.828101220298782*^9},
 CellLabel->
  "Out[591]//PercentForm=",ExpressionUUID->"23bea7f3-5e18-4875-abb7-\
d5c38403c706"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PercentForm", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"yk10", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"yk10", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.15"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"yk10", "/.", 
      RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8280092752919083`*^9, 3.82800927768649*^9}, {
  3.828009318561389*^9, 3.8280093283044744`*^9}, {3.8280094112889585`*^9, 
  3.828009418319271*^9}, {3.8280094832670507`*^9, 3.828009484155279*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"e5c6221d-148d-4ce3-b3db-10ebf2e8eb2c"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"5.657%\"\>",
   0.05656623005926834,
   AutoDelete->True],
  PercentForm]], "Output",
 CellChangeTimes->{3.828009328701761*^9, 3.8280094849173656`*^9, 
  3.8280226827165084`*^9, 3.828028936581427*^9, 3.8281012204027233`*^9},
 CellLabel->
  "Out[592]//PercentForm=",ExpressionUUID->"05509a4b-2f6a-4706-8827-\
ba477c806fd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PercentForm", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Theta]Bk10", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"\[Theta]Bk10", "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "0.15"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Theta]Bk10", "/.", 
      RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828009338923594*^9, 3.828009353078806*^9}, {
  3.8280094488533926`*^9, 3.828009458498742*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"0a20559e-5d61-4255-ac4c-05f87052f419"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"43.48%\"\>",
   0.4347826086956521,
   AutoDelete->True],
  PercentForm]], "Output",
 CellChangeTimes->{
  3.8280093535287876`*^9, {3.8280094592797422`*^9, 3.828009487271281*^9}, 
   3.8280226828414335`*^9, 3.8280289366923804`*^9, 3.828101220505663*^9},
 CellLabel->
  "Out[593]//PercentForm=",ExpressionUUID->"d82d3993-ad73-444f-a529-\
1e7313b9db35"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part e)", "Section",
 CellChangeTimes->{{3.8280091375709176`*^9, 3.8280091531285686`*^9}, {
  3.828009366972989*^9, 3.8280093715680923`*^9}, {3.828009869798525*^9, 
  3.8280098711024494`*^9}},ExpressionUUID->"4b97ca74-11b0-424c-923a-\
f909f5386f95"],

Cell[TextData[{
 "Compared to hyperbolic/michaelian growth, ultrasensitive/0th-order response \
has sharper response to an input. ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
oJGN7CZa0cDO4fzcnMP56XmnM3KLDuRc2pd5dV+65UCmNSOzNCPDlptpy8ty
5+d58vP8+UfKjhbcOnr05uH8ymNn7h49UXnqzP1jJ+4dO3G34FgwNy8AKQeT
Pyc3kJ17IyvXvmefbece55599p27bbv3wo5j527nrr3w07lzt33HTvuu3bZd
u6y7d1p37nDs32vZvcu6Z3fpTvi5s2TH9mvbtl5IXVe8fkPR+vUX168v3rCh
CH+mFm9YX7Rhw8W0NPjrubVrrmxMK05NvZy24eL6tOJ1Gy6t33RhzfpL6zcX
r9t4ecPmorVwHHY2wV8vrIP7bIR0Ye2G4tTNRambz67bdG7rzpM7dhZkpHs9
XmPQPRZgTisKGWk2hDGODRotpVRRMIcREuDJogXLBF6Ix8PV1ZWzZs0EdJk3
b2Fzc0tHR9cXX4zbuXPnd999N2HChJ3bd6SnZ6Snp+/evfvjjz/es2cPVIAM
lPRdu3aNHz8e/nTw4EHYQj2ZMmXK6tWr4W9wBLZ79+595ZVXVq1aBZfAEThh
7dq148aNy9IFji9dunT27NnGJXAwOTl5/vz5UI/YbTdu3Pgv//IvBw4cYCeA
bN68+Ztvvtm/fz+7LVQ8+LlhwwZ4L3gXuGTfvn2ff/75tm3b4K/snPnz5779
9ltQkQGGMzLgWPqcObMXLFhoPBdk4sSJ8KrsJ5yRlpYG3wvvAzdkpy1cuPD9
999nP9nx8ePHbd68icIOZMIByJAPPvhgx44dDIjgJosWLZo8eTL7Uvgi6IM+
++zzJUuW7Ny5a+rUqRzHPTGYm63INGo9LwoxUM4jkd6ly5fVNjX29fW1Nbek
JE3pC4eXrv7REfDDYPXrCV9tXL/hvffegxdjH7Jp06YD+/d/9tlnW7duxUKl
5Qil/+mnn0Kes7KGN587d+6cOXMydIFzXn/9dbiJcQQuh8rACoXdZN26days
2QmQgVCd4DQjP+Hk3/3ud1u2bGFVCC6cM3dOyrSUzKxMrHH4Lukp06ctXb70
YGbGAZrSszI/nzB+dVrqgezMPXCP3KwVq1e9/cG7B7Iy0nOyMg/lZhzOW7Rq
xXdTk/bmZGxN35uWsWvZ9nX/5eXfpPw4b8aGJZNXz/t26fQvF075X3/3f7+Z
PO7dlK9em/jpqxM/+U+v/+4/vPLffz/u7d9+/sav3vnTr97+07/506/+j5f+
+d+89M//+PJ//cc///P/9cr/++/+9Kt/+4d/+ne//6f/+Of/8qvX/79/euPX
/+nNX//Hv/73X737h//2wUu//uDl//zyb5IXzEiePW3NurVmm9UTt3qzkg8Y
Ultbv3TpSh7bbKyrs23GtCl1tVWQe9evl4Ta2j/69LMdO3Z+9NFHKSkprNSg
+KAcP/zwQ2iGrKAhkyH/obGwygktC47MnTc3KWkyXAFH9h9A+f3v/7B2bSq9
xcH0g/v279g69eOPjqel5cyYteO9j1J//4dF//4/LP7H/zPt//nPe//4u+xX
Xz32/vu5b79zbPy4kz98d2ZK0pkZyYeTvlv9r38sXLqkaO2aorVrL69ff2HV
jxmTp1p37Czdvh3Ttq17J35fsmuHLzPdn53lST/oPLBvx9cTLLt2+jLSXQf2
eQ+ku/bsW/DKX7xZ2d7MLG9W1p2jRw8tWHB+08abBQW38o/cLsi/e7Rgd9Kk
K1u33D5ScO/Eidv5Ry5t3bw3afKtowW34ZyCgttHCwrXrt2ZNOlmwdEbhw/f
OX7sxpEjuyZ+H8zLuVOQf/vIYbiPJyN929ffwDvcKjhys+Dw3ZNH8xfPL1i0
8N7xE3cKjkO6dfLUqq+/2f/jyh1p66dPn070WbwxmANV0VlB5RTVHErFmFOG
B6towke/Bp6exhMSE/hITlbGV+O/uVx81efzXrp0ae/ePStWrACsEwSho6MD
cAa2ZTfLHB57fWMtJbnh7HAERiIKG2RKGLePSJFIn6Yk0sfFYlHqbaqN4+CT
L1y40NLSYraQR2EcZJq546F2CoIZm3gq7By4CYDSqVOnWIfIuDfwCHiQeWI8
Gg2j4VNl7ymzV9WGugTpebW1lVeuXKSzMwIdnkCLiIqiYB65wziFlRGb3IaD
4XCY3Z9GOVLr6uqtVhvR/KbxeDjcxyKSMVuqJAm3b99it6Uoi7bNWDRKuW3a
GNZqtdfU1DU2NcycNQ3Gzk+umRu8LTaUFjlQywUhdvJkwYSvv8w/WnD69Omb
ZTfycnJXrly5dfv2KP26adOm1dXUWiyW6rpaGDcKCqltrI/E4EN7h5g14JDZ
vgHXQv6YFc7Lly83NDQYw3mALyhZwwYCO/B1VVVV7B4K/X44QZREWR/OQ7lD
yUJJwbhCgrxSpBgXjfMxOq+GXBFOEduj3Q3dofrulorW+lsNFd6au5fve0/f
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
EiffFJ3JLdKRLGgDuHqV+etU3VnvkdRgE3CNmNUGig7YNn9KjAIipgkgNmIy
s1BGv9YQ85AWftbV1TGb+diBuaJ3J0RzX0PCJ30N0tHWV3wxcObcnQvnqwoL
fZ5AOa4bZup5mFHd/DlwB4DxpKSk+/fvR2ORtraWBw8q4jEhFhVgG4+L8Tjd
0n3uIYmeJsb0naeaBJp4mtiOAA+KxcQovFIMXkzkOPjJQ6J/whSN8dFYHD4n
GotG45C4SJxnKcoJuAMnRIVoFC6UMEUpJRaTEsepEoWPqYIBVTz+jIeVcKfa
FSLNTVxVTc+9u+1lgSabrSYnO3DyeNmRQ4H9O4Ob1nlWLHHOnlE6dVLJD19b
xn188ZP3j3/03n6LtcXu8k2dMTUWjzxiKRttkDlRNLaHzngsJ27aT95xnvHb
PHduQg/Ci9TnQSSKbtQ3itUYfEE37XA4OrraOzs6uzt6YHvz/u2K5qqG3qba
3vr63sbm3pZQXyum3tbWwSnUGwr1sP1QCE7raWnpacad3uaWnqZQT1NrbxP8
bOxtboi214bbLeXBNTm7vl0x++P5SSszt59zW2411lR1hlp6ukJdHaHujtbu
jvaujs6uzvbOrvaOro6u7vaubth2dXV3dnZ30n3jYLue2rp72np6Wru7aYLr
B0lHF6Suju6u9m68YWdnT5eWtHt2dvXoqYs+nG6NuyBtFI9pv+gFoyd2k872
jo629p6u7pycnLS0NMM88nPG4z+JWmYzyw8//FBfX2/uvs33GQLmTCiYR5Ex
LiCH4HZuxvmUSVzlLUWI0UkeFfUUUH4UXoS+XvesxzEsWiaZFU5WTJQ5c5V7
KGaqA+eP/u1mXB1+n5+8cESIHv2hQ8TIYSY3b95cuHCh0b2OjWZOqFLDgp0K
FMklNit153bN999v/eNL+//3/23LJ59tS9t6KM4UKjabKdPwboNfHq6EOvzJ
J58cOnSosrLy3r3KUkuZ11vjdte53bVuT43HU+N11/rcDR53vcdTN3Jy13o8
Tz+5cVvn9erJQ1/JXevFg/VeT73P1ehx1Lsd9R5nvdtV53LBCfUuV73b3eD2
1Lu9dU5PpcNT5fTUurz1Lm+Dy1tnd1W7fXUuf73TV+8KNDu97S5vn9vL2R3C
9euxSxcjZ073Hj7SuS+9MW1LxdIVN2bOcSZNuf7lhIsffnLmnfePvfn2kTfe
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
vi+hcCIx6hpzTMQBt77qrtjV1TFhwgSbzUHBnPt5YK4ZzD0eyYuEcGYVQUh3
uaTczI5vxpW88qeCaVOdR/I7rG7FXUZcOIlJPHBaQKFqPOf3xdD/1EuCLjXg
IdTHkyGnorHf/VT598seVOA1MPcykA8oDM//dmBObebDwZy1a2Z/A4U8MzNz
ypQpT9FmLlJqO4C0QONL0sKVMZCajC5FPM8iVcvffffN2bOFcJaApDf03Lk1
KpjjpKdixUSspZI9s+roH1a9day9yKZ4qB8oMtKtKiaHYnMqthcTzI0oW9BN
b968ed26dU9gZkE7C1FqfYGjs+cXv/ZBwa//eChpojMnT45zaBSReRrBUGbG
eUHg2Iwrs9q1tXV89NHH165da21tZVEFQJpN0tjQcMvpume5XmW1NF6ztV6z
9F65dHrSlPLsgs7qutaGxtam5tbmllAjnNrUTC9uaml+kaXJJOxnVlbWtGnT
UP3luGdCTUQwz2367R8uN4W0iPQioQtUg3JO44hKIoa2xgl0LTooVIzQ1KlD
zSwjgrnBTjFBt6pR/ijrjxGw/X7qjOlTPG7kCnpcyoF9TR+8W/jW66fWr665
do1DXR2UZ0RCharxotcn+kH99sp+xH9i0Lx9zNVI8yeik6qUB069kAjzRQr4
1IDP/DIaf8bv63+GYM6EGd9+JjWRxfwVBqiJGDaaquTIPdbteYS2dIB2nrkn
StRhKTl5cnV1FZ6FQQXQa+h2vWFmKdEmQNFszmwsdkosRzOLVSq9FL3+l01f
rHPttYlup2h3SBa7iqYVOK1UddkAxnXNHPnqyosC5gbdlMnly5fNbJbHsJmr
1D0qzkmN1T3L19748DNy10+6e0gMNXGBiADmgigxMKcxoTmdVS61tIRSUqaD
Tm5wLcyOMwouRCU+8HuanCURm4UvcQlXS4STx0+OHxe+dV/heBZGgb2uYixJ
oujOnz9jcZlfjEAmNDY2zp8/32AqjgWYq/raHcZDjR1aOBqbpdEE5mgyVZgy
gasO0fCy1J+ahoTu6Gijy8Z1jqKZ+zVoRZWYIipjG7LJTZn6byK6+tBBktJX
vAjIXo+cmV79yYcF771duHtXbalNCN5Q/EE8B/C5zI9gCNsypnj70Gzi8Soe
vwrJGwRdXdQdRVmSmX8oEtS9agCSjybc78eDARpzgKanZSR/NDOLNOIEaL8e
1BROYGA+ipnFXIisTPUdzZFRUAgF8wVhIkiUpsS8KCUMQCsLMPaikWjZahps
AXV4dErKtMrKShodGcksAOY3am+ZwdxOnYYcOB8K+rbNptjgoE22WmX74sur
P0lPuiZ5HZLLI9kdpBT0djY9alXR2EL3KZijlv4CgbnhFQhZfeXKlSekJuJK
hApoVwrX3Zm6wT/uC6WpXBU4BduqwqKhGlNyNMA+DcODwXgk6s6f0tnZOQTM
jTeEIVul29lpvyaUXCdQziUlfbu2Xh0/TmntJIIWrRp9xjHCFi4gJFHPXBof
R2VB215AUQZLfX394sWLzVPMY/FE1lp153HZKFDqSaJQML/UGGLrqbHFr1gk
DFzXjEYp1zCChv0Xurrav/ji8+LiSw8Dc7+hHvvkQEAARVozXOOEpki92lVA
tqCPTnQGZA/F81Onuj//4vQbrx/dvqPc45aDQYWZXKj2TvVnGv6FJt0Bc4CU
rupquWKQJJm3jk8fC/hYChhJNSf/Y7DixwrMVZ2QDAr5+vXrk5KSYFT+0GJV
2QICA/H5aaHSYN7Y5rBhF7pLk9bMDxPq6EG0BQKVgUX9tESI7i8vy19/9d2R
I/m46o/Es3gDtwYmQEsBgW2Kw6rYXDLieSkaWNBFyCk7TrYV/+ua9wqaT1sl
m1W22tHJyGbXqS+I5Dj7aXsxwdzQ1qBAly1bZjazPBaYa8oYz7WmbfZ88YXS
WIPr+9ClEBVtNTGiu/aLGh8ca5TQ3t727rvvl5aWEj0M1KAJUDhNEOtdnoil
RC4plUuscmlJ/dKFweSpajjKAu4N8uU0OWyNsrbXL1sGq8QoBw4cmDZtGkPX
MYua2G8E9aHKmMQCmzMwIbJ6KK/xN3+81NxKB080Mg5bnVmLf4FLhWpVDgfm
EtfREfrhhx8qK6vhnUcBc/ReRwcfNIngtCbidhyPeJHUTSco4aAAirfdyS+Y
F3jpDwWrV920OQWcl8SZUM1+bjbUPAQwB9JYAPIYgPlDnYaMtub1elNSUkAz
f1ixKmx1DYzzIrM1kGW6vo7MjGIyQvZZt0UDc5Uwj37qeC3RNUSM1UD6Db0R
auCkHyZ7vT7oCnDgTlUxyjP3UJu51aXghKaV2OxoDEcV3UpJLE7imXR41vRT
y0plF8ZvUZDiYkP6ionEqNqcLySY9w9258/Pz9+4caNBeNDQ8ZEFz+aFto2b
3eM/V5pqQU1mQbHYAltIGdRWaWDNnIUPE0Az//bbiTU1teYVSQbuqYG5O1Ji
EQHMr1vI1avBb75uWr9WiUQomL+giD26mIfGkJ+BQMBYaWiM2Cw05MfAUnfY
4mU9/CZdQhjB/A9mMFcYmFNFHdd9Njyn6ZRZvL2jJWVaSltb++iaecAv+hlR
EMnest8rBn0ihp/FfcRqpAX6pBPHu995vfCrccVFRX2UT65QO4wSCCgeD+64
3fJziNJPDuajeoAaNvPGxsbRbeYqC1Wq4FK7MlsXemAtS1TKoJEXmsBc1iIJ
KnStHmM1KLXfFD4XOuvk5BSkJuLQTGTLEw8Fc+IAMC9FMwsN0gL7ou1w3YlX
135Q2HXVSuCgzYJ4bh0K5v02g80CYO5QHC8ONZGY1iYzm1meoMljfRgO5qoG
5v2Ql1r/wCLpqfRBYmtrKDl5Wnt7h0GKHvRc0PdEqdblDlsomF8rEU8WWj78
sDcvQ+7rY2u/JsB8uOioqFHNGxoa5s+fL5sWYH3qTzRGAbpqIBl9h4BR+nQw
D7GV6+n8hkrjhhI6EuxnPT2CPF5L+La20JQpU6CvN4M5s4SYwVzDcD+hcbHU
gEcBGA/6uWAg5vMJHr/s9sipq+/++bf5WzdX+LzEX8Z7fBF0+dTtKpTWQp6W
M+bzAeZCwD+a0xAzuDEHhNHd+VV9/UeMZUmphliBWKRDLDpsrmfcJUmr5zEz
C3XXoyY0JAbLAxE0TM7mLNBWVVUVLoCJrg9wnXKrTgNzGwVzF2jmANd0WhNN
6LLdIjom5ExZdnW9XfZaJCtAPZrTCVJcmEsR471QzVwDcwfGZnmBeOaK7gsG
Y66ioqINGzaYTG1DzCyq3s+OLKOAuW74MMCcrX4IoyuxJQRtdhooYIZFlwwO
gQt1rtrlDJeU8Jbr8rWr0YM5V95/P1JUKIX7iJwA85HFrJbDFtos45kzv6Gx
s5k3NTXdv38fyvHWrVvQWjUtnS67modgfrmphS2LiSGKcfaMxkRjMUhNyIOL
EHV1dX388ceFhYXDwdyM57ofJVrOg2414Fb9Xj4YBCSPBfy8zRGf+F3RB2+d
LjwdDgSJLyj5kRwoB2ggdJ+v3/BCeioxUp4XMNcCbT0UzFmfGw6HlyxZMro7
vwHCPd2dAb8b7ldeXnXr9j2MqidiUepgviBMRJFNh7CFl01reBlV0cDzr776
Kj09XUBuKseq5RAwdxOXVbZaUPGm1nLiPt564c/r3j3dddkpu23EbjX4LYPA
HPHcNcAzf+HAnGUvz/MwEjc8QI1SMM5UWSRTRfMYNc5RtaiauGuAudpYixwW
Gpt68DkKjZrJgnNC0Qpt7e1/feOdK1euavrcYBY0A/Mqt7OvpAQnQK9e6Vmb
5v76m87rV/i+XqLZzBNgPlSMNsha0NatW0HL1S3YTz/HaPmSaCQ8Z9asTz/5
ZNWqVTNnzbxz7y5duFlG9y1JGYjNQmdHJVnk+eilKxe379h2/0F5jBOg7Bvr
aw/u33fhwnlBFNo6OpOmTAmFBjTzYDDu19XpQAAtJFQtV3x+JBAi8dtDMAqK
DzBf8Lqlqxcj77+bnzT5qt0R8weRl+hni0p4Ke1kIGihOkYkk2epmdMJUL0V
j+zOD/KT7vysIkWj4bQNa/76+svr1q0F1cvh9Iq4IjrSVaAxF3oskxk1EY8J
dMlpwWqz7di1ywejJloPOzs7c3JyTp48GY1GZX1BZ1ESODHOKqlhZtE0c+JE
MCcWG7HaJTjim3ZqydQzi62K1yGxUFp2Nu9pIPlIYG590cDcsKMWFxcPZ7OY
lWQ6xkLGUSQSZnpXX1+4vr7BsLIPaOYA5gIvSug7AP3++fMXdu7cVVvXQFU1
oa+n63DekUN5eZFID2jmk6dMa29vJ6aVzozXY2Be4Xb2lF6XLSXKlcuhmXPv
z5nXZrPFw72a52cCzAeLeV6b6cagmS9YsMCA96eumVMNDIBbqCp/UFpicTqd
zaEWThRx1RW6zA1lszT9GmOzKFSBwDXHbt4KLlw832YrnTF7bk8kGolE1q/9
0W23trQ08aLQCmCenNLe1jEA5oMCbSm6kz7o2xjeMIiWEz7gj+OqY16p6Fzf
q/9asHCe3+6SPD7ZH5SYCz/z9PFrscSfPQ6PIZjLD/UANfTkxsbGnzSzUP6J
2FBfZS294nI562obeRFBHIGCCIIKYF46Ze3SCOWqgFYoSVxtTfXCxYvdHpxd
Bf0fzty2bdvVq1dbWlri8bggCADmlZWVcBtJoXY/dOcfBOZ24rQTm022eBSr
kzjO91x7JfXj/NaLFskF2G43RW4ZHINrCJi/WE5Dxkic6CFwzTxz85l0dCZR
PBfy84989tlnMFBauza1oOAYW3dJVQaZWXBVKjrTabfbfvxx9dVr1xcvWcFx
vCBEczLTTx0/1dLUFIuHQ62tAOYdHZ2GI6pZdWTchkqvu6v0Grl2Xb1YfGP8
+NYt2+pK7fFoGCdAx2yh0r9rMU1EanRixjMnQ4IMPz1BfBa4pob6RQsWrlmz
ZuHiRbUNDRIMxikbjYH5bwbAHNekOX6iYO++XW1toeTpM1vaO9raWr/49MMt
G1MPHNzbF4uHOru//SHp8qUrADU6mMfMhEBmM/cGRC/TzANcIBD1+njQvc8V
dr/0r1lr1tzyUbKK2yOh+w9dpocGTpFosBRQ6an/zt8/pD+W05Cqe4BCrTh1
6tToi1NQMCeiyPd0t61csWj16h8XzF9aXlmLQZhQOEGVAcwnrwEwpwuvEQEO
etzOdanroa3PmDG9rq62t7d3/PjxO3bsgBFiT08PPHry5MmgpXd2dYgY0kHE
ELhITfQY1EQAc5ts9cilDvFqqWxf49jxRUZKiRS0yR6raLFTYvmIARUH28xf
IDBnYyhmMw+FQtu3b9+wYcPDnIaY7gVIDikQ8AOSl5aWBgJlkUiULVCFsGoC
c5nn6NpRJCMjPT+/oLW1bdr0OZ2dXdA0kydPSl2TujEtrb2jpSXUOmHCdyUl
JVCjWB0zow3S10QE8w4A88tXlXNnSt9/I5ZzqLrEycUiAAkJMB9R2FQyy0xo
PtBw5s6da0RUGAubOc5b8rHS61cL8o+EI5HD+UevXLsuUc0c7eM4AQpgfsXQ
zAH7z50/vWnzhobG+mlz5jV3dDY3N82cmlRfXZEyLbmqoaG1s/vjL77csX1n
Z0d7WDOzDAJzajOnZBUaAgvAHNHeK1+6EH7tL4fXpN5xBQSPX/D4ANmQ5cKc
gGiwFFygjUbH+mWCuV8zs4wWaIvxEletWgW4OorNnEVDhcK6czuwbev6aCR8
/PiZI0fPgBrFi7wkA5iLhR5L0upluNIMmlWh1XN+H9x5dW+4b9bs6Y2N9d3d
XaCKA8IsXrzYbrdDDfzh+8krVqxsDjULEqfQ0C2Dwdxlke12YvXJJU7hqkV0
vLlt/NZbh0tJWamIxwGxR46OOwKb5QUCc4N+cOvWLeijWaAtw6o2BMxlDHGG
mjnPc5mZmfPmzYMSqaqqocFzZAPMPePQzKIIAg1cLeXl5R08mNHU1Dxv3uLO
zu6+3s45M1Nult2AZxUXn29t7/jw48/27NnT3d1tmAUGHgp1SRAq3K5um0W5
dCVSkHfxg7+IJ081WHx8PEpD+yTAfAQxJiCYWr5ixYpZs2Yxw8tY8cwV0ML5
ro621HVr58ydt2zFqsbmFgFjXBKKBmpeTsNvfn+pRQu0Bd220NLSvHjp/HWp
6/KPn3D5A5evXN65dcum9es2b9rYG4mE2tqTpqa0tbdB/xM2Fqeg85X6wkCM
yqL4PWoZssoFf0C4XhJ5/bX8VavuA8gHynifX0CSueZbhK73FMxVCubklw7m
D3UaMuyZP+nOT/U9dO6JRrt37tw8e9ashQuXV9c1ixJdh1kROUU+4y5NWr2U
qlZElDlCxM72jpUrVqWuX5+VlXH2XOHNmzcBLtLS0lauXNnW1kY9QGfU1NQy
aiLVHlXTBGgpjX9odxDQzG0O2Z5Re/SVjZ8UxR0O2eckTspjeVQwf3F45qoe
DNMwswyJmjgYzFXmBwap/MH91LXrAH7dbm96RjbzwiYDYP6F0lCnitQrW5Zq
a2sXLVqSmrr+3Plih8NhsVw9c/rEmtVrli9f1tzcEAq1TZ06raOjw5jsHjQB
SsG82u0JW23K5UutO7dfm/ChdOlSfYmHi7A4bQk2y1AxJq8Nlikzsyh0YfQh
TP6n9lCc1hQ621urqyoflFfce1DR3BKC4ZpI51NkkQCY//YPF+kEqEpDJqJa
0N4Zqq6q4jixr68PqlMkEq6pqY5Go/CqMJSbOjW5HcBckcJ9nMMBYM57vYxM
qNERfXRV5YBHDbhJ0C85Xdyn40+kzLLj4sheucwjsjWXMersoJgtmjun/xcK
5gGv4B+VzWKwRh/BZo7BimUxHgl3371zs6Ki8s69israBtDMMZIWAcWaIJj/
uDhCQEuQeUlAPV4QoTSrqqt4noemHQ7DWC1SVVUFB9nYEEq2rq6OsVnYq9w0
aeYUh602yQJQXCp7kk4umHFuuU32umWnnZISH7aiHANz14sK5sakGChso4TA
NXR1QYDSEyM9XZvT0rZs3rJo8fLrpXZosDyzdWtgPk6pb0D3fpGp/VIo1FpT
UwOF2NvbC6N+GOJVV9fQeCzozj9lylQWAncElxaMzcLXurzh61blWnHN/IW+
6UmC5XrddbcQibHlv59Bxj33Yp6/VnSeudmn4Kk/EcA8Fu1bsnjB119P2LR5
6/QZs3z+AF2tnS4+IKm5FMxxcQpGi5IV6jwm0OBLhBmF2FCC1TRo+J9++umV
K5fh4j4E89qygIAEQtTM0e6NC0zgmj4Yh9DrkX1uef4c12dfnLS5BbcXtFMp
SKPdogf93z9cPymYqw+jJkI+Q6e5devWH374YVQzC47HuVh4944tH3343vYd
O5JnzL5SYkXrGfUH5VSl0G2dvJqCuQLFSf0LxIFyZLZTg2jBfn777bf5+fkc
H8PFKaingQHmuDwQwWBZNrnUKjkuhUtfWv9hduMpG3F7AJ8fAcxfWM3cAHMA
WBiMr1u3zmCvDZmI1IsG12kO93R6HPbiootXr5cGb90R0FKGrHIdzMerAOZY
oKiuYSAdSn00mOSyae3m9vb2Dz74wGazGQ4Fg2zmyGTla52e7usWUnK5YtLk
2lXLRGtpncXFh2Mv7MJwPymswbIShB0Y5E6bNs0ws4yNzZz09Xa7XfaLxUWg
mVdV1/b2hukaYgoNjarkDQZzjKWHi29rkW9Z3WCrILGXhP594sSJVVWVcKCv
j7c76sowqDiGTKFxtEQG5n4foLrgC4j7D9T/8XeHr16LezBUC/G6AdBkbcXn
Fw7MBzxAH6aZw3HAcLvdPn369FHc+dlMWTzSeyvogwF1RWVleVVta2ePINJY
h6CZMzBfo4E5XWwI27wxKjQ8u82mv0mTJvl86M7PqInwgmbNHMAcyYeKzU7c
6RX5b20fd5G3WYnTLdtdlGH+UDAfPAFKoya+KB6gDKINCD169CibADUML0PM
LKw0iMRn7Nv99uuvrV2zdsGipWfPF/MCjMSkIWAucRyLpkVLlhhFaXbbB2lr
a/vuu+/QHUwnRTN+7MBDBbHG5ekotUhXL9/+6NOOHVt5i6Wu1MlH4uhrkgDz
YWK4fxpg7vF4mDs/dKljQU2kD1WCAd+6tase3L9ntdoXLlpSWVlNKwBNAjGD
OfPypJo5W79Am6s1QkkAqkMvT0PgtkMpa2Ae5BnJXNfM0YU/6Jc8vviVa/yf
/nw0PaOFuoLKQQ9AvUgd9slTWZftOU/DnYb8o9rMDYyFIdtPmlmILFY8uLtq
+ZLbt2/AaGv+4mWBm3eQzYJ4LprAHJ8n0sCJ1PdfNtjsLEa9MSqkZpapMFSn
YzK60oEsD9jMVWpmYaCteFOOL5hf/KOFeEtlh10sdcg2BuaPTE18gcDcyGGZ
hsAdlc3CwFyEMdetgPfqxeI7d+7evHWvs6sXF+hEk/kgMJcRN7ToeTRi/aCu
2dinZpYpLGricEokPpQXqtzuLodVKrpw6633Y5lZnLW0utQaj8XGwv/lFyDG
DJdhLjPc+VkDHyMwl0Te6Sj985/+9Mknn1VX17KluQkaV3Gd7yFgjnwWGpzH
KHdZd/5lLwkwnpSUBNUDqhCuNOSoC2JMFZWFVfF4BbqmjxykbMMJ31ycNsvl
CSCS3/SQMpeMQVcwjiJ5tEVC/77TE4A5qwyAqDBkGx3MEZ7F+N1bZa+++vKb
b7514/bdOMagV9CgMkgzByVMwb7ZiEqtN2diWsGQNXx4aHl5uQHmyiAP0FJc
vhMD3jovxUpfS/3wSGOhVfFYiR2phri12x5KTXyhwdw8GzKi05D5ZHqaFGpq
WL18yZVLxW63Z978xXaHR2axw4eaWUSm4NOrtLsZCrlRvtBak5OTqQKmDA/Q
yjTzSrery3ldOH7C/9rbcsFJzmapKr0ej0bJ33ih+b8fUXVhrQna7KJFi1jr
Hit3fiL7/Z5FC+deu3b11Kkzy5evbG5u0SLiYrBbJTe73gDzfhpCk7omUD6S
MmSeHfVG5s5/5swZ+Imaub02GIxTTVvxeqVAkNCVg0jAp2QcaHnt1cOXLJyn
TPb7yA0Acy9OjHpxlU/lRQRz9HUdzQOUIXk4HIZa8f3334/qzo8285rK+8sW
zS8uOnfu/IU5CxY/qKxF32vsjoeCucS8+AdbaI2hojE2nzBhQkZmJnoBU3d+
eTCYuxQntbR4MioK3tr0+XXBZcM4ijb4k51YnYo9oZkPFwPJDXf+ISsNDcVV
fQL0/t2bn37y0Wuv/fXK9RIR/bhwyGWAuZuCuaoHbTNKs38YyMANAcbfeOMN
GBQYI7IhDyW8WO3x9DiuRjIz3G9/QAovRq0lNdYSGCCgDp8A85HEnMkgW7Zs
gYGtMdQdCzCPRsKp61ZnZuyrr6+LxeK1tXXd3T1szUfEc0pNHABzDK1Kg2qN
BObsPTs6OkAzD4VCFMw5u70GwZyuNIHunwHi9coA5lYL/9Zrx/fta/Df5r0B
SkH0ssi3hC4h8ctx83wsMP9JD1A2QK6qqpo5c+aoTkMI5rt3bN23a3tNdUUk
Gm0MtTa3tiM1EW3m+gTomiXoAQon9/ez6MbDb2hYXVigLYzhQ0PgUvVOGeTO
TwCKnaWye3bRyhlnl9tknwOx3WZVMeCtkzwWmL9YE6CGmeXChQubNm16WAhc
3SYjtjTXL1+84ML5sy6Xe9HS5S5fABcQwtA6JjBvADAnilGugwvWYM0xzZyN
ps1zo4Ns5rxU6/H0lVyqT13n/+p7UnwlbL1ebbvOxXoRlBJYPkwMaqIh0GYX
Llxo9rF96g+FIv3/2XvPrziSLG/4f9gv75c9e877ac959zzn7LNjntmZ2d1n
zM5M9/RM77RVW3W3HAIknPAgA0hCyCGBBAKEhLwHCRmEhKvCFU6A8N5DFbZc
+kzeeyMqg8QKUKu7p6UgTpGVlRkZGTfiFzduXDM9NZH3CLpQwqFDh3NzHwwN
jaC/RJn6Sl0M5nQttzSYA/MGYO7l5TU2NurRMy8leubVCnFaK1XTYG1Vyp7d
tZ9+cr8KI3tylmqBmnZaqqni4rxwcj/ivFYLUKbXtAoXuCgzd8xMFhfkHz2S
cODAwRu3c7p6+zjREymMI2HjiDYLCei8IpgzJQdfX4w0JBExC9WNpub8ZTqY
lykVxULl28c+TW65WKJUUdWUYq0IdV1W4swXb4C+RmDO1IeonrnRBe5imTmu
f3nuUW4O5MkJG4zT6Rm7bWKSLp2QfjqYq/19GoIGpetCyTaTt1AwJ9HBbEZ5
6dyVKgHz8grnk0f1/n4tuyKVp0+d5qKukqeca1J945hlqcTAnEF3f39/UFAQ
HUevSMyCmikS73bZp6ene3v77mTfPXDw0PDIGDUNlgU16xyA+cPhEZmuufXw
YxIJ8MdWbBqTtkGX2LRpU2trMwFzt9ncWVvjJDHaWEQJueCp+9e/vnDtxmRN
tVJXqdah93K5okYtx9A/xNV59esoZqn2qCau5GiLOkotKiqiwSmWB3NFpd5v
OdfMzFRfX//9B49jDiZ0dvVQiOA0hYI5iQGqygYxy4LEeAm0AN28ubKykiza
yAaoqjT0PK8YrwBe2qSgb5Yy2XJjOPe3B/9211FcIlUir07AnAhhzKXLgflr
rJo4a1jVchyXlZVFXeAyS6IFYI74IArDA33Xr1zavTv61OmUqpraickpKgif
B+Z9/ZpIvS/SoFFzkpbZ+Q5hAMw3btxItVnYJukcZw44IErdZRXcw4flX3w2
fPSkUljgMBd2Apg7JlR5HlP3JtG0mDMvKysDMFf04F+vYgZUNWV0eHB3dASk
7p5eNCqRZJ5w5qjTgtosAz//5QPgzMk2CiqtAkbwotvpcKKaIonRLhHXbDC8
BVkam7B9vOHjp0+fqMRoyGwaqEIVRDe6PaxG14gAXCFBlds256GOogXl5FUV
wJMrlcC616jVLM7y6wfmNS+yAKUD3Ol0JiUlbdmyZWWZOYA5rLniD+4PCw9r
am4BVoAjcXxpIbymYNi4mLAZjAFKnDcQHy3QzYDhZ5whnaOpMhX89M0331y/
fp0XgcHnCdagoy0A81IMSFFiUkrLtJrYkuNfnvM2KZYSmYSo0DAeKMHn5Tnz
19hoaNaw9oEWjo2NNTraWhLMSXRHQRa5mZnp8vLKU2fSd++Na3ze5LneA+af
AGcuU8JJvKICEQUn2a9kJTPKjo2Nvfvuu+Xl5Uzao87fPZEEsdNcIeTcr3j3
bUfmObmocMZU0lFSxDumiaOtN2C+RDIuuOD4woUL3t7ebEy9Cs4cesftG9du
XLtSXl5xPusCMFswmXO8SLXHFUnB4BS/RDEL6XBQN8HhmDl1KikqMuL+gwec
hIyiyAsJB+Ov37rpkIXhceu27duhewBg2GcEs2kI1VdqnDXAlleINXVK/hP3
r39xIzt7sqZGxiCeVTRrP+T4bt8VmIurMRqirh6oauLyZFVkiasoN2VkpFfX
1Bw9kSRIxPM0boCqOPOqcnZl0Za4UDv6vIYJXFRk0e2CkZoRFR117do1WQ+J
kpqampycTLslLMbR7SqwhgTMYXX2vK8RwNyslZZoCObFSs0XZ70PlZ0oV9Hj
FsB4seYRidP8xgJ0cTKKr6lqIoPcxWIWXJ0J6IT4QW72kSMJ3d09blGamJy2
Oxx08T4H5gO9GGgKF8zi5KT16NGjkVG7i0vM6FUNJexydvbd2Nj9HMcDZw4L
PSpmUQ36aeyhJDiFxX3tdtVbv+evX5ELC+wlJe0mE+9yvLZRPldO+u6GzHY8
+/r6QkNDmSrRK+HMVSU3547P9m3BwSEffbQh7sCh3v5BYlpCtlwl5RKCucc3
CypCyGJJSVFc7L621hbfHTtsxNC7tMS0w9vnZHKSWxL7x0a8vL2gYwBnaJ9x
m81dVTUS2gphICF0tLJ3T+0Xnz+qtEgWCw0Ap/29Bwz6FsG85kVgTtPg4KC/
v/+LVBOF6qryb775OmhX8N8+/Gj3ntj2jm7oSjy6oJeNYC7CBK6gM/PnjfXR
uyMHBgcAtEdGRqADtLa2BgQEwKqNziO+vr5dXV0oM8db8K+xp8FiqyiDLqAW
m5Ty3Bnz7w98cHvsoQk9bmEwUBNBchPGHlpaL/GNmEXRLTHhc4EL3AX8m6cP
yEpbS9PuyLCCgoKEw0ddgoB2fB4xiw7mn3rAnOx+yfdys0+ePNHc3BoYFGy3
O+Bcd3dvWFhEEPk6PDwMFKd65mwD1PhQWDQMlFsmMy9WvvOWdPcOgrmpqN1U
8gbMV0iMrIrutjooKIideSWcuaqM28aGBvqGhoasVltLW4dtfEKiJsM4SasU
zEc8jrawXjdvXk8+lWQdG9uxc+eIdWxyYjJ+/4H8x49PJJ10cu7R8fGPP9lw
8GD82OiY3e4yl7WipSdugCpVFrHcLP/uv85fumK1oOsttaJCoYL012G7c1Vg
vqIFqEIsvktLS2GKX9lrIjEf4CYnbH29vSOjoyNj1qbmtpFRq4TxnYmDHQ+Y
hxALUOK/QRLKy0v3H4hzc25g+4EDdzgchw8fBsSIjo6mPfCrr74KDw/v6esV
cQMUy3neU2+xAhnNwJmXypWZPdlvHf30sdtcgmGGSGRnAuYlWjHkZcF8cdg4
9TUKTkFFWJBqa2s3bdpk9M2ymDMn+2dStaViyzcbk5JOfvjRhmMnkhqbWpig
WwfzDQDmEs8RR1tienrq5cuXx6xW3507x8cneJ5PSkp+/Dg/PDxienoa1tF/
/etfqaPjJVzgEs58pLRiLOnUsw0fqQ/uK4WFdlNxR4mZR3dMb8B86aQSI0q6
lO7t7Q0ODga+iK52X5U5v6Y01NdFR0U8evTo0qUrYeGRff39bE5RSQzQn/37
I91rIiq4AGceFR3ZUF8fEhrSPzjYUN+wPzYuJDjksy8+t05OjNqsMORLik1u
pxs3QMtaiGqiTHytqCePd33wlzx0flilVlYqBhnLG86cGQ2tFDYOegKw5Q8f
PnyRP3ME7N7e7qioqJy7d2/fyd61K6S1tV2nLAXzYiOYQ9mNDc+CQ4I6uzqA
7Qcwb29vB2DZt2/fW2+9Rb0mbt26NTc31+FyciJHRT7Pe+sttrJyxWxSTeVK
ddjTQ1vvRBYolSWKqUxGOXkpEbOUzBZDXh7MX+uwcYx5s1qtKSkpwJkzMYu8
0AUu0WOUZKd9uqGuura2pu5ZfXVdfe/AEHOoognC2GEC5v2EMyd7X7du30hI
OFz37FnU7mhgEWHJn5CQEBsb+9vf/ralpWV0dBTGrNlsptslC2XmqAghjpdV
9MbENm3bpj16pBYBmBd1lZgEh+sVYNKPJKm6Gj8kmDHv3r3LOHPpVQV0VgTe
/fRp/m9+85uPP/6kta2dPsizn45g3v/zf2cucBEinM6Z5OSk/ftiLJWV9fX1
sDAEVqG5ufnhgwcw64zZrF7bvaxjVlgMApiXlrXV1qI2i4Womn/0t5wTxzor
LR5lcgbjr5WofFkwX50LXLiAqiaurGcOSCAIHIz3P7311l/+8tfaumfU/QJh
73nBAOZE91xQFdntcpzNTN8Xs89kMt2/f7+xsRGe1dPTc+nSJdonfXx84Kus
AvSjF1YoCjnz8fJyFLOYy5XaD1K3HqpJL1IqTQpy5hTMTZQzRzBfxgXuGzDX
2SfqAte4TbkYzGFkDQ/274/dU11laWlti9l/sAgl4R5BtwfMP0HOXCVxLIAz
n5qaSEw8sf/A/obnjeUV5dSnFmB4ZmYmADgTs7CaLAZze1l5Q0BAa0i49ugx
grm5sKukRLA7lTfm/Msko76QQjyd0rBxbEv0W38iEKKysiIqKgImaFi/AyPX
1dWlC+3R1xZw5v/nl49HdJm5gnsqbnRrzvFMzYaJ2lRizg9DnmyAIphXlHXV
1zirq5TKaulutvN3/5lVUOC2EIZcB7TXFMmXBfPljYaYzBw4K2CeV3S0pVHb
orCwsLq6OphzIyMjAZypfR+qN2oKgPlWypnjBigGrwHa8oKb4zHRFSJ1z8JI
7O3tDd2Dh8vQBa6oyFJjb32FrRxthbTSPHvJH+I/ump7SEJUlJbKJWjFD2y5
YirRSkpQZr5KMH+NjIZmCZhT3IZ2pub8K4A5FbPA0qqnu/3999/7z//6TZG5
jBdERQ9GRsG8kmyAqkBovBqjgAJNOY6j1GQEpZquIyMj1J+ScVoxilkUXnAW
F5d/s7Hn4FE1/4laUABg3l1SItpd1If699RyP9zEVBOZfm9vby8D8wW7Et9W
gsc5HHaXy0HnC1gOOJ1O3bEtjTQ0B+YqAXNFRdNhlcajIont20KamJh47733
cnJy4HIA88rS7vpqoapStdTKwSF1vt4VNc/kygqpuup1FJKvDOa1VGa+PJjT
Frbb7YDM33zzDQzP5Tlz7D8weIGajLLAgzExyzwwV0koEgRzXgRWzqNU7pGd
sqUifP3ss8/S0tJcbpeHM0dHW/XltnKTUlagmM4133j3yOcFUpkJ48eZSpQi
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
5RJTA6PCK2DOX7UL3BU6h4Zgrl7MGvS4wIURjMyD8OB+zomTx4eGBrx3+o2M
Twho+e1ubqgPDwtxuN1DVpuXz47RkRHoCVMzkql0PHCXyd+/tKZarrZwtVUS
hhyq1t6A+RyYk5ActVVyrUWoqQYwXymgM9sAhWH4EjJzjYhZzFtjou2opCxK
sluU3LU11QDmM06Xj68vrLipOf/o6OjOnTth4oBjas4vE7Vm1FNWhJr+56aZ
51+f3xVfkYR7l1rpusDcbARzJjNvo2BOxHjfWr/+4SWjZdajR49WMBpaIZEN
UE1xAw+Ouue4o0H1DkU3jNnzV65nnL86PDK8098PGEVqNATo7e/vPzY2Rs35
KZgTGwM0BfSoqUBhojR2+dKTwGBtWoB5Hzh7h6pxitrS3m53uhR9p/RNWpAU
PfoAhfTe3l5qNPTqfLOs1D0ImKOY5RePMQYojeyuSLduXjtx8pjVOurjFzBk
Gwd+wjkzmXQsoby8lJPl0cnpd9//0N8vYKB/YGqKLym1v/XOlXOZo1U1cm2l
8KwSdz8tNW/AfA7MMVerAOY1Fr6muluSMaTUYjCfJeJrGIa5ubkbNmzYvHkz
jMf1URYGH48xQE1bYqIdCOYw9F2y5K6sKDtw8LCbE2CMAyNBRTqpqalPnz6l
DMYXX3zx5edftHe0i7IgSzwgRe1Qc8FU/X/v/+T6wF2TWLJcYLgXa7NoAOBm
0zxtljIG5tqPF8zZqIfmLSwsfOedd/bv368sY86/Yjmz6D1JRF/16I9FUlVe
VTCIFAxK/nT62XOXr48BegcGACtOmfNr165dv34dDgDP3377bYAaq9VKwccj
50HNRbQJbow/UBMTqznR6ltUMTAJXNDeimAOE/68+JFvEkmMfLQlm5ubP/vs
M2CKqAUufL4yMMdZneSF9VGQM+/7xS9yMQaohDqJUJH6ZzWBQf4PH97fHRvX
1N71rL7+UFzMkfiY1pbnsBQfso5v2ra9q7MLmANgAXIfTP3291cLCzlLtfzM
AplEiKtW32yAEjDHmKfoTxKZcwBzN3LmxGhI9exTzaMTFbMAk9zU1ERVE9dH
bwrmKGaJiZ5RZJSAy25YPXd2tPv4+j8pKIL1oMViAeY8JSUlPDy8rq4OngU9
0MfHp66mViChbhSRh0V33VDz5fYnf4r/sogrL5dLS1VPEIpVZgrmJgrmaPJf
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
ujgHs4RCHczkJHzyvMa5NI5bKrs1fqlMf8IM94oab8yCxgn4CcecpGfZcIDH
qlvU3AK5nVehNDevwlc3TmpsmjYOjfUN3nWnxTJzhWyF22zW0LAoDjXKuJ6e
ruDgIGDtIiKiWlvbBUHMy8s7ffr0mTNn0tPTU1NT4SAjIyOFJPoVEr0AEpxM
0xN8PXXqFFxDj+lPcABn6DHcBZ9wDZTMfqVX0rvombQfY6LvRVsD2oH6Rl5f
l9DZR4VyDNC1ODdHJlrePjMWERXc1d/n4tzdXV07tntzLvfxxMS8/MdA+6eF
BWfSsBqUsrTNKWVp9ehxmk4XRm5GQfYVukSqnqA048VwJe0etEB6wK4/oyfW
LHDFafIJtaFdJ518pqVCZc9knElLh4PTqWdSoNoZ8CPk1DPpKfCZlk5qg4+E
CsK309DF0lOS008nZ6QmpZ8+nZGakp56Kj3lVNrp5DOnTqenwq8pGfCZeiYz
DQ7Sz6fDQdq5tPSs9PSsjIwLZzOyMuBkxoXMMxfOpmSlQz5z8WzaRfiaAcep
8Hkh49SlzKRL5xKzMiAnZZ09nXX2VGb66bPpKWlQl9T6hgYmHmHWauugsqqr
uVLd4N7ePhihBMz5qalxb+9tw8PDqelnL1+9znHc3bt3oSUyMzNp76ItDHSh
JFjcFeEnOhghQZ3T01KhQ2RCC6aeOXXmTFLamaQzqcnwNS3j7OmMjFNnzp5O
yUpNvZx6+k5qyp2TJ+8mJj48cSL/eGLh0cMlR4+UHjtWdfJkbVJyfdKppqTT
zckpbafONJ1ObUxLazub2XL2LOSms2efZ2Q0pp5pPJUCuT7lzLPUM3UpZ+pT
0hrPZDScSa9NTqk6fqLq6PHqY4mWY4crjx2sPHbIciyB5EMWz/GhZXK85Xh8
5fGDFccOVRw7WnH0RMWxxMpjiRVHj5cdOVZ57LjlOJSZCCfLE0+Wn1iUycmy
RMgnSk+cKIXPxMTyY4llx06YTyY/PZWcferEuVOnykpLjdzsOmj6MmmJDVBY
oykidIOgoFAneqSeaWtrCQwMHB4eCQ0NHxoaHh8f/+KLL65evern5+ft7Z2T
k3Pz5s2NGzcC9eEYesvXX39979496DxwDRzDAZzfv3//nj174Pj+/ftBQUFb
t26l57dt2wa9BY6zsrI+//xzuBFO3rp168svv8wm6eDBg2FhYXASbnznnXeS
k5Nzf4zp3vwErbFlyxZYO38bYK5SaSqJhydMTI4Eh/h3dnfZxm39ff07vH1G
hof37N1TWWUBUNi0aROQ45NPPklISKDE+uqrr2BQU6IAgYDWQJRr16599tln
cBKuOXHiBHQDSvFPP/0U6AXHDx488PLyOnnyJBzfvn0bzsMtcAGQz9fXl14M
N27evJm+L/ST2NhYaIe7JEHJcJK1zP3c3Afw7U7O3dt37t7Jzs3JvnvnzgOo
3t2ceznZcA90Guw3cDrn7p17ubdzMd95cP/2w/s3H929+ejejcf3bubn3niS
e70g9/LTe1n52Ree5Jx9dCv93rUz2ZdP37yQdP388cvpRy+mHjybdCDj5N7T
RyKOx0Ydi911IGpnTKhfTOjW8J1fBXl9E+z9ZeC2D7y+eH/7xr95f/XnLZ/+
YeMHNP/m03f//b0//ft7f/z1h2//8sM//9tffv8vf/xPyP/rj//1v//0f3/+
1u/+7be/PnL6RPS+vXEH9jNDy5fR6YUbqcECLaejs3NXMIxZ5/SUbWR00Mdn
e0tLy6Ejx4pKzGNjY0DTCxcuwMiNiIig7UzJd+fOHYBu1to0HThwAK6Ek0Dr
HLwuO/vOrcwz6Xdu3M65m5v98OHt+7k3cm6npiR9/Pafnl69Vn3lekVSysPw
PVlfbznyzl+i/vNXu37yv/b+4icnfvef6W/9Meuv71x7//27n33+6OtvzF4+
Fdt9a3z8630DnwUEP9+7t/PQoc5D8W0HDnQnJAydODGclDSSnAyffUlJvcnJ
fcmn+k6dGj6TNpZxduxs5qieR85nDGelD2edHVkpZ8zPZ4ezMoYgX8gcyjo3
dIHkrMzhC+dGr1wcu3Fl7MZVzLeujd26vjiPYr45euvO6G3It0dv3bJevzV6
9ebw7eyB+/ee3b56KfXUzp1+sjxnT7E+sq47LQZzXnBxvPP8+XOff7YROPCq
Ksvjx3mZmeeio/dcvnwV2HKr1Qrj1GazNTb+/+y9Z3tcx5Uu+g/u93s/3F9w
v9z7nDnjsT0ez9jHlmRLsgJNSaQCSTEgMEdRjABzzhTFnEkxBxCpc46ITMgZ
6EY3QqcdqzbuWlW7NxoESVGBYx0DxXr62Wg2uhu7qt5atda73lVXVVXFbYOm
piYu0q4yNX6STQkRRVEPteekITx69CgUCvFrLofOX88V7/kkNwoKRFjjO53J
ZIrH489zYv6TNMMN1dHRsWjRop8C5vpBn1En0MXHuEmimL763fkvZky/eOki
LGQYvsuXLm3YsOHw0SPJFOr8LygsbG1tdTqdXV1dfCwaGxuHhoa47Qffx9DQ
M8pn8IHj9UF8Pl9bWxs3O7kwsppVxuZ/F9cw588nk0l4c/58IBBoaWnJ5WbQ
bISRnV11pyXzmDBVAUpEqmaInFTFmJSOCIne1GBXItYY66rrafI21VZWuW47
yy+Z7hy8fX7bleMbzx5ce2LPym+2LT28af7e9fl7187Z8dXsHV/l7/y6YOea
vJ1f5+1cM2/bVwv3bli0b+OifRu+Pr5r9bc7157Zt/nKN0UXD2/77viu22eg
77t/4ZvKa9CPV16/YL1/3W2+7jZdd5lu+2z3Q+6SsN7NtQFHfdhWH7Y/rLLX
hTyPaqqaHte3PImnhkrLyzZv2WwU3fgp3CGaTaBjNzNx+MiRTz//3G63eTx2
m9304EHJunXrdu3ZPzSUANuMr1mv1wtLNTebAK7hzuf60+AaXg8jYiQDElYF
o62pTcQSRayQp5AmmWS8rqp001rT7qJ7SwoteQXhhSsebd5Zf+p0c8n9Prc7
UVUjPW4kXX0kGqfxQW04oSWTNIOODiqmWU9RUdDEDBXSzBMCjynW02N6JqkJ
KY2/Bl0rrOMviqxLL+6iJo1/jch+N6NJmeyH4juPsDenYjrrlhHGde6iEeA1
RGLfH75YOqGlk1SC+Z9p62hduWoVh69/LJjzYURgVgQUtc+kk8k0r6QAj7AG
4Uf4PxhzmBLz5xdEo30qVmSWeHI9rEqj6oeSbYRlNNAcj7dRYccA7dyLZ5RC
+ZKHvYPXSDX+9yX4xv+MXPIze9Lo2edzfjCuc3nFo3M7+6vZNOqxcbqRZ97m
2Q96wWdq2rhf441kcy07Ozvh4MOr27zaOI7dFDTOSySc08sTvggrUiAIcNzC
SjEcVBVZhoETmBiWIitgqLe1tLJME304YKVzMDeeMbQUcnNac3NFjSpFJEcW
YPRX9DIXKJb+9OlT421Vo9psVuiAUE7/IBJRALcTqtiVjNV2NVrrA1ccpccr
b2y68s3Sb7bNP1T05Y5V04oWfVq8+Mttq+ZuB0xe/9XR7UWn9++4+M3hm+dO
3b9y1XLvQcBmfej3NlRXtT1+0tvSOtDdmYh2J+PR1GAsnYhnEjHoQmJATA2I
yUE5PSCnhpRMQhWGoRMhQUW9a2KSdYHKoqbwLlFkcmDgD641naKHDA+q4qZD
lRQy+GU4IVVWVMDhxfBU/wAwx1mYO8Kj+Xp4NxUpkUwOJ5KCkJGkFKsPosDI
ZmDtinJfb19eXh6cqY39l9GX8NNhGsAo6FtndvIb8kf6wBHkPjU+bRbTMgp9
pdJSR1vNqVOlc+dWFiysPn52KBCWu7rIQD9NDNHUMIAzBdCTBQpYKukkIwyh
cl4Nc6qzFCcurZ5ljqs8HScbdWTi+SojV1JNT2FUdRoL3+7HpHGRsRc5yUB0
THaRkShkxKb1kIru6B/7+2OyBTjHEl4raFTUmN6ZQjBqqiA1EwywZcuX53rP
XnVkf+6Wi2PPDUjRbOh8YGDgww8/hNOZsVShwXZv1NXKDa/kvuH4Nx//v7m/
yBvsHd3d3bm/9dI/QmYVezEwzbqRtpabc8IJYjIPDnIaArP+uBE4oudEYnqX
TGAuIoVUycFcOBfLLMOOsrQUnkKiZfMbRvQEBBbroRrj32ZD4jpRlacZ6OEx
pHgjMZjyYmpgQpPkcGrN6vWzZs0RBPHVwdzYBFkyIJGYVwXpHDyJW2YlQPFv
kjQ9N3a0kazy2GfTPz1z8hRWgEMWI1alaW5qHRpKshWnZquI6mngBitYj0KO
C31yotdoOgl+AVVDqFcIqngNtTa3YpVwMB7ARINdAuARqW6AjXI8M9wU6fS1
PLzmrdxx/dTCo1tn7Vg9bcOiL4qWzt+9ftWRbftvnDlvuXc/7PA11te2NTzt
bW+N93Ym+qNiYlAFm0lOaUpGUyVNZyfqzECd78x7llo+kkuEG/3fMfzH3K6R
MXklubv/M7uqTmjT7xgg57JlywwwN6b6Ky5R+HqwUyBxHu6QIuN2wfJWFNil
qaAyadzcRWxsqWAR/fXNt8yVlSo71OCXwc0brwDtnzY0cWxl9FSVUQv521L2
EtiPZDg/N9Y3yoNJOhhtu3fj6pezTeuL+z0+tS9C0yyeqCg0G/zUEXfsQs6a
LyPaeNvj2ZeNGE88k79Dn//672/jge45r9GeVxN5TEMyOkwLHTuya58nke3b
t6+gsJDmkEBeaVj/u9ozN4FPD0DXL7/8ErYhmmUvGGD+6u85/iaP/zjewJyA
Q58xfN/33ionPiBK4y2XKM9bYPRetq0bnGSFEUP13Gv2t/CwRdYIoBx9slQo
/p4a4yHx1YlvNJItxqsbETpdQcnWPVa4eaEn0rKfORNA4WXT9fWDBdey6iew
eYiktqZuwcIFzM3ySiNlTCE8F7M9V1SyBXcZ7ZiR0wgmfbI/3riZ2b+d1VFV
5Dlz5tTX1jHyC34peGxqbB2CJcwtJZUVzX4p88toBpjTrAQEuwFonCnMXh0Y
TjY3tcFHpIk8RMUhNdMnDAU6n54z39145uCczStnbFiycPvaTacOnCy/eStg
c7c9bkz0R9TMMBi6BA6QKsthYTy3F1LcxuDJs0uVkJf9Ja/4d35foyytmugV
l9QbN25s374919HxfbN6dHbDL8BAUgnAnCV+YRlWJP+pLIEAczxz3s34Y+Ex
0tc3Z+asno5O2OLThJkNzOCFNxMl5cnjBs6654kGlCcEI6UQOXeEwbwsSp31
j8S29vpDh67MmdVXUU57IwT9oqKiA7dBzfzBt+ilt+/nfsOf3Iw/0zBaNDbK
dXV1sFOTLFn0lwbmuU3LCkbBLj937lyAdGMqwtd+dTD/oe2HgPnIM6nUunlM
OarLYBQqjEXEX0KokYNGmMZCGjMFGYUV89cwS8Xw1sKhKgNHK8aWZelnMjOt
8aWAjgIhAkW7SNZ/nVt4TJYCcwxY/UWs3sXUM2TWFZZij0xcZlel03Q4QeNx
GolKqYza3tm+YHF+Op16xeQSwx5mad26M4sl7LKFTjANDF1mrMCYwtad8buG
ewT+Pz8/n/muFX64VnFkWxPDKV1xg7zIbiH6ZkKMDDvC9zMjMRN+gNsk4dka
7HA5ranRRLKhrT1DlLre9u/c5vXH93+2fumXm1dvOHPovKvM39PUOtwfERIp
VqKY7YIql4AnurnPPljNWVDP4RRnTxD/0JbrayovLwcwf4a++0pjzO1GWaEZ
hWREOSPIkoTVs2F2ZyjNsGmek1Ce+wX6+voK8vLjsRh6fuBOKqjkQJgJIYji
00dPMLtzNL2Jbe54YsQZyxcQTQmpcFVo174H85enGxq0jEBFmciYLZ51eowy
/A3o/W+8xz9bexUwz2b+M1GjbAP7djlzs/x3Cg/+uKYxC1wQBIDx2bNn86AJ
/YWBuUH41XNzdUkFymYkzLoM1QSG2CrnU7NRUZlzRsIloUnsRzzaMaubskTw
NNVSeMDVFYUwyADgprIiLyjhhVCJWI2+EjB1ZJrJjCSS2uAQHG/lnh6hvT3Z
1Dz4+FHM7e2tMHXcvtNw+qzv4CHz1q131q05t3Txoby5+2bPOvTptMN//3DX
B+9v9AfaQ+Gq/AV5mcwPBnOOoS29nd+5yq/6TTeDthvOClvYn5RFmbPNWUqE
NhbMjRkIYB4Oh+FzM5l0hlW7e9LwNBKPpqR0UkwlxWRSTKTEBH/kF3qXkgkx
MSwO8Z4Qh5LScFLEnmKPSSExICQSwlBSHBpQEhF5uK67/fjNa0t2FE39euGC
I9vOW0u9jU86hwaSgggfjp+ehu+RHsboTZpX9kvrX0rIZEToabgQxFcp7feP
bbxoIK8e+N133xlgbmxDrzTGOC3JcEd7a1l5/53bQyV3O0pL+uuriZJG8xoN
9TFpQQaWomUeicye9WVrS2tSEKDDfRPS8JhOpVPJ4UTTo8fsuRTcdzmdljMZ
KZ2W0in2mJZSaWVIUPqidbv3lMyYPfzkSWY4lRkShGEYzuFBIZEWMsaf+Q+9
zf+YZvzVNTU13DInP7D89+trL9yPslZEPB6fMmXK/fv3f3lgrumeEC5IomXd
LIaLWOEiDQpmKOhndDWr1sETPQxFDf401fMdMABE0JYBYwTj4VTIkGRCjfQq
jU/Sfl9vaeWj89ech4+Xb9t9d+2GWwsW3vj882vTpt38+O+3prx76+9v3/34
vTuff3Rn9hd3C+fdWLb0u+LiG3v33j12rPTcOdPtm16L+anP211XM9DcKHR3
iZH+9LqNW2bNmQUz5Qcs9Gy5DbAAnfXBuQc3vF1U+P/Ofrfw0KY9F0/EYKly
pTTYcpQxXsfcAOX06dP379/f0tLU2Nj4tOHp06YnjpDT9dDtbvS4mt2OJif2
5vHdAd3eZMfejN3RhB1+dDTanY3sscHhfeTxPnE5Wz2n/NdmHlr55oov5m39
6nzpLXdD3aOutua21sYnT588ftLS0NjypLHlcUPLk4amBv494KHpSWPTk6bm
x+zxUXPzQ+xN8AgvaXhBe/r0KTw25bTGsa3p9bdG9vWa4Xuyx4ULF/5onzmc
4qK1YdO6tba/vl3+b7+pzJ8fvnxazURUkhJIWlAFbaxhaRj/cJp+6403b9y4
0djWBje1sbG5ER6bmmCnbn7aEDRbHjsdT+3WBpulwWZrgHGzOVqtrlaLs8lm
h2e6Le6Wb0+fm/K3uOVe95NHjY9bWx93tz1uaW2BIXjSMPZ+/vff4Z+3Nb5y
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
lrtUc6Vsq1DNDq3SgT5zTBrC4hSCkCHMxiPMTcvlsicmmOfCOG9nzpwpKCgw
eOavB8y5GgzBep0s/RSVUJnTBQ9cKjl1pve3v6rs6Ma6gKjZo0oc99E2ILKB
FfrcYxMjPz+vvz+q0pRK0vB/gkzv32/6w3/thoO3P0ACfrUqoIb8JIRorP2A
HsDOdwE/oDo+KXu83Z1dcR5B4jdO++dthoXM3SzpdPolwzq+Zf+LYQKlLACK
lrkCuzbVpU8ZiBCD5Gw4dvjn5ufnt7W18oxvdhiX69prfVG/l1Svte2acWmJ
XfM5MdyJmrcsXYiHPo00z8kM0Gebli3Rxe95RUXF9u3bDSQn49L5Nd0Cp6Nx
EDa2/D+y6fxgmX/MhLbQYaJgQFNkxJXRXCSSI3HcF+mbX7gg3h9nEshgzRvq
1YoqploBzO322rz8yKq1xGQhFTZqqVQtZrXSScvtGtYANSWwBqhDFNIYdQEw
h5MAfXbiTaimZcuvG8PU2dnJCzq/Nm0WbhWoWKwACwXiTwoTzIQPFDPq8LB8
/Hj0d/9iammW02lZlARVTSuKqLJkbiawR7IHRJwkYDYAmM+dNycS6ZWVYQXs
N5kCmO/cXjl33pVglYoVhbBkczocyISDQlVQfEGXxvcw68GgEAinAyEBddGD
Ca+3rb09ykPEhJ8u/nkbnwmUaSMvWrToJdTEl84zBubIM7cZBZ3ZGpZ5SRIm
pUZyVRONfPPCwsKW5mZ8Heb/owuttq3KGws4SXja6bxtvgNOzcvMbJeB4bmI
/Vwkn8wA5bdXFLHeh+EzN0b81YeYI/1YPXOwyihGr1RZEKRcpcTcke3p7c2f
mx+LxtBeU8Hix4XNCnzDCQDBXKosdX/2RWzbPlJpBjtcswCAW0mFm5Q7qeUB
sVYk7NYmt0MSMnQsmNNxeU8Tp9EcQQbKfOY8AGqs4p/7AzUmOS4Bko+wvZ5Q
QaVDCkF1tZCn+29vHvj//p/j/+f/cewPv92/ZtVZIY01wVUUWRKwPgFjIstZ
85x/z1gs9sknH9+5c6ujo6mttbO9vb+pOfn5x1cPHXzkDgzZPe0ud4vb2e5x
tXvc7V7Pczo873F3QPc+2/G/3O42l7fF5Wljr2l1Oupqax63tDS3QWvtxA7o
/k/X2lhraWnhFzt37ny5m+V7Rz1Xz1wibA0jGVmEf2r2yE9ydCT42fCzTz+7
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
wkOGKdv69evnChrCR0brT45JlbPOSyhik5mWuTwZrXva92eGHDIXK9w9NTW1
s7OTOu45SeLh4tXdtbZARYXkytAdWpa3yUxc6CSfNBkVvZEYTcRkJmh4UzDX
zwrm85iaOBnnZgGbTaUmquzEl+j1UUNoGphTn7kyO5jHz90GBgbSUlKHBoco
RYnNyFXL3AxgLpdonyYn+7dukstMksHC6cvBICcMzKk2y+vomb/TYD4ZRzVn
D7m3t5dFgEpvKmgoOsGOZWSTVd81fRPMcoG6UmVqkXMUzEWkFElMAVuaPnfH
FZZAIJCUlARgHsEQcXQNiLx4Kce6JeNOKCK2NLZipmimshy1KKLjSeym+PPf
g/mzRYlqWUuMZw6j/Astc5ma3CTqNGdClzJb+4iCOU0bF02sy5aaFZZEaqqo
y2RQUlJSmFI9WuYSBqRUddU4Bh02ybn4UsK+irMqmJsmDSbZZCLm92A+d1G7
PMNzps2iIsDLmXCzg7lIV7cxee60rjo1uNPi9XrXpqZRn7nIpHRFMdLhcY9r
jJLOSLRa8rjMvmxJ4NB+pcQo6o2cURMD82KiN74H8+eWuHlwNG6I+cyZx/JN
gDm7Lcodo3x9/INVGMLHfx92SOlLmENOpI5TGrMvsCVRxjNfsGBBaXEJ1XhR
4K1QUEpeU1r0uCnCS231HSQi0yB/Of5OM9CjtbUVkCoOzJX3YK7EOGwTExNg
vK1evXquCFD2VCefFbGmYC1PSeBi0BBN7xpdAMUlcKKitxQLYWOQvmz5spu3
8ukaGV0SlUXMNBRwFY+b/uf417f7H1gVOzJYJs2wsXjP2GbGbU4wn7cRoOpz
5jhu9+7dBw8enC1oaLZrqBU+nc3SSYljBKlHuHolxTgGjOEwRUWD2fRnn39m
MptwuOdpYJLEtT5xTmiRjiKXl3OFd0u/+nL0Yo5ShtrmvLFE1GsknQ4hWg8Q
rX0dMJ8m0/EOFnXCxXrQ+fPnwRaSY4Itb+yHK3HbzDdjfpipUQa+DLS60fEx
XuA5HhN681xobGyIER7YAujTmlqqqor44POFvvgkv7FlXBSk1ppWKSIJBNvY
bN8GbvEMmL8vUyYcPJnS0lJoGHOA+QsvpYJ5EC1sSj3lBdi4SARqFuoR6eiC
ABXNgsJYva9OWG13VFAwRzU2APOazhrHcGVe1/3/PrpAF7ZY5ZmJ4WZTSnwP
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
9dVX6+vriXfU+XDxg4P7L1/9ampm7s9/+XuKRlNWVLBsWwQtN2+zz82Z3/3t
nrbb7R0ouDHVOm2J+OSf1hlLQmJC1Y3a2M+O2xbtpHO0SqV66aVfxMerqAuX
jYGNBGiwF198EcT5lStXsEuNm5mefOedXW1ttxyO5f379wN15174YnTMdCIh
2eV29/fdh2V99MFYeWnZ+bzcIeNAXKxqZnYm7HBoQ923aSlqDkU3SAtL9g8+
/HDbz3720Uf/ADIXeI6ZdcNAdFFqamp/f7/FYomIiAAah70VyOb8/Cu84HO7
ndHRRxcXFw2GrqSk5K+/LtXpsnp776tU8ZWVVTqdDrvdAvV7m5ubX3755Zqa
mjGMB2sBrhsMBlAFwA/UMc7E2BYBDTUhNgUy3717940bN2DFJ55tSfRqtWkd
hi7L1Exo2FEYMz6v63ZLy7mzOThyyXUsJto8Nf1dZ09c/AnT2OiRkI9GBgcS
EhJu1jcdCYuyWKbJ+RoMs3AM+llsAGwY4KsGZQ5kXlBQsLhoCxxX8Z7PjkWZ
TGM222JISAhYFqZnQeHXJaUVPoG3L9nDIyLm5ueBzLWZmf19fceiY4aGh6Oi
Ihsbao7HqxwOJ4pj8wkTE5PvvbeXkLkkMrNuHCS5LyFMLpvNVlpaChaEnRfo
897ePh4lgrnKykqdTicYHWj8zp2OixcvZ2Rk9vX1T01NazQas9lMzzrv3r37
1ltvDQ0NKZwna8S7LiwsvPHGGyDjqZ+WWXyLgPhY6JkFcPjBgweNRqMgn5MJ
vLuhvnZ0fMK2tFxSft3jdnNel06bYbhnwHEPnoryslnrwuLS8mldlqGzo7nh
plaTXFxUtGx35F64dPMmKHw/jlKTsrKyYPxQnzkbAxsG+KphvsPeub29nZRF
EkWQVd7SksLFBavL5SguLgaN53A4VHHxM7NWzse5nK6ioiKHyzVtmUpPTwdV
VlJUnKHVNjU1LdnmYH2/f79fxK1JwLiRkRHHYo76OA+Q+Wb/r88RlEGJ1OkB
1F1bW0s6ASmzCUgsIj4ADcS08HLTSXpWTpJ9KEWvCXg/fARNKGZkvnVAF1y/
XK8DLEXjCbGteRy6IMmjRoDlvrbmW9Dw5KQbn3bRM3GviNrNeHgfiaB4FBQn
4aRUAMk0EUXmats4EFNSy+J7dCCObcGTkomA+fl5sn2WSPdf3BNQEvy4mg8K
WkDlmAKpgjhvMGBYweN1er2oRiIq/MCwUfArkvLoSbcyFkV+D0kKeGwLP/rb
ftBh8l9+nGFLYU37osmM+gVL1B8j3wdiYOhQwZlIgtwQXMTa+1FRX+VeDacv
sQV947DWBJRoEpmfBqjKwFYCe6PMBDCXiKrlk/rKJIXfh83tl+UbvE4KqaKL
m/2/PkfwBxfEo9GDYiA/l/bsk+TcahYm+vxCHi0SHgZk1gtYtZFhg25YHCCZ
h2+Y6qVArWvyU98bPBKrubTZ8CtvfkVKlyzhpGAyR/doIKyQDGIej4sVWfoh
MsfWD6wDm/3fPS/AeX8SWVW/F2asbChAlmyB5HHQJWCz/3yGDQVZ1CVEvGgk
SH6UOELmLE448sPijysDwEXYm3NoCAVK6+HXVng/I/P/ByikHdpbUTIXgMZF
ROZSgMwJXRARLpM5vAtlojEy32iQOUhMo/S3EI84tmNg67SKzJl75DlEgMyR
3QW0lUY5oZxcNM+Py9QTIc77YetNKnGRhDCSo7TCM2W+9eEPOjQhJEA4AaX9
BJG5fIxCeBtuJDmJkDnZ3zOW2DDQWBJK5kp/i/Qo+1IKiLLAvGMGeh6hdLFK
WJnTlV2pBPA2T/QHt3t7/OBhZL61oHS9roUV+bba7oQuSMUt2uxvs/+b5wjK
dXOV2Gbam2Et0Dy+oJy+oNHiX2FJ2wwMDAxbG4yjGRgYGBgYGBgYGBgYGJ5x
/AfKqadU
     "], {{0, 322}, {495, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{495, 322},
   PlotRange->{{0, 495}, {0, 322}}]],ExpressionUUID->
  "fef001ad-4744-46f5-ab16-eb780491b0f3"],
 "\nAs we see in these graphs above, as n increases, the signal is amplified. \
Whereas, when n decreases, the signal is attenuated.\n\nIf we look at the \
plots in part b, \[Theta]B has the slowest response, then x, then y has the \
sharpest response. The signal gets amplified from \[Theta]B to x to y.\n\n\
K=10 has a sharper response than K=0.1 so as K increases, we get a more \
sensitive circuit. If we want to amplify the circuit and increase \
sensitivity, we should be tuning K to be larger.\nK0.1 is more sensitive than \
k10 case, as seen my the graph. By tunign value of K, you can control \
senstivity as discussed above"
}], "Text",
 CellChangeTimes->{{3.8280099342868214`*^9, 3.8280099707264595`*^9}, {
  3.8280100138069725`*^9, 3.828010015769902*^9}, {3.8280102941565647`*^9, 
  3.828010295859418*^9}, {3.828010451725896*^9, 3.82801050022056*^9}, {
  3.8280239133843126`*^9, 3.8280239548955145`*^9}, {3.8280280946721582`*^9, 
  3.8280280948021545`*^9}, {3.828028164921249*^9, 3.828028210925085*^9}, {
  3.8280283586330156`*^9, 3.8280284219061174`*^9}, {3.828028479857499*^9, 
  3.8280285280386205`*^9}, {3.828028559530348*^9, 3.828028566080372*^9}, {
  3.82802859686487*^9, 3.828028657281411*^9}, {3.828028733343034*^9, 
  3.828028748289543*^9}, {3.8280288810013275`*^9, 
  3.8280289130739202`*^9}},ExpressionUUID->"a1135dc9-a44d-4849-ac45-\
c4b9fa6fb74a"],

Cell[CellGroupData[{

Cell[BoxData["P1"], "Input",
 CellChangeTimes->{{3.828028866106883*^9, 3.828028866275781*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"d3b2d435-f164-4d45-bdf8-6412f0338ab5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjX081HcAxz01KhFtcvLwUtl60vXCbrNqn4rlWfP0cm3ChMysSV6zWk/k
aBJesiZUnmKIYx6quaJceZHnO5yHuy/XdQ53ftXuKI1b++P9ev/1fr2tw37y
jdDS0NDwes//do+Q9bdOB3ypUXGs83/rOJnFEpoD/n3onuRh6gD7W7kF9TRn
fK20NEg3cYZH9/BfN2j+4CpeFx5a54/A8IUH2bRwdPjty1/UD4eQnup0hRYP
412unTEa8Sj86FBKGi0ZbttabC5NXUSiXv0nv9FyUFl8X3a66SqYh4vYL1+V
Qpr9PIphVYrV6sQgF0s2VmpFFgoCqmHjMydru9yApsCGviWdeiT0OCJXeR+O
cykqedZdrG8wEmlqtuDq0DPfvPJmNImdunr3PEZc8M7r5ooWPI6+seGwnIts
w8mIrnePoPp4r2H1j+1ofkmZPehug9bbqrUbbDpBZ9vcETU+AUMd2uRX04Wi
OzJH9+Pt6Ep26Hm6rRcVp5jOMWs7YJU1+7Zirg8iz9FN2e2dmF0gosFdA9gx
yGkK8O9C6Uxzp0EGDxsPnRuaVnbDwKKckkj4yHdy1Rm90Iv07xsjCzcPQSKv
K0482Yf5fVWSqPPD8PGmQlT0fsTbcRtM2gT42czkYOVoP0gN93K/9ShSj3oy
d2cM4F00P3/r6TEI43kTHo48bN+vuxzZPA7m/pUVUXweXIqtj9WtF6HFuDBT
lsBHgkXIxskggn1KMe+w/iB2yANWD3tNYLLMu80kbxDrDF/qcRcnoGrI2t9O
H4JOSz57U8Ek6maYZzrvDuEHh+aRlR5iaApbj3/jMowqt7DCh/NixM99J03v
G4Zq1myt9Npz9NnvZXh5CdDo56Kd4yxBcoRBJqNfgPOurFsNUgmqYy5aerqN
wFroLihhvYA286HpAc4IvvgsOYdmJ0XeJreeFYxRBFn2vtXkSfHaoJ09VzoK
VecVcWziFNglIV1+ZmPI1QmO990sw95+1psQ1hjWiRqLtbgyPPmHdnV5dgwr
zib6O56YRrlpj20HcxwaFcFssfEMmmpKR/U444jLY18xfjyDg5z2WlsbIR5s
v6RndHwWkU5jU/ppQhi5x+1IMpDj3q9beOZSIcZt+3inOHJIvDMUHS4i1N7E
ZkmwAtOrkrkfFIlwhM0wslhWIJQI8jnzIlxgFSWOV84hwjyC0+1DUC2zyDfw
pNBHzqXq3ia4dIMVKvKmkEmPOppQRhDuq7Cp8aHQ6FNmOVVOYM7h1HoFUnhz
0s7+aSVBWua3T9PDKDD42oNJtQRRjOuvVp2iEFsQoFY1E2xM/tBVt4zCnolJ
fe4AwfLnZ9YM/0nBsJU7RucTjCieD5RVUUiwS0nLHyTICqw/crCOgj2/MTVO
QKDe5nuSxaFQsQKaViKC8f7Mm9o8ChfO1ihPTBPcS1k4yhukYPp7QtvYDEHO
7pCtJYL3/VJY3FdyAo/bOxsOiCgE5dTFmlIEf//S3ZE4TeFFWgnFURJcs/00
00dOwUGgbLGZJzghLvC3pigUrEmLzVgg2OIZQ1qVFJLmsuJCFgl0NPmlWQsU
dBdWcdvfEUw07o4OXaTwqGhERV8i4ESX0Hctvf9t0NTLXSb4w2q1Sq2m8CyT
tahWE/wHV4SHAA==
          "]]}, Annotation[#, "Charting`Private`Tag$32050#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ygrvPfqitUk8/w+IfSbW
          "]]}, Annotation[#, "Charting`Private`Tag$32050#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8vQ67rnVCG5LmulpPbL+iIzuOb9GOO+dZZbrUxDymvwZx2yEAG3WqPgKhcLL
T+LSvjZCvNbRUPIqBYN9a87n/WjEXO4isyDiwDbZnNpFdIxN1iXYXCPnsfHl
PYqXDo5ELWE+Ewo88aJfpUGH9HxnkrQZhdRH+eFyynTkJsVa+BCf1jytdVyV
jg1/DQ2/EntO26bqaZP1e+83fjCnwCVTYfHQhA5Fl197BG9RWFJ6beqTJx1B
wXdfNVlQiHz7M6DSh45Uw9c82y0pKJu4q9P96dh/9NnwfWJHjsz4oQg66a86
rQWtKCycZjNdkkOHZA+3qb41hR+94V/UBuiIetQtnmtDYXKuv69Vsgljnq87
ljygkGXiWax2oAkxXw+qqRM/bT8a/elwE1b/3b/Zi5g3O+hW3PEmlDvkLOF7
SM7nnv7844tNWH7Rv1X4EYX339r4RV404ciOs2Pr7Shcu+ryx8+9CWI/d5jp
EEu27B9c4d2E/+7amnoRl6f7xM4FNUF4mH1kqT2FGWstmZr0JkT53J5nEKvM
1OlY95P/i8oqiHpKYc1lu4Ojw03QrSpP7yLuaxQXvDjRhJnWF4dXOlCwSXH7
fGy2CUKp6Wy2xCEWqtb8nM1Y3jcUqOBI4Tuj1JN2oBn6N7e2lDwj+ZzIq+b2
aEZJnp3cMxcKt9+d2mrm3YwVIt1RCcQyyp8flfk1Q+lkQFEzcXUQx+7HEc04
sFKBd+tz8rynz3uO5zSjIt1XpZD4aPZ37dLPzXjIrXl79AWFzmd7ex8cakF/
l5n8cjcK4ZJl+1uPtmCb6lHjncQ3e895SCq3YKNRmroqMYvMU4yebMH1d29s
XxBvn6gP07nagoraRwpsr0h8p29e3+PZgvlIf87/iLk3xlDDwy24NJsTFudB
Qf7ss97P4y1YuO01WERs7WlYM8RsQZVV6nwncRsrX8zAjxbc+sZavtyTQvDI
C4MerlbwMVcmmRBLpJjVNUu3wuDsOq6NXhQ0lSQSip1aUbah6bPFawr2jzn8
i0gfvUmKtsaJOCVzxIXm0YqNa2R3+BGvFQ0xLvRrxbvhlJ+fiHu4VgnkJrYi
cnGCFvcbEm/bzIvUllac/719cTTxK9PM66EibVhf/jm72JvChHzSC85dbcg5
OCDWSnyCLyr+3p42HP7p7jxKvKjCh6kh24aw7MYJTh9SD0Rs7v081QaXd0GO
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
          "]]}, Annotation[#, "Charting`Private`Tag$32050#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"1/Kd\"", TraditionalForm], 
       FormBox["\"Output\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"KD=0.1\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]B\"", "\"x*\"", "\"y*\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.828028866601595*^9, 3.8280289368622656`*^9, 
  3.8281012207115445`*^9},
 CellLabel->
  "Out[594]=",ExpressionUUID->"a8109f74-d14a-4c32-9597-f994bfc7034f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["P2"], "Input",
 CellChangeTimes->{{3.828028867730956*^9, 3.8280288679937954`*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"51d28eb0-adc8-45cd-a2db-4e9be04730dd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjX081HcAxz01KhFtcvLwUtl60vXCbrNqn4rlWfP0cm3ChMysSV6zWk/k
aBJesiZUnmKIYx6quaJceZHnO5yHuy/XdQ53ftXuKI1b++P9ev/1fr2tw37y
jdDS0NDwes//do+Q9bdOB3ypUXGs83/rOJnFEpoD/n3onuRh6gD7W7kF9TRn
fK20NEg3cYZH9/BfN2j+4CpeFx5a54/A8IUH2bRwdPjty1/UD4eQnup0hRYP
412unTEa8Sj86FBKGi0ZbttabC5NXUSiXv0nv9FyUFl8X3a66SqYh4vYL1+V
Qpr9PIphVYrV6sQgF0s2VmpFFgoCqmHjMydru9yApsCGviWdeiT0OCJXeR+O
cykqedZdrG8wEmlqtuDq0DPfvPJmNImdunr3PEZc8M7r5ooWPI6+seGwnIts
w8mIrnePoPp4r2H1j+1ofkmZPehug9bbqrUbbDpBZ9vcETU+AUMd2uRX04Wi
OzJH9+Pt6Ep26Hm6rRcVp5jOMWs7YJU1+7Zirg8iz9FN2e2dmF0gosFdA9gx
yGkK8O9C6Uxzp0EGDxsPnRuaVnbDwKKckkj4yHdy1Rm90Iv07xsjCzcPQSKv
K0482Yf5fVWSqPPD8PGmQlT0fsTbcRtM2gT42czkYOVoP0gN93K/9ShSj3oy
d2cM4F00P3/r6TEI43kTHo48bN+vuxzZPA7m/pUVUXweXIqtj9WtF6HFuDBT
lsBHgkXIxskggn1KMe+w/iB2yANWD3tNYLLMu80kbxDrDF/qcRcnoGrI2t9O
H4JOSz57U8Ek6maYZzrvDuEHh+aRlR5iaApbj3/jMowqt7DCh/NixM99J03v
G4Zq1myt9Npz9NnvZXh5CdDo56Kd4yxBcoRBJqNfgPOurFsNUgmqYy5aerqN
wFroLihhvYA286HpAc4IvvgsOYdmJ0XeJreeFYxRBFn2vtXkSfHaoJ09VzoK
VecVcWziFNglIV1+ZmPI1QmO990sw95+1psQ1hjWiRqLtbgyPPmHdnV5dgwr
zib6O56YRrlpj20HcxwaFcFssfEMmmpKR/U444jLY18xfjyDg5z2WlsbIR5s
v6RndHwWkU5jU/ppQhi5x+1IMpDj3q9beOZSIcZt+3inOHJIvDMUHS4i1N7E
ZkmwAtOrkrkfFIlwhM0wslhWIJQI8jnzIlxgFSWOV84hwjyC0+1DUC2zyDfw
pNBHzqXq3ia4dIMVKvKmkEmPOppQRhDuq7Cp8aHQ6FNmOVVOYM7h1HoFUnhz
0s7+aSVBWua3T9PDKDD42oNJtQRRjOuvVp2iEFsQoFY1E2xM/tBVt4zCnolJ
fe4AwfLnZ9YM/0nBsJU7RucTjCieD5RVUUiwS0nLHyTICqw/crCOgj2/MTVO
QKDe5nuSxaFQsQKaViKC8f7Mm9o8ChfO1ihPTBPcS1k4yhukYPp7QtvYDEHO
7pCtJYL3/VJY3FdyAo/bOxsOiCgE5dTFmlIEf//S3ZE4TeFFWgnFURJcs/00
00dOwUGgbLGZJzghLvC3pigUrEmLzVgg2OIZQ1qVFJLmsuJCFgl0NPmlWQsU
dBdWcdvfEUw07o4OXaTwqGhERV8i4ESX0Hctvf9t0NTLXSb4w2q1Sq2m8CyT
tahWE/wHV4SHAA==
          "]]}, Annotation[#, "Charting`Private`Tag$32141#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVz3k41AkYB3BXOikhjQyJakN0agt9d+NJSyrk2lwVEirkSeymbDNyLtXs
xDoaZ4UojMgZllDuHGsMxsxvXONXW7JK7Owf7/N9Ps/7PO/zfTXPXbHxlJKQ
kLAVz/9p4TneWTthd7jNLH1VGXH9sIypqv8wZR/KlB2/7W23x96HiSnFFDPk
93X55jR6wfJtX1Eq5TQC7NscBexrcPCYq7pH8QBN+VrSX4wIDBncMY2jBEH3
BimMsmWCpXwyIppCg6fWtPLrnmyEryjeHkVhQFuDpm4iKIGO+d3IIn8G1BlO
epMH2OiiX5kYbGLAc7i0wTGaDW1pvTz9a39AN2VZzC/6pWj8lqXf08XEIZEf
hXv1BdZ8ZO7XiE2ClEi53vJjORKHQk3Zi2l4ZWh61r2xGo5O6YXvP2RhzVE0
FfLrsXop3NlcvRDl1jlfBk+2Yqv1zHh9TAn26N1kxTV0ILjtIBI/lcM7rsPB
Iq8bKiUKXEnJGiT/s5uIle5FKc/0TbtxHWb6vewPGPWjzid1k9N0A1i7HYqN
tf7G7DaTtU8vNcHgfHVub+kgpObz1m3a2oIFRtV9JZMhGC65l9oWvIHr4fd3
w25z8Ya2r61Rpx2lCaIs2exhaCRMzT+Z6UCYW3HugPsIpuaGue92deHra3p+
5sAIsiYrWuR/74ZBvHTRdutRyFMfkXx+D9SczVtcKkcRe5HtxdLuhZx3c5Tn
Rh4+/5DH977Zh/sPtrndCeIhaE9DyYb6fpCbZXtVGngYLmiI6dQU9+bcb5dX
GsNXn57kHaGDsEulnxE6j0H3x+WLXhUcRAi0Lp1KGYN5huaF5ypc3A2ojWdy
xhBMddsy6jwMDs1ItlmJD71pu9V9ViMwiI5yYh3jQ3Ht+xUNX0agSroNRd/g
Q6YmuVArZRQzJwpPKuTz4buvYmClJQ8dZo8zswb5yPvpHKv6Mw+iEI+zJcsF
mJ1SXUcwxxARySRZ+gKwbc2lGWZ8tFKf+D+yF+DmMfrDEoKPjKhTuuqhAmgO
WfRn0gW4TU2jGyULcOgAjUHZQ8DX919aYJUAzurt85LdBLR1E2K4g+L7LXE8
/3AhXsQaOdp+FSBRxjXIRnscBe5Jai4qBBS57AyphnG45q5jF+wmsOxG+OmD
ARNIDuIqS1oRkHjiWshbPwlZufU5fp4EAv8sjFtfNwn5EKXZ12EEqnQjVyhc
ngKt1updBpOAgkWg3m/y01CUZkVI5hPg7OzoDqmcRk3RpN3ROgLP0qDNdxVB
Z2FoxLSXgEuhoQJ1UYQNzFf3tk8QuEVPD+fkzkDPR4tKLBB4Ok5Nlj9OQrTy
uuJjeSEiU+nu3BMk2rpzZmfF9rARbS2wJkFrK2o1XSuEWmXlMysHEhVZl2yH
xY6OP9MYe46EQ2tVp7KCEN6GSR9WhZDiv41jbykKsYWmdGx5DongIoM1VhuF
WPz+V7m+x+K95+UrSWIPiMa6cvJILFMdaxSIneBQ7HL0OYlAvxCbMIoQSzo2
V+mVJNwLsjkFqkJwOuPTpLtJFNQ51chRhSiLmDvf/Y5EmaXJBSexGUZuOzL7
ScQshEtni22ZrV9yhEvCO/wgxVhdiJfX3zaHT5BQy8wrv6ghBHPn/njraRK6
8zwZttgBvJTTmiSJppcJZhKbhfjuuN9w7ScSJxR/TmeKLSPZk5UwR+LWh9Dq
UbFH2EY+7l9ITDardehpClHpk2mw6xsJycNHeoPFfqCxenZpiQQxI+qoE/s/
QNmiQA==
          "]]}, Annotation[#, "Charting`Private`Tag$32141#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ov4HvUo9qg==
          "]]}, Annotation[#, "Charting`Private`Tag$32141#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"1/Kd\"", TraditionalForm], 
       FormBox["\"Output\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"KD=10\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"theta_b\"", "\"x*\"", "\"y*\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8280288688992767`*^9, 3.828028937089134*^9, 
  3.8281012208744526`*^9},
 CellLabel->
  "Out[595]=",ExpressionUUID->"591cff42-f5cb-4bd8-8685-0310e144b14d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 817},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification->1.5,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 150, 3, 146, "Title",ExpressionUUID->"eb3014e4-2f16-47f0-afa0-d1d2cc67de9e"],
Cell[CellGroupData[{
Cell[755, 29, 496, 11, 160, "Input",ExpressionUUID->"0b84aa96-46a2-4ef9-97b6-150a5eee3901"],
Cell[1254, 42, 472, 10, 49, "Output",ExpressionUUID->"a30e7e30-b8cf-4319-88a5-ae0012b3355f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1763, 57, 251, 4, 67, "Subsubsection",ExpressionUUID->"6152bcad-e914-4e9f-98fc-019b2ef039bc"],
Cell[CellGroupData[{
Cell[2039, 65, 532, 15, 43, "Input",ExpressionUUID->"8370b952-9c4f-4704-b8ff-e27aaa8e332a"],
Cell[2574, 82, 581, 16, 71, "Output",ExpressionUUID->"26e981a2-63f9-4e42-9ba7-7120dfc869d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3192, 103, 236, 5, 43, "Input",ExpressionUUID->"ad7d0229-cefb-4939-8e29-fa81ab3e45aa"],
Cell[3431, 110, 386, 9, 70, "Output",ExpressionUUID->"ab70aadf-4171-4d3a-b9b8-9251b4101dad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3866, 125, 246, 4, 67, "Subsubsection",ExpressionUUID->"633a6377-1991-497a-9d46-84418174df61"],
Cell[4115, 131, 534, 17, 43, "Input",ExpressionUUID->"66d2a733-56c8-4b6a-aabe-790e76e32ddb"],
Cell[CellGroupData[{
Cell[4674, 152, 234, 5, 43, "Input",ExpressionUUID->"dfef558a-ef9a-4e55-8482-6d1060b77766"],
Cell[4911, 159, 558, 15, 70, "Output",ExpressionUUID->"af978f1c-c3e8-4c08-9a1d-1e385e9a5f83"]
}, Open  ]],
Cell[5484, 177, 333, 8, 72, "Input",ExpressionUUID->"fb8ed411-92b3-47a8-8cee-911742bacfaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5854, 190, 253, 6, 67, "Subsubsection",ExpressionUUID->"7770ffd9-e818-42ce-bcbb-8aef734c8e7a"],
Cell[CellGroupData[{
Cell[6132, 200, 685, 19, 43, "Input",ExpressionUUID->"21b4ffc0-cfb8-4e85-ad75-51c750d52026"],
Cell[6820, 221, 698, 20, 73, "Output",ExpressionUUID->"175af809-884b-45bc-8669-181d67c4ec0a"]
}, Open  ]],
Cell[7533, 244, 255, 4, 43, "Input",ExpressionUUID->"70fe8d93-c887-43de-8558-73ca2fdb8218"],
Cell[7791, 250, 177, 3, 43, "Input",ExpressionUUID->"06af01b3-ee5a-4ed4-a0e2-a51576e695ca"],
Cell[CellGroupData[{
Cell[7993, 257, 362, 7, 43, "Input",ExpressionUUID->"704f9690-ec37-45ea-9880-2c3f947c5f47"],
Cell[8358, 266, 2050, 57, 165, "Output",ExpressionUUID->"ae07b70c-3ea0-4abd-82ee-5ed51f489895"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10457, 329, 1163, 31, 89, "Subsubsection",ExpressionUUID->"73fc71e3-931d-4d2b-a3f5-5bae5d62112d"],
Cell[11623, 362, 307, 5, 102, "Input",ExpressionUUID->"8b8bf592-7376-41cc-a405-05168bf7a636"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11967, 372, 264, 4, 99, "Section",ExpressionUUID->"c9ec25f2-c14c-45c0-a4ba-f684a822007b"],
Cell[CellGroupData[{
Cell[12256, 380, 684, 19, 43, "Input",ExpressionUUID->"c8e36f9f-d63f-4f2b-9e92-7512e4bda1f1"],
Cell[12943, 401, 721, 20, 73, "Output",ExpressionUUID->"39bd2c82-dece-4886-87d7-2adfcbdd82fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13701, 426, 314, 6, 43, "Input",ExpressionUUID->"6128858c-afa4-459c-aadf-f8a73101e821"],
Cell[14018, 434, 2070, 58, 165, "Output",ExpressionUUID->"9fe7d5a9-a257-417b-aa2e-e4f12de545a9"]
}, Open  ]],
Cell[16103, 495, 1177, 31, 89, "Subsubsection",ExpressionUUID->"ac4645d9-3a03-40c0-8b4d-0188629d63a9"],
Cell[CellGroupData[{
Cell[17305, 530, 384, 9, 169, "Subsubsection",ExpressionUUID->"29d26087-d245-4f5f-a47d-722a29ecb41b"],
Cell[CellGroupData[{
Cell[17714, 543, 1282, 29, 43, "Input",ExpressionUUID->"989fbc8c-af8f-4b2e-91ac-bb2b992cc46a"],
Cell[18999, 574, 2873, 79, 122, "Output",ExpressionUUID->"f3730479-5b92-444b-a701-166d6f3a3237"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21921, 659, 245, 6, 67, "Subsubsection",ExpressionUUID->"907bb304-fea4-4b36-85ea-61c932743d16"],
Cell[22169, 667, 1918, 46, 127, "Input",ExpressionUUID->"a7e84e10-9aae-49bf-b07f-762dcacf210c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24124, 718, 248, 5, 106, "Subsubsection",ExpressionUUID->"513e8375-978e-45df-adbd-880c88cc80b0"],
Cell[CellGroupData[{
Cell[24397, 727, 1330, 29, 43, "Input",ExpressionUUID->"dcd48317-9ff1-420b-b355-1555131d4554"],
Cell[25730, 758, 2165, 62, 165, "Output",ExpressionUUID->"846191ea-b63d-4e16-bf2a-7b02bb7cdfae"]
}, Open  ]],
Cell[27910, 823, 1528, 39, 76, "Input",ExpressionUUID->"3314d7d1-085a-44ec-bc6d-63d4d6197b45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29475, 867, 253, 6, 67, "Subsubsection",ExpressionUUID->"9a3b4e99-fb2c-4937-bcbb-8d3a3b1222ae"],
Cell[CellGroupData[{
Cell[29753, 877, 2945, 61, 73, "Input",ExpressionUUID->"835f93aa-e8ee-4d20-a51f-59a20fb6965d"],
Cell[32701, 940, 31672, 590, 395, "Output",ExpressionUUID->"00654366-f054-4fcd-8515-77b884e9fa32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64410, 1535, 2039, 50, 73, "Input",ExpressionUUID->"0737b33a-fc96-4296-bb90-224e068a9990"],
Cell[66452, 1587, 24206, 472, 395, "Output",ExpressionUUID->"ae0328b3-0093-4e81-95f0-422038251df8"],
Cell[90661, 2061, 24184, 472, 395, "Output",ExpressionUUID->"dfa25530-e664-4ac7-95c3-1221cd16cd77"],
Cell[114848, 2535, 24158, 471, 395, "Output",ExpressionUUID->"94b8ea23-51f4-4e7b-9997-54be7d236932"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139067, 3013, 291, 8, 209, "Section",ExpressionUUID->"7c0663a9-0bcc-4e05-8513-bb0586d351ca"],
Cell[139361, 3023, 664, 16, 43, "Input",ExpressionUUID->"c21b3c9d-2da3-435c-a90d-3f4290d5a279"],
Cell[140028, 3041, 457, 12, 43, "Input",ExpressionUUID->"c4042034-4dd7-4545-bba5-349fc2596963"],
Cell[140488, 3055, 500, 13, 43, "Input",ExpressionUUID->"5d8c22ea-b8b2-4369-b8aa-76845e99cd0c"],
Cell[CellGroupData[{
Cell[141013, 3072, 266, 6, 67, "Subsubsection",ExpressionUUID->"6c1c7207-5cfb-462c-843a-0515ce08453a"],
Cell[CellGroupData[{
Cell[141304, 3082, 1212, 32, 43, "Input",ExpressionUUID->"bafc15dc-cdf1-4216-aa3e-608ff0ec97d1"],
Cell[142519, 3116, 1097, 27, 79, "Output",ExpressionUUID->"430bb28a-fdde-48db-a691-11bc6226add6"]
}, Open  ]],
Cell[143631, 3146, 1003, 29, 43, "Input",ExpressionUUID->"e3c0f7de-7ff1-4c19-b8c6-dde147d2faa5"],
Cell[144637, 3177, 1000, 29, 73, "Input",ExpressionUUID->"cb6280d7-1ee4-4216-b942-4220f6c22511"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145674, 3211, 186, 3, 67, "Subsubsection",ExpressionUUID->"a0c3c8ce-b9e4-435c-b509-403f6ace3fdc"],
Cell[CellGroupData[{
Cell[145885, 3218, 393, 11, 43, "Input",ExpressionUUID->"ad49c0d0-1ba6-413c-9791-9e19f5aa9027"],
Cell[146281, 3231, 389, 8, 49, "Output",ExpressionUUID->"50917005-7717-4854-808a-c4c50d25575a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[146719, 3245, 166, 3, 67, "Subsubsection",ExpressionUUID->"f7e9ffe8-7c49-4485-8611-ccc2a9dae6a2"],
Cell[CellGroupData[{
Cell[146910, 3252, 771, 21, 43, "Input",ExpressionUUID->"20ce8350-ea5a-477e-a9a9-e1a8ed54598a"],
Cell[147684, 3275, 437, 9, 78, "Output",ExpressionUUID->"d72203b5-4536-4242-9996-d57aa25e6691"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148158, 3289, 584, 14, 43, "Input",ExpressionUUID->"f6b6e891-66f4-45e8-a86d-8c4620982fc6"],
Cell[148745, 3305, 349, 8, 54, "Output",ExpressionUUID->"10be6a74-04bc-4e43-aa7a-559644562de7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149143, 3319, 164, 3, 67, "Subsubsection",ExpressionUUID->"5023bb71-e90d-4674-9847-b688241cd246"],
Cell[CellGroupData[{
Cell[149332, 3326, 824, 21, 43, "Input",ExpressionUUID->"71efd05c-d428-403e-9a5c-5b2353620aa3"],
Cell[150159, 3349, 572, 11, 78, "Output",ExpressionUUID->"6ed09452-e2ca-47d8-bea9-b1aa34c3147e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150768, 3365, 469, 12, 43, "Input",ExpressionUUID->"6c8344eb-f8f5-4e98-a84e-4ff5321da363"],
Cell[151240, 3379, 571, 12, 35, "Message",ExpressionUUID->"e71a671d-72d0-4678-beb3-351fc3320cc8"],
Cell[151814, 3393, 389, 9, 49, "Output",ExpressionUUID->"a411601f-7785-4dad-919f-216add9ab377"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152252, 3408, 224, 6, 106, "Subsubsection",ExpressionUUID->"14d1d46f-c7fa-41c3-87f3-7d995ce5d62d"],
Cell[CellGroupData[{
Cell[152501, 3418, 2175, 43, 73, "Input",ExpressionUUID->"ea29ca4f-00bf-476f-8539-562fe086d75a"],
Cell[154679, 3463, 21773, 414, 395, "Output",ExpressionUUID->"fee563e5-8602-446c-9429-0b5d0b5cfa8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176489, 3882, 1134, 30, 73, "Input",ExpressionUUID->"51b25d78-7f2f-4b5c-9b17-1c667c144a3d"],
Cell[177626, 3914, 33896, 613, 395, "Output",ExpressionUUID->"bfc63e2c-97af-43f6-9273-6163f8ea44f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211583, 4534, 322, 7, 154, "Section",ExpressionUUID->"35de4675-167f-4f34-aa09-774665bc919a"],
Cell[CellGroupData[{
Cell[211930, 4545, 36342, 604, 370, "Input",ExpressionUUID->"b244cefa-f4fa-4393-aee2-59607386d520"],
Cell[248275, 5151, 29204, 483, 176, "Output",ExpressionUUID->"9eb298ec-ac6e-41b4-bbf1-432a823d954f"],
Cell[277482, 5636, 7230, 123, 168, "Output",ExpressionUUID->"d9919de5-da00-4255-abd8-209953ece96a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284749, 5764, 189, 3, 67, "Subsubsection",ExpressionUUID->"e000a38e-33db-4945-9e52-f631482081fa"],
Cell[284941, 5769, 612, 15, 43, "Input",ExpressionUUID->"00e0ea39-47fe-4ef9-9db4-3a93ebf1e64d"],
Cell[285556, 5786, 508, 13, 43, "Input",ExpressionUUID->"6ebe2857-44e8-4764-984f-8bf5576a97a1"],
Cell[286067, 5801, 550, 14, 43, "Input",ExpressionUUID->"a23d8797-167f-4bb9-8c71-e12719204c3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286654, 5820, 292, 6, 106, "Subsubsection",ExpressionUUID->"0398001e-1e2b-4685-a7be-e16c257fb9f3"],
Cell[CellGroupData[{
Cell[286971, 5830, 388, 10, 43, "Input",ExpressionUUID->"38526f52-4989-4dd3-9e13-13264e7f44b1"],
Cell[287362, 5842, 266, 4, 49, "Output",ExpressionUUID->"0322de42-2099-47f6-ab46-4fa36f6086bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287665, 5851, 387, 10, 43, "Input",ExpressionUUID->"d6b66d16-75e4-496a-bd56-de998b28e5b3"],
Cell[288055, 5863, 241, 4, 49, "Output",ExpressionUUID->"e30c1438-087e-49de-91d0-d7ead8f57e3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288333, 5872, 314, 7, 43, "Input",ExpressionUUID->"667ceab6-eb9b-44d8-b1c8-225732e0e4c7"],
Cell[288650, 5881, 206, 4, 49, "Output",ExpressionUUID->"bbbed1dc-7afd-4d89-ac83-4d7aa6cb441c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[288905, 5891, 213, 4, 67, "Subsubsection",ExpressionUUID->"6d191fab-8b06-48a4-aedf-b7d9d46721c9"],
Cell[CellGroupData[{
Cell[289143, 5899, 300, 7, 43, "Input",ExpressionUUID->"99c71503-002e-4ad3-908b-1d4cd266d81c"],
Cell[289446, 5908, 330, 8, 49, "Output",ExpressionUUID->"e6e63a49-c6e6-42a4-a0d8-7e82945332a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289813, 5921, 353, 8, 43, "Input",ExpressionUUID->"db639953-c99b-4176-afa0-0c697addb6dd"],
Cell[290169, 5931, 327, 8, 49, "Output",ExpressionUUID->"e2e6f36f-6aaf-401f-83aa-9e4e9f0aae1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290533, 5944, 676, 19, 43, "Input",ExpressionUUID->"eb7bcb16-4976-4152-91f7-994097b973e2"],
Cell[291212, 5965, 322, 6, 49, "Output",ExpressionUUID->"e2dc859f-9702-42d1-b7a4-d158a4e23e5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291571, 5976, 293, 7, 43, "Input",ExpressionUUID->"729410fd-8f71-429c-ad89-4842a2d44018"],
Cell[291867, 5985, 264, 5, 49, "Output",ExpressionUUID->"047a27bd-aeae-4103-a8c4-355742c6c87b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[292180, 5996, 167, 3, 67, "Subsubsection",ExpressionUUID->"ea598fb5-b8ec-402e-9d4b-f9f159482411"],
Cell[CellGroupData[{
Cell[292372, 6003, 349, 8, 43, "Input",ExpressionUUID->"88cb97e5-7d9c-4061-ba7d-440c8509a70f"],
Cell[292724, 6013, 351, 8, 49, "Output",ExpressionUUID->"036051de-d967-4519-9b27-a19d82e750f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293112, 6026, 406, 9, 43, "Input",ExpressionUUID->"36a07327-8cea-46a9-ad9f-a7bad383e234"],
Cell[293521, 6037, 354, 8, 49, "Output",ExpressionUUID->"3082621d-6d6d-4645-929d-dcb69c79ab2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293912, 6050, 725, 20, 43, "Input",ExpressionUUID->"5fdedaf0-cde4-486b-aefe-27526cf2c75a"],
Cell[294640, 6072, 371, 6, 49, "Output",ExpressionUUID->"5c2b6d05-3c23-4a4f-ad8b-61287e1cb2ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295048, 6083, 395, 9, 43, "Input",ExpressionUUID->"a5e2f878-1c2d-45a4-ada7-1769ede0b861"],
Cell[295446, 6094, 312, 6, 49, "Output",ExpressionUUID->"afc17174-c319-44cf-882f-04adc927d059"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295807, 6106, 168, 3, 67, "Subsubsection",ExpressionUUID->"5ab6ca5a-b95c-4bc1-a948-dd9862719940"],
Cell[CellGroupData[{
Cell[296000, 6113, 359, 8, 43, "Input",ExpressionUUID->"899db605-101f-4dbd-9481-0248759eb4aa"],
Cell[296362, 6123, 354, 8, 49, "Output",ExpressionUUID->"fc170580-daca-478a-a63f-0011927e762c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296753, 6136, 410, 9, 43, "Input",ExpressionUUID->"6c305a34-7f80-4e6f-bec0-1ae104b801b2"],
Cell[297166, 6147, 352, 8, 49, "Output",ExpressionUUID->"cdaf3ade-83d6-4727-9e28-6eb17103106c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297555, 6160, 750, 20, 43, "Input",ExpressionUUID->"1eb80ca3-7975-4180-9e21-9d5dff39c5d7"],
Cell[298308, 6182, 343, 6, 49, "Output",ExpressionUUID->"5d556e1a-65e5-48ca-8ca5-2839d4367b3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298688, 6193, 409, 9, 43, "Input",ExpressionUUID->"3b085dd5-a714-4adf-8e01-ee544a639c55"],
Cell[299100, 6204, 314, 6, 49, "Output",ExpressionUUID->"cca0848c-6f71-4d47-8f5d-06240f2beb49"]
}, Open  ]]
}, Open  ]],
Cell[299441, 6214, 172, 3, 67, "Subsubsection",ExpressionUUID->"d6950ed0-f2c7-42df-9ade-651534ceda70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299650, 6222, 184, 6, 154, "Section",ExpressionUUID->"06a89204-65ba-4181-a44f-6b4d70b6fb3c"],
Cell[CellGroupData[{
Cell[299859, 6232, 623, 17, 43, "Input",ExpressionUUID->"b6cd0e38-ee77-43c9-8bae-e50b9c4b998e"],
Cell[300485, 6251, 474, 12, 68, "Output",ExpressionUUID->"0bdb60b9-692d-4348-9cb8-70cc7c35cf83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300996, 6268, 671, 18, 43, "Input",ExpressionUUID->"65ba1fdc-08bb-4ed0-ae2b-688b932b467a"],
Cell[301670, 6288, 342, 10, 68, "Output",ExpressionUUID->"0f70253d-e07c-4d80-9ceb-5275b10e71cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302049, 6303, 643, 17, 43, "Input",ExpressionUUID->"b38b2c7a-f090-490e-87d9-7725b2fe8e89"],
Cell[302695, 6322, 344, 10, 68, "Output",ExpressionUUID->"86bea3e3-836b-4549-98fc-305aa69e2c38"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[303088, 6338, 218, 4, 99, "Section",ExpressionUUID->"090c4dc9-37ef-45f2-9fdb-9d8c7ec4437a"],
Cell[CellGroupData[{
Cell[303331, 6346, 727, 19, 43, "Input",ExpressionUUID->"af7d3f2d-9e4c-4a33-8ab7-ad3cecb3efd1"],
Cell[304061, 6367, 471, 12, 68, "Output",ExpressionUUID->"23bea7f3-5e18-4875-abb7-d5c38403c706"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304569, 6384, 770, 19, 43, "Input",ExpressionUUID->"e5c6221d-148d-4ce3-b3db-10ebf2e8eb2c"],
Cell[305342, 6405, 370, 10, 68, "Output",ExpressionUUID->"05509a4b-2f6a-4706-8827-ba477c806fd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305749, 6420, 694, 18, 43, "Input",ExpressionUUID->"0a20559e-5d61-4255-ac4c-05f87052f419"],
Cell[306446, 6440, 399, 11, 68, "Output",ExpressionUUID->"d82d3993-ad73-444f-a529-1e7313b9db35"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306894, 6457, 255, 4, 99, "Section",ExpressionUUID->"4b97ca74-11b0-424c-923a-f909f5386f95"],
Cell[307152, 6463, 158833, 2608, 770, "Text",ExpressionUUID->"a1135dc9-a44d-4849-ac45-c4b9fa6fb74a"],
Cell[CellGroupData[{
Cell[466010, 9075, 177, 3, 43, "Input",ExpressionUUID->"d3b2d435-f164-4d45-bdf8-6412f0338ab5"],
Cell[466190, 9080, 30692, 577, 395, "Output",ExpressionUUID->"a8109f74-d14a-4c32-9597-f994bfc7034f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496919, 9662, 179, 3, 43, "Input",ExpressionUUID->"51d28eb0-adc8-45cd-a2db-4e9be04730dd"],
Cell[497101, 9667, 23813, 465, 395, "Output",ExpressionUUID->"591cff42-f5cb-4bd8-8685-0310e144b14d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

